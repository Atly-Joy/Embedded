

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 25 12:21:40 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33   000000                     
    34                           ; Generated 17/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4580 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     _RC1	set	31761
    69   000000                     _GO	set	32273
    70   000000                     _TRISA	set	3986
    71   000000                     _RC0	set	31760
    72   000000                     _TRISC	set	3988
    73   000000                     _ADCON2	set	4032
    74   000000                     _ADCON1	set	4033
    75   000000                     _ADCON0	set	4034
    76   000000                     _TRISD	set	3989
    77   000000                     _ADIF	set	31990
    78   000000                     _ADRES	set	4035
    79   000000                     _PORTD	set	3971
    80                           
    81                           	psect	mediumconst
    82   007EF4                     __pmediumconst:
    83                           	callstack 0
    84   007EF4  00                 	db	0
    85   007EF5                     STR_1:
    86   007EF5  74                 	db	116	;'t'
    87   007EF6  65                 	db	101	;'e'
    88   007EF7  6D                 	db	109	;'m'
    89   007EF8  70                 	db	112	;'p'
    90   007EF9  3D                 	db	61	;'='
    91   007EFA  25                 	db	37
    92   007EFB  34                 	db	52	;'4'
    93   007EFC  64                 	db	100	;'d'
    94   007EFD  00                 	db	0
    95   007EFE  00                 	db	0	; dummy byte at the end
    96   000000                     
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100   006F48                     __pcinit:
   101                           	callstack 0
   102   006F48                     start_initialization:
   103                           	callstack 0
   104   006F48                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Clear objects allocated to BANK0 (32 bytes)
   108   006F48  EE00  F060         	lfsr	0,__pbssBANK0
   109   006F4C  0E20               	movlw	32
   110   006F4E                     clear_0:
   111   006F4E  6AEE               	clrf	postinc0,c
   112   006F50  06E8               	decf	wreg,f,c
   113   006F52  E1FD               	bnz	clear_0
   114                           
   115                           ; Clear objects allocated to COMRAM (11 bytes)
   116   006F54  EE00  F052         	lfsr	0,__pbssCOMRAM
   117   006F58  0E0B               	movlw	11
   118   006F5A                     clear_1:
   119   006F5A  6AEE               	clrf	postinc0,c
   120   006F5C  06E8               	decf	wreg,f,c
   121   006F5E  E1FD               	bnz	clear_1
   122   006F60                     end_of_initialization:
   123                           	callstack 0
   124   006F60                     __end_of__initialization:
   125                           	callstack 0
   126   006F60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   127   006F62  6EF8               	movwf	tblptru,c
   128   006F64  0100               	movlb	0
   129   006F66  EF57  F03A         	goto	_main	;jump to C main() function
   130                           
   131                           	psect	bssCOMRAM
   132   000052                     __pbssCOMRAM:
   133                           	callstack 0
   134   000052                     _width:
   135                           	callstack 0
   136   000052                     	ds	2
   137   000054                     _prec:
   138                           	callstack 0
   139   000054                     	ds	2
   140   000056                     _temp:
   141                           	callstack 0
   142   000056                     	ds	2
   143   000058                     _result:
   144                           	callstack 0
   145   000058                     	ds	2
   146   00005A                     _adc:
   147                           	callstack 0
   148   00005A                     	ds	2
   149   00005C                     _flags:
   150                           	callstack 0
   151   00005C                     	ds	1
   152                           
   153                           	psect	bssBANK0
   154   000060                     __pbssBANK0:
   155                           	callstack 0
   156   000060                     _dbuf:
   157                           	callstack 0
   158   000060                     	ds	32
   159                           
   160                           	psect	cstackCOMRAM
   161   000001                     __pcstackCOMRAM:
   162                           	callstack 0
   163   000001                     ?___wmul:
   164                           	callstack 0
   165   000001                     ?___awdiv:
   166                           	callstack 0
   167   000001                     ?___awmod:
   168                           	callstack 0
   169   000001                     ?___xxtofl:
   170                           	callstack 0
   171   000001                     ___wmul@multiplier:
   172                           	callstack 0
   173   000001                     ___awdiv@dividend:
   174                           	callstack 0
   175   000001                     ___awmod@dividend:
   176                           	callstack 0
   177   000001                     fputc@c:
   178                           	callstack 0
   179   000001                     delay@j:
   180                           	callstack 0
   181   000001                     ___xxtofl@val:
   182                           	callstack 0
   183                           
   184                           ; 4 bytes @ 0x0
   185   000001                     	ds	2
   186   000003                     fputc@fp:
   187                           	callstack 0
   188   000003                     ___wmul@multiplicand:
   189                           	callstack 0
   190   000003                     ___awdiv@divisor:
   191                           	callstack 0
   192   000003                     ___awmod@divisor:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x2
   196   000003                     	ds	1
   197   000004                     ??_fputc:
   198                           
   199                           ; 1 bytes @ 0x3
   200   000004                     	ds	1
   201   000005                     ??_delay:
   202   000005                     ??___xxtofl:
   203   000005                     ___awdiv@counter:
   204                           	callstack 0
   205   000005                     ___awmod@counter:
   206                           	callstack 0
   207   000005                     ___wmul@product:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x4
   211   000005                     	ds	1
   212   000006                     ___awdiv@sign:
   213                           	callstack 0
   214   000006                     ___awmod@sign:
   215                           	callstack 0
   216   000006                     delay@i:
   217                           	callstack 0
   218                           
   219                           ; 4 bytes @ 0x5
   220   000006                     	ds	1
   221   000007                     ?_abs:
   222                           	callstack 0
   223   000007                     ?_read_prec_or_width:
   224                           	callstack 0
   225   000007                     read_prec_or_width@fmt:
   226                           	callstack 0
   227   000007                     ___awdiv@quotient:
   228                           	callstack 0
   229   000007                     abs@a:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x6
   233   000007                     	ds	1
   234   000008                     read_prec_or_width@ap:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x7
   238   000008                     	ds	1
   239   000009                     ??_abs:
   240   000009                     ___xxtofl@sign:
   241                           	callstack 0
   242   000009                     read_prec_or_width@c:
   243                           	callstack 0
   244   000009                     fputs@s:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x8
   248   000009                     	ds	1
   249   00000A                     cmd@a:
   250                           	callstack 0
   251   00000A                     data@a:
   252                           	callstack 0
   253   00000A                     ___xxtofl@exp:
   254                           	callstack 0
   255   00000A                     fputs@fp:
   256                           	callstack 0
   257   00000A                     read_prec_or_width@n:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x9
   261   00000A                     	ds	1
   262   00000B                     display@p:
   263                           	callstack 0
   264   00000B                     fputs@c:
   265                           	callstack 0
   266   00000B                     ___xxtofl@arg:
   267                           	callstack 0
   268                           
   269                           ; 4 bytes @ 0xA
   270   00000B                     	ds	1
   271   00000C                     fputs@i:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0xB
   275   00000C                     	ds	2
   276   00000E                     pad@fp:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0xD
   280   00000E                     	ds	1
   281   00000F                     ?___flmul:
   282                           	callstack 0
   283   00000F                     pad@buf:
   284                           	callstack 0
   285   00000F                     ___flmul@b:
   286                           	callstack 0
   287                           
   288                           ; 4 bytes @ 0xE
   289   00000F                     	ds	1
   290   000010                     pad@p:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xF
   294   000010                     	ds	2
   295   000012                     ??_pad:
   296                           
   297                           ; 1 bytes @ 0x11
   298   000012                     	ds	1
   299   000013                     pad@i:
   300                           	callstack 0
   301   000013                     ___flmul@a:
   302                           	callstack 0
   303                           
   304                           ; 4 bytes @ 0x12
   305   000013                     	ds	2
   306   000015                     dtoa@fp:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x14
   310   000015                     	ds	1
   311   000016                     dtoa@d:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x15
   315   000016                     	ds	1
   316   000017                     ??___flmul:
   317                           
   318                           ; 1 bytes @ 0x16
   319   000017                     	ds	1
   320   000018                     _dtoa$593:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x17
   324   000018                     	ds	2
   325   00001A                     dtoa@w:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x19
   329   00001A                     	ds	1
   330   00001B                     ___flmul@sign:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x1A
   334   00001B                     	ds	1
   335   00001C                     dtoa@p:
   336                           	callstack 0
   337   00001C                     ___flmul@grs:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x1B
   341   00001C                     	ds	1
   342   00001D                     dtoa@s:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x1C
   346   00001D                     	ds	1
   347   00001E                     dtoa@i:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x1D
   351   00001E                     	ds	2
   352   000020                     ___flmul@aexp:
   353                           	callstack 0
   354   000020                     vfpfcnvrt@fp:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x1F
   358   000020                     	ds	1
   359   000021                     ___flmul@bexp:
   360                           	callstack 0
   361   000021                     vfpfcnvrt@fmt:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x20
   365   000021                     	ds	1
   366   000022                     vfpfcnvrt@ap:
   367                           	callstack 0
   368   000022                     ___flmul@prod:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x21
   372   000022                     	ds	1
   373   000023                     ??_vfpfcnvrt:
   374                           
   375                           ; 1 bytes @ 0x22
   376   000023                     	ds	2
   377   000025                     vfpfcnvrt@convarg:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0x24
   381   000025                     	ds	1
   382   000026                     ___flmul@temp:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x25
   386   000026                     	ds	2
   387   000028                     ?___fltol:
   388                           	callstack 0
   389   000028                     ___fltol@f1:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x27
   393   000028                     	ds	1
   394   000029                     vfpfcnvrt@cp:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x28
   398   000029                     	ds	2
   399   00002B                     ?_vfprintf:
   400                           	callstack 0
   401   00002B                     vfprintf@fp:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x2A
   405   00002B                     	ds	1
   406   00002C                     ??___fltol:
   407   00002C                     vfprintf@fmt:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x2B
   411   00002C                     	ds	2
   412   00002E                     vfprintf@ap:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x2D
   416   00002E                     	ds	1
   417   00002F                     vfprintf@cfmt:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x2E
   421   00002F                     	ds	1
   422   000030                     ___fltol@sign1:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x2F
   426   000030                     	ds	1
   427   000031                     ?_sprintf:
   428                           	callstack 0
   429   000031                     ___fltol@exp1:
   430                           	callstack 0
   431   000031                     sprintf@s:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x30
   435   000031                     	ds	1
   436   000032                     sprintf@fmt:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x31
   440   000032                     	ds	4
   441   000036                     sprintf@ap:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x35
   445   000036                     	ds	1
   446   000037                     sprintf@f:
   447                           	callstack 0
   448                           
   449                           ; 12 bytes @ 0x36
   450   000037                     	ds	12
   451   000043                     main@cnv:
   452                           	callstack 0
   453                           
   454                           ; 15 bytes @ 0x42
   455   000043                     	ds	15
   456                           
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 21 in file "Temp_Adc.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;  cnv            15   66[COMRAM] unsigned char [15]
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   476 ;;      Params:         0       0       0       0       0       0       0
   477 ;;      Locals:        15       0       0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0       0       0
   479 ;;      Totals:        15       0       0       0       0       0       0
   480 ;;Total ram usage:       15 bytes
   481 ;; Hardware stack levels required when called: 8
   482 ;; This function calls:
   483 ;;		___flmul
   484 ;;		___fltol
   485 ;;		___xxtofl
   486 ;;		_cmd
   487 ;;		_delay
   488 ;;		_display
   489 ;;		_sprintf
   490 ;; This function is called by:
   491 ;;		Startup code after reset
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text0
   496   0074AE                     __ptext0:
   497                           	callstack 0
   498   0074AE                     _main:
   499                           	callstack 23
   500   0074AE                     
   501                           ;Temp_Adc.c: 23:     TRISA=0x02;
   502   0074AE  0E02               	movlw	2
   503   0074B0  6E92               	movwf	146,c	;volatile
   504                           
   505                           ;Temp_Adc.c: 24:     TRISC=0x00;
   506   0074B2  0E00               	movlw	0
   507   0074B4  6E94               	movwf	148,c	;volatile
   508                           
   509                           ;Temp_Adc.c: 25:     TRISD=0x00;
   510   0074B6  0E00               	movlw	0
   511   0074B8  6E95               	movwf	149,c	;volatile
   512   0074BA                     
   513                           ;Temp_Adc.c: 26:     cmd(0x01);
   514   0074BA  0E01               	movlw	1
   515   0074BC  ECF7  F037         	call	_cmd
   516   0074C0                     
   517                           ;Temp_Adc.c: 27:     cmd(0x0f);
   518   0074C0  0E0F               	movlw	15
   519   0074C2  ECF7  F037         	call	_cmd
   520                           
   521                           ;Temp_Adc.c: 28:     ADCON0=0X05;
   522   0074C6  0E05               	movlw	5
   523   0074C8  6EC2               	movwf	194,c	;volatile
   524                           
   525                           ;Temp_Adc.c: 29:     ADCON1=0X00;
   526   0074CA  0E00               	movlw	0
   527   0074CC  6EC1               	movwf	193,c	;volatile
   528                           
   529                           ;Temp_Adc.c: 30:     ADCON2=0x86;
   530   0074CE  0E86               	movlw	134
   531   0074D0  6EC0               	movwf	192,c	;volatile
   532   0074D2                     l1878:
   533                           
   534                           ;Temp_Adc.c: 32:     {;Temp_Adc.c: 34:         char cnv[15];;Temp_Adc.c: 35:         del
      +                          ay(100);
   535   0074D2  0E64               	movlw	100
   536   0074D4  6E01               	movwf	delay@j^0,c
   537   0074D6  0E00               	movlw	0
   538   0074D8  6E02               	movwf	(delay@j+1)^0,c
   539   0074DA  0E00               	movlw	0
   540   0074DC  6E03               	movwf	(delay@j+2)^0,c
   541   0074DE  0E00               	movlw	0
   542   0074E0  6E04               	movwf	(delay@j+3)^0,c
   543   0074E2  EC88  F038         	call	_delay	;wreg free
   544   0074E6                     
   545                           ;Temp_Adc.c: 36:         GO=1;
   546   0074E6  82C2               	bsf	4034,1,c	;volatile
   547   0074E8                     l44:
   548   0074E8  AC9E               	btfss	3998,6,c	;volatile
   549   0074EA  EF79  F03A         	goto	u1531
   550   0074EE  EF7B  F03A         	goto	u1530
   551   0074F2                     u1531:
   552   0074F2  EF74  F03A         	goto	l44
   553   0074F6                     u1530:
   554   0074F6                     
   555                           ;Temp_Adc.c: 38:         ADIF=0;
   556   0074F6  9C9E               	bcf	3998,6,c	;volatile
   557                           
   558                           ;Temp_Adc.c: 39:         adc=ADRES;
   559   0074F8  CFC3 F05A          	movff	4035,_adc	;volatile
   560   0074FC  CFC4 F05B          	movff	4036,_adc+1	;volatile
   561   007500                     
   562                           ;Temp_Adc.c: 40:         result = 0 + ((float)(150ul - 0) / (308ul - 0)) * (adc - 0);
   563   007500  0EC4               	movlw	196
   564   007502  6E13               	movwf	___flmul@a^0,c
   565   007504  0E59               	movlw	89
   566   007506  6E14               	movwf	(___flmul@a+1)^0,c
   567   007508  0EF9               	movlw	249
   568   00750A  6E15               	movwf	(___flmul@a+2)^0,c
   569   00750C  0E3E               	movlw	62
   570   00750E  6E16               	movwf	(___flmul@a+3)^0,c
   571   007510  C05A  F001         	movff	_adc,___xxtofl@val
   572   007514  C05B  F002         	movff	_adc+1,___xxtofl@val+1
   573   007518  0E00               	movlw	0
   574   00751A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   575   00751C  0EFF               	movlw	-1
   576   00751E  6E03               	movwf	(___xxtofl@val+2)^0,c
   577   007520  6E04               	movwf	(___xxtofl@val+3)^0,c
   578   007522  0E01               	movlw	1
   579   007524  EC8B  F03C         	call	___xxtofl
   580   007528  C001  F00F         	movff	?___xxtofl,___flmul@b
   581   00752C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   582   007530  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   583   007534  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   584   007538  EC65  F03D         	call	___flmul	;wreg free
   585   00753C  C00F  F028         	movff	?___flmul,___fltol@f1
   586   007540  C010  F029         	movff	?___flmul+1,___fltol@f1+1
   587   007544  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
   588   007548  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
   589   00754C  ECD3  F03A         	call	___fltol	;wreg free
   590   007550  C028  F058         	movff	?___fltol,_result
   591   007554  C029  F059         	movff	?___fltol+1,_result+1
   592   007558                     
   593                           ;Temp_Adc.c: 41:         sprintf(cnv,"temp=%4d",result);
   594   007558  0E43               	movlw	low main@cnv
   595   00755A  6E31               	movwf	sprintf@s^0,c
   596   00755C  0EF5               	movlw	low STR_1
   597   00755E  6E32               	movwf	sprintf@fmt^0,c
   598   007560  0E7E               	movlw	high STR_1
   599   007562  6E33               	movwf	(sprintf@fmt+1)^0,c
   600   007564  C058  F034         	movff	_result,?_sprintf+3
   601   007568  C059  F035         	movff	_result+1,?_sprintf+4
   602   00756C  EC2D  F038         	call	_sprintf	;wreg free
   603   007570                     
   604                           ;Temp_Adc.c: 42:         if(temp!=result)
   605   007570  5058               	movf	_result^0,w,c
   606   007572  1856               	xorwf	_temp^0,w,c
   607   007574  E109               	bnz	u1540
   608   007576  5059               	movf	(_result+1)^0,w,c
   609   007578  1857               	xorwf	(_temp+1)^0,w,c
   610   00757A  B4D8               	btfsc	status,2,c
   611   00757C  EFC2  F03A         	goto	u1541
   612   007580  EFC4  F03A         	goto	u1540
   613   007584                     u1541:
   614   007584  EF69  F03A         	goto	l1878
   615   007588                     u1540:
   616   007588                     
   617                           ;Temp_Adc.c: 43:         {;Temp_Adc.c: 44:             cmd(0x80);
   618   007588  0E80               	movlw	128
   619   00758A  ECF7  F037         	call	_cmd
   620   00758E                     
   621                           ;Temp_Adc.c: 45:             display(cnv);
   622   00758E  0E43               	movlw	low main@cnv
   623   007590  6E0B               	movwf	display@p^0,c
   624   007592  ECC8  F037         	call	_display	;wreg free
   625   007596                     
   626                           ;Temp_Adc.c: 46:             temp=result;
   627   007596  C058  F056         	movff	_result,_temp
   628   00759A  C059  F057         	movff	_result+1,_temp+1
   629   00759E  EF69  F03A         	goto	l1878
   630   0075A2  EF00  F000         	goto	start
   631   0075A6                     __end_of_main:
   632                           	callstack 0
   633                           
   634 ;; *************** function _sprintf *****************
   635 ;; Defined at:
   636 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  s               1   48[COMRAM] PTR unsigned char 
   639 ;;		 -> main@cnv(15), 
   640 ;;  fmt             2   49[COMRAM] PTR const unsigned char 
   641 ;;		 -> STR_1(9), 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  f              12   54[COMRAM] struct _IO_FILE
   644 ;;  ret             2    0        int 
   645 ;;  ap              1   53[COMRAM] PTR void [1]
   646 ;;		 -> ?_sprintf(2), 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  2   48[COMRAM] int 
   649 ;; Registers used:
   650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   656 ;;      Params:         5       0       0       0       0       0       0
   657 ;;      Locals:        13       0       0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0
   659 ;;      Totals:        18       0       0       0       0       0       0
   660 ;;Total ram usage:       18 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 7
   663 ;; This function calls:
   664 ;;		_vfprintf
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text1
   671   00705A                     __ptext1:
   672                           	callstack 0
   673   00705A                     _sprintf:
   674                           	callstack 23
   675   00705A  0E34               	movlw	low (?_sprintf+3)
   676   00705C  6E36               	movwf	sprintf@ap^0,c
   677   00705E  C031  F037         	movff	sprintf@s,sprintf@f
   678   007062  0E00               	movlw	0
   679   007064  6E3B               	movwf	(sprintf@f+4)^0,c
   680   007066  0E00               	movlw	0
   681   007068  6E3A               	movwf	(sprintf@f+3)^0,c
   682   00706A  0E00               	movlw	0
   683   00706C  6E42               	movwf	(sprintf@f+11)^0,c
   684   00706E  0E00               	movlw	0
   685   007070  6E41               	movwf	(sprintf@f+10)^0,c
   686   007072  0E37               	movlw	low sprintf@f
   687   007074  6E2B               	movwf	vfprintf@fp^0,c
   688   007076  C032  F02C         	movff	sprintf@fmt,vfprintf@fmt
   689   00707A  C033  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
   690   00707E  0E36               	movlw	low sprintf@ap
   691   007080  6E2E               	movwf	vfprintf@ap^0,c
   692   007082  EC67  F038         	call	_vfprintf	;wreg free
   693   007086  5031               	movf	sprintf@s^0,w,c
   694   007088  243A               	addwf	(sprintf@f+3)^0,w,c
   695   00708A  6ED9               	movwf	fsr2l,c
   696   00708C  6ADA               	clrf	fsr2h,c
   697   00708E  6ADF               	clrf	indf2,c
   698   007090  0012               	return		;funcret
   699   007092                     __end_of_sprintf:
   700                           	callstack 0
   701                           
   702 ;; *************** function _vfprintf *****************
   703 ;; Defined at:
   704 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
   707 ;;		 -> sprintf@f(12), 
   708 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
   709 ;;		 -> STR_1(9), 
   710 ;;  ap              1   45[COMRAM] PTR PTR void 
   711 ;;		 -> sprintf@ap(1), 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  cfmt            2   46[COMRAM] PTR unsigned char 
   714 ;;		 -> STR_1(9), 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  2   42[COMRAM] int 
   717 ;; Registers used:
   718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   724 ;;      Params:         4       0       0       0       0       0       0
   725 ;;      Locals:         2       0       0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0
   727 ;;      Totals:         6       0       0       0       0       0       0
   728 ;;Total ram usage:        6 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 6
   731 ;; This function calls:
   732 ;;		_vfpfcnvrt
   733 ;; This function is called by:
   734 ;;		_sprintf
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text2
   739   0070CE                     __ptext2:
   740                           	callstack 0
   741   0070CE                     _vfprintf:
   742                           	callstack 23
   743   0070CE                     
   744                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   745   0070CE  C02C  F02F         	movff	vfprintf@fmt,vfprintf@cfmt
   746   0070D2  C02D  F030         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   747                           
   748                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   749   0070D6  EF75  F038         	goto	l1614
   750   0070DA                     l1612:
   751                           
   752                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   753   0070DA  C02B  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
   754   0070DE  0E2F               	movlw	low vfprintf@cfmt
   755   0070E0  6E21               	movwf	vfpfcnvrt@fmt^0,c
   756   0070E2  C02E  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
   757   0070E6  EC56  F03B         	call	_vfpfcnvrt	;wreg free
   758   0070EA                     l1614:
   759                           
   760                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   761   0070EA  C02F  FFF6         	movff	vfprintf@cfmt,tblptrl
   762   0070EE  C030  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   763   0070F2                     	if	0	;tblptru may be non-zero
   764   0070F2                     	endif
   765   0070F2                     	if	0	;tblptru may be non-zero
   766   0070F2                     	endif
   767   0070F2  0008               	tblrd		*
   768   0070F4  50F5               	movf	tablat,w,c
   769   0070F6  0900               	iorlw	0
   770   0070F8  A4D8               	btfss	status,2,c
   771   0070FA  EF81  F038         	goto	u1151
   772   0070FE  EF83  F038         	goto	u1150
   773   007102                     u1151:
   774   007102  EF6D  F038         	goto	l1612
   775   007106                     u1150:
   776   007106                     
   777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   778   007106  0E00               	movlw	0
   779   007108  6E2C               	movwf	(?_vfprintf+1)^0,c
   780   00710A  0E00               	movlw	0
   781   00710C  6E2B               	movwf	?_vfprintf^0,c
   782   00710E  0012               	return		;funcret
   783   007110                     __end_of_vfprintf:
   784                           	callstack 0
   785                           
   786 ;; *************** function _vfpfcnvrt *****************
   787 ;; Defined at:
   788 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
   791 ;;		 -> sprintf@f(12), 
   792 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
   793 ;;		 -> vfprintf@cfmt(2), 
   794 ;;  ap              1   33[COMRAM] PTR PTR void 
   795 ;;		 -> sprintf@ap(1), 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  convarg         4   36[COMRAM] struct .
   798 ;;  cp              2   40[COMRAM] PTR unsigned char 
   799 ;;		 -> STR_1(9), 
   800 ;;  done            1    0        _Bool 
   801 ;;  c               1    0        unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         3       0       0       0       0       0       0
   812 ;;      Locals:         6       0       0       0       0       0       0
   813 ;;      Temps:          2       0       0       0       0       0       0
   814 ;;      Totals:        11       0       0       0       0       0       0
   815 ;;Total ram usage:       11 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 5
   818 ;; This function calls:
   819 ;;		_dtoa
   820 ;;		_fputc
   821 ;;		_read_prec_or_width
   822 ;; This function is called by:
   823 ;;		_vfprintf
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text3
   828   0076AC                     __ptext3:
   829                           	callstack 0
   830   0076AC                     _vfpfcnvrt:
   831                           	callstack 23
   832   0076AC                     
   833                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   834   0076AC  5021               	movf	vfpfcnvrt@fmt^0,w,c
   835   0076AE  6ED9               	movwf	fsr2l,c
   836   0076B0  6ADA               	clrf	fsr2h,c
   837   0076B2  CFDE FFF6          	movff	postinc2,tblptrl
   838   0076B6  CFDD FFF7          	movff	postdec2,tblptrh
   839   0076BA                     	if	0	;tblptru may be non-zero
   840   0076BA                     	endif
   841   0076BA                     	if	0	;tblptru may be non-zero
   842   0076BA                     	endif
   843   0076BA  0008               	tblrd		*
   844   0076BC  50F5               	movf	tablat,w,c
   845   0076BE  0A25               	xorlw	37
   846   0076C0  A4D8               	btfss	status,2,c
   847   0076C2  EF65  F03B         	goto	u1111
   848   0076C6  EF67  F03B         	goto	u1110
   849   0076CA                     u1111:
   850   0076CA  EFD9  F03B         	goto	l1592
   851   0076CE                     u1110:
   852   0076CE                     
   853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   854   0076CE  5021               	movf	vfpfcnvrt@fmt^0,w,c
   855   0076D0  6ED9               	movwf	fsr2l,c
   856   0076D2  6ADA               	clrf	fsr2h,c
   857   0076D4  2ADE               	incf	postinc2,f,c
   858   0076D6  0E00               	movlw	0
   859   0076D8  22DD               	addwfc	postdec2,f,c
   860   0076DA                     
   861                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   862   0076DA  0E00               	movlw	0
   863   0076DC  6E53               	movwf	(_width+1)^0,c
   864   0076DE  0E00               	movlw	0
   865   0076E0  6E52               	movwf	_width^0,c
   866   0076E2  C052  F05C         	movff	_width,_flags
   867   0076E6                     
   868                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   869   0076E6  6854               	setf	_prec^0,c
   870   0076E8  6855               	setf	(_prec+1)^0,c
   871   0076EA                     
   872                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
   873   0076EA  C021  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
   874   0076EE  C022  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
   875   0076F2  EC46  F039         	call	_read_prec_or_width	;wreg free
   876   0076F6  C007  F052         	movff	?_read_prec_or_width,_width
   877   0076FA  C008  F053         	movff	?_read_prec_or_width+1,_width+1
   878   0076FE                     
   879                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
   880   0076FE  BE53               	btfsc	(_width+1)^0,7,c
   881   007700  EF86  F03B         	goto	u1120
   882   007704  EF84  F03B         	goto	u1121
   883   007708                     u1121:
   884   007708  EF8B  F03B         	goto	l1574
   885   00770C                     u1120:
   886   00770C                     
   887                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
   888   00770C  805C               	bsf	_flags^0,0,c
   889                           
   890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
   891   00770E  6C52               	negf	_width^0,c
   892   007710  1E53               	comf	(_width+1)^0,f,c
   893   007712  B0D8               	btfsc	status,0,c
   894   007714  2A53               	incf	(_width+1)^0,f,c
   895   007716                     l1574:
   896                           
   897                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   898   007716  5021               	movf	vfpfcnvrt@fmt^0,w,c
   899   007718  6ED9               	movwf	fsr2l,c
   900   00771A  6ADA               	clrf	fsr2h,c
   901   00771C  CFDE F029          	movff	postinc2,vfpfcnvrt@cp
   902   007720  CFDD F02A          	movff	postdec2,vfpfcnvrt@cp+1
   903   007724                     
   904                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   905   007724  C029  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   906   007728  C02A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   907   00772C                     	if	0	;tblptru may be non-zero
   908   00772C                     	endif
   909   00772C                     	if	0	;tblptru may be non-zero
   910   00772C                     	endif
   911   00772C  0008               	tblrd		*
   912   00772E  50F5               	movf	tablat,w,c
   913   007730  0A64               	xorlw	100
   914   007732  B4D8               	btfsc	status,2,c
   915   007734  EF9E  F03B         	goto	u1131
   916   007738  EFA0  F03B         	goto	u1130
   917   00773C                     u1131:
   918   00773C  EFAE  F03B         	goto	l1580
   919   007740                     u1130:
   920   007740  C029  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   921   007744  C02A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   922   007748                     	if	0	;tblptru may be non-zero
   923   007748                     	endif
   924   007748                     	if	0	;tblptru may be non-zero
   925   007748                     	endif
   926   007748  0008               	tblrd		*
   927   00774A  50F5               	movf	tablat,w,c
   928   00774C  0A69               	xorlw	105
   929   00774E  A4D8               	btfss	status,2,c
   930   007750  EFAC  F03B         	goto	u1141
   931   007754  EFAE  F03B         	goto	u1140
   932   007758                     u1141:
   933   007758  EFD1  F03B         	goto	l1588
   934   00775C                     u1140:
   935   00775C                     l1580:
   936                           
   937                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   938   00775C  5022               	movf	vfpfcnvrt@ap^0,w,c
   939   00775E  6ED9               	movwf	fsr2l,c
   940   007760  6ADA               	clrf	fsr2h,c
   941   007762  0E02               	movlw	2
   942   007764  26DF               	addwf	indf2,f,c
   943   007766  5CDF               	subwf	indf2,w,c
   944   007768  6ED9               	movwf	fsr2l,c
   945   00776A  6ADA               	clrf	fsr2h,c
   946   00776C  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
   947   007770  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
   948   007774                     
   949                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
   950   007774  0E01               	movlw	1
   951   007776  2429               	addwf	vfpfcnvrt@cp^0,w,c
   952   007778  6E23               	movwf	??_vfpfcnvrt^0,c
   953   00777A  0E00               	movlw	0
   954   00777C  202A               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
   955   00777E  6E24               	movwf	(??_vfpfcnvrt+1)^0,c
   956   007780  5021               	movf	vfpfcnvrt@fmt^0,w,c
   957   007782  6ED9               	movwf	fsr2l,c
   958   007784  6ADA               	clrf	fsr2h,c
   959   007786  C023  FFDE         	movff	??_vfpfcnvrt,postinc2
   960   00778A  C024  FFDD         	movff	??_vfpfcnvrt+1,postdec2
   961   00778E                     
   962                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
   963   00778E  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
   964   007792  C025  F016         	movff	vfpfcnvrt@convarg,dtoa@d
   965   007796  C026  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
   966   00779A  ECEB  F03B         	call	_dtoa	;wreg free
   967   00779E  EFEA  F03B         	goto	l804
   968   0077A2                     l1588:
   969                           
   970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
   971   0077A2  5021               	movf	vfpfcnvrt@fmt^0,w,c
   972   0077A4  6ED9               	movwf	fsr2l,c
   973   0077A6  6ADA               	clrf	fsr2h,c
   974   0077A8  2ADE               	incf	postinc2,f,c
   975   0077AA  0E00               	movlw	0
   976   0077AC  22DD               	addwfc	postdec2,f,c
   977   0077AE  EFEA  F03B         	goto	l804
   978   0077B2                     l1592:
   979                           
   980                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
   981   0077B2  5021               	movf	vfpfcnvrt@fmt^0,w,c
   982   0077B4  6ED9               	movwf	fsr2l,c
   983   0077B6  6ADA               	clrf	fsr2h,c
   984   0077B8  CFDE FFF6          	movff	postinc2,tblptrl
   985   0077BC  CFDD FFF7          	movff	postdec2,tblptrh
   986   0077C0                     	if	0	;tblptru may be non-zero
   987   0077C0                     	endif
   988   0077C0                     	if	0	;tblptru may be non-zero
   989   0077C0                     	endif
   990   0077C0  0008               	tblrd		*
   991   0077C2  50F5               	movf	tablat,w,c
   992   0077C4  6E01               	movwf	fputc@c^0,c
   993   0077C6  6A02               	clrf	(fputc@c+1)^0,c
   994   0077C8  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
   995   0077CC  ECF1  F038         	call	_fputc	;wreg free
   996   0077D0  EFD1  F03B         	goto	l1588
   997   0077D4                     l804:
   998   0077D4  0012               	return		;funcret
   999   0077D6                     __end_of_vfpfcnvrt:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function _read_prec_or_width *****************
  1003 ;; Defined at:
  1004 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  1007 ;;		 -> vfprintf@cfmt(2), 
  1008 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  1009 ;;		 -> sprintf@ap(1), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  c               1    8[COMRAM] unsigned char 
  1012 ;;  n               2    9[COMRAM] int 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2    6[COMRAM] int 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1022 ;;      Params:         2       0       0       0       0       0       0
  1023 ;;      Locals:         3       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0
  1025 ;;      Totals:         5       0       0       0       0       0       0
  1026 ;;Total ram usage:        5 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; Hardware stack levels required when called: 1
  1029 ;; This function calls:
  1030 ;;		___wmul
  1031 ;; This function is called by:
  1032 ;;		_vfpfcnvrt
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text4
  1037   00728C                     __ptext4:
  1038                           	callstack 0
  1039   00728C                     _read_prec_or_width:
  1040                           	callstack 26
  1041   00728C                     
  1042                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1043   00728C  0E00               	movlw	0
  1044   00728E  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1045   007290  0E00               	movlw	0
  1046   007292  6E0A               	movwf	read_prec_or_width@n^0,c
  1047   007294                     
  1048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1049   007294  5007               	movf	read_prec_or_width@fmt^0,w,c
  1050   007296  6ED9               	movwf	fsr2l,c
  1051   007298  6ADA               	clrf	fsr2h,c
  1052   00729A  CFDE FFF6          	movff	postinc2,tblptrl
  1053   00729E  CFDD FFF7          	movff	postdec2,tblptrh
  1054   0072A2                     	if	0	;tblptru may be non-zero
  1055   0072A2                     	endif
  1056   0072A2                     	if	0	;tblptru may be non-zero
  1057   0072A2                     	endif
  1058   0072A2  0008               	tblrd		*
  1059   0072A4  50F5               	movf	tablat,w,c
  1060   0072A6  0A2A               	xorlw	42
  1061   0072A8  A4D8               	btfss	status,2,c
  1062   0072AA  EF59  F039         	goto	u1081
  1063   0072AE  EF5B  F039         	goto	u1080
  1064   0072B2                     u1081:
  1065   0072B2  EF85  F039         	goto	l1554
  1066   0072B6                     u1080:
  1067   0072B6                     
  1068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1069   0072B6  5007               	movf	read_prec_or_width@fmt^0,w,c
  1070   0072B8  6ED9               	movwf	fsr2l,c
  1071   0072BA  6ADA               	clrf	fsr2h,c
  1072   0072BC  2ADE               	incf	postinc2,f,c
  1073   0072BE  0E00               	movlw	0
  1074   0072C0  22DD               	addwfc	postdec2,f,c
  1075   0072C2                     
  1076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1077   0072C2  5008               	movf	read_prec_or_width@ap^0,w,c
  1078   0072C4  6ED9               	movwf	fsr2l,c
  1079   0072C6  6ADA               	clrf	fsr2h,c
  1080   0072C8  0E02               	movlw	2
  1081   0072CA  26DF               	addwf	indf2,f,c
  1082   0072CC  5CDF               	subwf	indf2,w,c
  1083   0072CE  6ED9               	movwf	fsr2l,c
  1084   0072D0  6ADA               	clrf	fsr2h,c
  1085   0072D2  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  1086   0072D6  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  1087                           
  1088                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1089   0072DA  EF98  F039         	goto	l792
  1090   0072DE                     l1550:
  1091                           
  1092                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1093   0072DE  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1094   0072E2  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1095   0072E6  0E00               	movlw	0
  1096   0072E8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1097   0072EA  0E0A               	movlw	10
  1098   0072EC  6E03               	movwf	___wmul@multiplicand^0,c
  1099   0072EE  ECB5  F037         	call	___wmul	;wreg free
  1100   0072F2  5009               	movf	read_prec_or_width@c^0,w,c
  1101   0072F4  2401               	addwf	?___wmul^0,w,c
  1102   0072F6  6E0A               	movwf	read_prec_or_width@n^0,c
  1103   0072F8  0E00               	movlw	0
  1104   0072FA  2002               	addwfc	(?___wmul+1)^0,w,c
  1105   0072FC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1106   0072FE                     
  1107                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1108   0072FE  5007               	movf	read_prec_or_width@fmt^0,w,c
  1109   007300  6ED9               	movwf	fsr2l,c
  1110   007302  6ADA               	clrf	fsr2h,c
  1111   007304  2ADE               	incf	postinc2,f,c
  1112   007306  0E00               	movlw	0
  1113   007308  22DD               	addwfc	postdec2,f,c
  1114   00730A                     l1554:
  1115                           
  1116                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1117   00730A  5007               	movf	read_prec_or_width@fmt^0,w,c
  1118   00730C  6ED9               	movwf	fsr2l,c
  1119   00730E  6ADA               	clrf	fsr2h,c
  1120   007310  CFDE FFF6          	movff	postinc2,tblptrl
  1121   007314  CFDD FFF7          	movff	postdec2,tblptrh
  1122   007318                     	if	0	;tblptru may be non-zero
  1123   007318                     	endif
  1124   007318                     	if	0	;tblptru may be non-zero
  1125   007318                     	endif
  1126   007318  0008               	tblrd		*
  1127   00731A  50F5               	movf	tablat,w,c
  1128   00731C  0FD0               	addlw	208
  1129   00731E  6E09               	movwf	read_prec_or_width@c^0,c
  1130   007320  0E09               	movlw	9
  1131   007322  6409               	cpfsgt	read_prec_or_width@c^0,c
  1132   007324  EF96  F039         	goto	u1091
  1133   007328  EF98  F039         	goto	u1090
  1134   00732C                     u1091:
  1135   00732C  EF6F  F039         	goto	l1550
  1136   007330                     u1090:
  1137   007330                     l792:
  1138                           
  1139                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1140   007330  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1141   007334  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1142   007338  0012               	return		;funcret
  1143   00733A                     __end_of_read_prec_or_width:
  1144                           	callstack 0
  1145                           
  1146 ;; *************** function ___wmul *****************
  1147 ;; Defined at:
  1148 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  multiplier      2    0[COMRAM] unsigned int 
  1151 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  product         2    4[COMRAM] unsigned int 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  2    0[COMRAM] unsigned int 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, prodl, prodh
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1163 ;;      Params:         4       0       0       0       0       0       0
  1164 ;;      Locals:         2       0       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0
  1166 ;;      Totals:         6       0       0       0       0       0       0
  1167 ;;Total ram usage:        6 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_read_prec_or_width
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text5
  1177   006F6A                     __ptext5:
  1178                           	callstack 0
  1179   006F6A                     ___wmul:
  1180                           	callstack 26
  1181   006F6A  5001               	movf	___wmul@multiplier^0,w,c
  1182   006F6C  0203               	mulwf	___wmul@multiplicand^0,c
  1183   006F6E  CFF3 F005          	movff	prodl,___wmul@product
  1184   006F72  CFF4 F006          	movff	prodh,___wmul@product+1
  1185   006F76  5001               	movf	___wmul@multiplier^0,w,c
  1186   006F78  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1187   006F7A  50F3               	movf	243,w,c
  1188   006F7C  2606               	addwf	(___wmul@product+1)^0,f,c
  1189   006F7E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1190   006F80  0203               	mulwf	___wmul@multiplicand^0,c
  1191   006F82  50F3               	movf	243,w,c
  1192   006F84  2606               	addwf	(___wmul@product+1)^0,f,c
  1193   006F86  C005  F001         	movff	___wmul@product,?___wmul
  1194   006F8A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1195   006F8E  0012               	return		;funcret
  1196   006F90                     __end_of___wmul:
  1197                           	callstack 0
  1198                           
  1199 ;; *************** function _dtoa *****************
  1200 ;; Defined at:
  1201 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  1204 ;;		 -> sprintf@f(12), 
  1205 ;;  d               2   21[COMRAM] int 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  i               2   29[COMRAM] int 
  1208 ;;  w               2   25[COMRAM] int 
  1209 ;;  s               1   28[COMRAM] unsigned char 
  1210 ;;  p               1   27[COMRAM] _Bool 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1220 ;;      Params:         3       0       0       0       0       0       0
  1221 ;;      Locals:         8       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0
  1223 ;;      Totals:        11       0       0       0       0       0       0
  1224 ;;Total ram usage:       11 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 4
  1227 ;; This function calls:
  1228 ;;		___awdiv
  1229 ;;		___awmod
  1230 ;;		_abs
  1231 ;;		_pad
  1232 ;; This function is called by:
  1233 ;;		_vfpfcnvrt
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text6
  1238   0077D6                     __ptext6:
  1239                           	callstack 0
  1240   0077D6                     _dtoa:
  1241                           	callstack 23
  1242   0077D6                     
  1243                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1244   0077D6  0E01               	movlw	1
  1245   0077D8  6E1C               	movwf	dtoa@p^0,c
  1246   0077DA                     
  1247                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1248   0077DA  BE17               	btfsc	(dtoa@d+1)^0,7,c
  1249   0077DC  EFF2  F03B         	goto	u1001
  1250   0077E0  EFF5  F03B         	goto	u1000
  1251   0077E4                     u1001:
  1252   0077E4  0E01               	movlw	1
  1253   0077E6  EFF6  F03B         	goto	u1010
  1254   0077EA                     u1000:
  1255   0077EA  0E00               	movlw	0
  1256   0077EC                     u1010:
  1257   0077EC  6E1D               	movwf	dtoa@s^0,c
  1258   0077EE                     
  1259                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1260   0077EE  C052  F01A         	movff	_width,dtoa@w
  1261   0077F2  C053  F01B         	movff	_width+1,dtoa@w+1
  1262   0077F6                     
  1263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  1264   0077F6  501D               	movf	dtoa@s^0,w,c
  1265   0077F8  B4D8               	btfsc	status,2,c
  1266   0077FA  EF01  F03C         	goto	u1021
  1267   0077FE  EF03  F03C         	goto	u1020
  1268   007802                     u1021:
  1269   007802  EF1A  F03C         	goto	l777
  1270   007806                     u1020:
  1271   007806                     
  1272                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  1273   007806  061A               	decf	dtoa@w^0,f,c
  1274   007808  A0D8               	btfss	status,0,c
  1275   00780A  061B               	decf	(dtoa@w+1)^0,f,c
  1276   00780C                     
  1277                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1278   00780C  501D               	movf	dtoa@s^0,w,c
  1279   00780E  A4D8               	btfss	status,2,c
  1280   007810  EF0C  F03C         	goto	u1031
  1281   007814  EF0E  F03C         	goto	u1030
  1282   007818                     u1031:
  1283   007818  EF14  F03C         	goto	l1510
  1284   00781C                     u1030:
  1285   00781C  0E00               	movlw	0
  1286   00781E  6E19               	movwf	(_dtoa$593+1)^0,c
  1287   007820  0E2B               	movlw	43
  1288   007822  6E18               	movwf	_dtoa$593^0,c
  1289   007824  EF18  F03C         	goto	l1512
  1290   007828                     l1510:
  1291   007828  0E00               	movlw	0
  1292   00782A  6E19               	movwf	(_dtoa$593+1)^0,c
  1293   00782C  0E2D               	movlw	45
  1294   00782E  6E18               	movwf	_dtoa$593^0,c
  1295   007830                     l1512:
  1296   007830  C018  F01D         	movff	_dtoa$593,dtoa@s
  1297   007834                     l777:
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1300   007834  0E00               	movlw	0
  1301   007836  6E1F               	movwf	(dtoa@i+1)^0,c
  1302   007838  0E1F               	movlw	31
  1303   00783A  6E1E               	movwf	dtoa@i^0,c
  1304   00783C                     
  1305                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1306   00783C  0E00               	movlw	0
  1307   00783E  0100               	movlb	0	; () banked
  1308   007840  6F7F               	movwf	(_dbuf+31)& (0+255),b
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1311   007842  EF50  F03C         	goto	l1526
  1312   007846                     l1516:
  1313                           
  1314                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  1315   007846  061E               	decf	dtoa@i^0,f,c
  1316   007848  A0D8               	btfss	status,0,c
  1317   00784A  061F               	decf	(dtoa@i+1)^0,f,c
  1318   00784C                     
  1319                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1320   00784C  501E               	movf	dtoa@i^0,w,c
  1321   00784E  0F60               	addlw	low _dbuf
  1322   007850  6ED9               	movwf	fsr2l,c
  1323   007852  6ADA               	clrf	fsr2h,c
  1324   007854  C016  F001         	movff	dtoa@d,___awmod@dividend
  1325   007858  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  1326   00785C  0E00               	movlw	0
  1327   00785E  6E04               	movwf	(___awmod@divisor+1)^0,c
  1328   007860  0E0A               	movlw	10
  1329   007862  6E03               	movwf	___awmod@divisor^0,c
  1330   007864  EC9D  F039         	call	___awmod	;wreg free
  1331   007868  C001  F007         	movff	?___awmod,abs@a
  1332   00786C  C002  F008         	movff	?___awmod+1,abs@a+1
  1333   007870  ECDD  F037         	call	_abs	;wreg free
  1334   007874  5007               	movf	?_abs^0,w,c
  1335   007876  0F30               	addlw	48
  1336   007878  6EDF               	movwf	indf2,c
  1337   00787A                     
  1338                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1339   00787A  0E00               	movlw	0
  1340   00787C  6E1C               	movwf	dtoa@p^0,c
  1341   00787E                     
  1342                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  1343   00787E  061A               	decf	dtoa@w^0,f,c
  1344   007880  A0D8               	btfss	status,0,c
  1345   007882  061B               	decf	(dtoa@w+1)^0,f,c
  1346   007884                     
  1347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1348   007884  C016  F001         	movff	dtoa@d,___awdiv@dividend
  1349   007888  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  1350   00788C  0E00               	movlw	0
  1351   00788E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1352   007890  0E0A               	movlw	10
  1353   007892  6E03               	movwf	___awdiv@divisor^0,c
  1354   007894  ECF5  F039         	call	___awdiv	;wreg free
  1355   007898  C001  F016         	movff	?___awdiv,dtoa@d
  1356   00789C  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  1357   0078A0                     l1526:
  1358                           
  1359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1360   0078A0  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  1361   0078A2  EF5B  F03C         	goto	u1041
  1362   0078A6  501F               	movf	(dtoa@i+1)^0,w,c
  1363   0078A8  E108               	bnz	u1040
  1364   0078AA  041E               	decf	dtoa@i^0,w,c
  1365   0078AC  A0D8               	btfss	status,0,c
  1366   0078AE  EF5B  F03C         	goto	u1041
  1367   0078B2  EF5D  F03C         	goto	u1040
  1368   0078B6                     u1041:
  1369   0078B6  EF6E  F03C         	goto	l1532
  1370   0078BA                     u1040:
  1371   0078BA  5016               	movf	dtoa@d^0,w,c
  1372   0078BC  1017               	iorwf	(dtoa@d+1)^0,w,c
  1373   0078BE  A4D8               	btfss	status,2,c
  1374   0078C0  EF64  F03C         	goto	u1051
  1375   0078C4  EF66  F03C         	goto	u1050
  1376   0078C8                     u1051:
  1377   0078C8  EF23  F03C         	goto	l1516
  1378   0078CC                     u1050:
  1379   0078CC  501C               	movf	dtoa@p^0,w,c
  1380   0078CE  A4D8               	btfss	status,2,c
  1381   0078D0  EF6C  F03C         	goto	u1061
  1382   0078D4  EF6E  F03C         	goto	u1060
  1383   0078D8                     u1061:
  1384   0078D8  EF23  F03C         	goto	l1516
  1385   0078DC                     u1060:
  1386   0078DC                     l1532:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  1389   0078DC  501D               	movf	dtoa@s^0,w,c
  1390   0078DE  B4D8               	btfsc	status,2,c
  1391   0078E0  EF74  F03C         	goto	u1071
  1392   0078E4  EF76  F03C         	goto	u1070
  1393   0078E8                     u1071:
  1394   0078E8  EF7F  F03C         	goto	l1538
  1395   0078EC                     u1070:
  1396   0078EC                     
  1397                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  1398   0078EC  061E               	decf	dtoa@i^0,f,c
  1399   0078EE  A0D8               	btfss	status,0,c
  1400   0078F0  061F               	decf	(dtoa@i+1)^0,f,c
  1401   0078F2                     
  1402                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  1403   0078F2  501E               	movf	dtoa@i^0,w,c
  1404   0078F4  0F60               	addlw	low _dbuf
  1405   0078F6  6ED9               	movwf	fsr2l,c
  1406   0078F8  6ADA               	clrf	fsr2h,c
  1407   0078FA  C01D  FFDF         	movff	dtoa@s,indf2
  1408   0078FE                     l1538:
  1409                           
  1410                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1411   0078FE  C015  F00E         	movff	dtoa@fp,pad@fp
  1412   007902  501E               	movf	dtoa@i^0,w,c
  1413   007904  0F60               	addlw	low _dbuf
  1414   007906  6E0F               	movwf	pad@buf^0,c
  1415   007908  C01A  F010         	movff	dtoa@w,pad@p
  1416   00790C  C01B  F011         	movff	dtoa@w+1,pad@p+1
  1417   007910  ECAC  F038         	call	_pad	;wreg free
  1418   007914  0012               	return		;funcret
  1419   007916                     __end_of_dtoa:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _pad *****************
  1423 ;; Defined at:
  1424 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  1427 ;;		 -> sprintf@f(12), 
  1428 ;;  buf             1   14[COMRAM] PTR unsigned char 
  1429 ;;		 -> dbuf(32), 
  1430 ;;  p               2   15[COMRAM] int 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  i               2   18[COMRAM] int 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1442 ;;      Params:         4       0       0       0       0       0       0
  1443 ;;      Locals:         2       0       0       0       0       0       0
  1444 ;;      Temps:          1       0       0       0       0       0       0
  1445 ;;      Totals:         7       0       0       0       0       0       0
  1446 ;;Total ram usage:        7 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 3
  1449 ;; This function calls:
  1450 ;;		_fputc
  1451 ;;		_fputs
  1452 ;; This function is called by:
  1453 ;;		_dtoa
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text7
  1458   007158                     __ptext7:
  1459                           	callstack 0
  1460   007158                     _pad:
  1461                           	callstack 23
  1462   007158                     
  1463                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1464   007158  A05C               	btfss	_flags^0,0,c
  1465   00715A  EFB1  F038         	goto	u951
  1466   00715E  EFB3  F038         	goto	u950
  1467   007162                     u951:
  1468   007162  EFB9  F038         	goto	l1480
  1469   007166                     u950:
  1470   007166                     
  1471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1472   007166  C00F  F009         	movff	pad@buf,fputs@s
  1473   00716A  C00E  F00A         	movff	pad@fp,fputs@fp
  1474   00716E  EC49  F038         	call	_fputs	;wreg free
  1475   007172                     l1480:
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1478   007172  BE11               	btfsc	(pad@p+1)^0,7,c
  1479   007174  EFC0  F038         	goto	u960
  1480   007178  EFBE  F038         	goto	u961
  1481   00717C                     u961:
  1482   00717C  EFC4  F038         	goto	l769
  1483   007180                     u960:
  1484   007180                     
  1485                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1486   007180  0E00               	movlw	0
  1487   007182  6E11               	movwf	(pad@p+1)^0,c
  1488   007184  0E00               	movlw	0
  1489   007186  6E10               	movwf	pad@p^0,c
  1490   007188                     l769:
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1493   007188  0E00               	movlw	0
  1494   00718A  6E14               	movwf	(pad@i+1)^0,c
  1495   00718C  0E00               	movlw	0
  1496   00718E  6E13               	movwf	pad@i^0,c
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1499   007190  EFD4  F038         	goto	l1488
  1500   007194                     l1484:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1503   007194  0E00               	movlw	0
  1504   007196  6E02               	movwf	(fputc@c+1)^0,c
  1505   007198  0E20               	movlw	32
  1506   00719A  6E01               	movwf	fputc@c^0,c
  1507   00719C  C00E  F003         	movff	pad@fp,fputc@fp
  1508   0071A0  ECF1  F038         	call	_fputc	;wreg free
  1509   0071A4                     
  1510                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1511   0071A4  4A13               	infsnz	pad@i^0,f,c
  1512   0071A6  2A14               	incf	(pad@i+1)^0,f,c
  1513   0071A8                     l1488:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1516   0071A8  5010               	movf	pad@p^0,w,c
  1517   0071AA  5C13               	subwf	pad@i^0,w,c
  1518   0071AC  5014               	movf	(pad@i+1)^0,w,c
  1519   0071AE  0A80               	xorlw	128
  1520   0071B0  6E12               	movwf	??_pad^0,c
  1521   0071B2  5011               	movf	(pad@p+1)^0,w,c
  1522   0071B4  0A80               	xorlw	128
  1523   0071B6  5812               	subwfb	??_pad^0,w,c
  1524   0071B8  A0D8               	btfss	status,0,c
  1525   0071BA  EFE1  F038         	goto	u971
  1526   0071BE  EFE3  F038         	goto	u970
  1527   0071C2                     u971:
  1528   0071C2  EFCA  F038         	goto	l1484
  1529   0071C6                     u970:
  1530   0071C6                     
  1531                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1532   0071C6  B05C               	btfsc	_flags^0,0,c
  1533   0071C8  EFE8  F038         	goto	u981
  1534   0071CC  EFEA  F038         	goto	u980
  1535   0071D0                     u981:
  1536   0071D0  EFF0  F038         	goto	l774
  1537   0071D4                     u980:
  1538   0071D4                     
  1539                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1540   0071D4  C00F  F009         	movff	pad@buf,fputs@s
  1541   0071D8  C00E  F00A         	movff	pad@fp,fputs@fp
  1542   0071DC  EC49  F038         	call	_fputs	;wreg free
  1543   0071E0                     l774:
  1544   0071E0  0012               	return		;funcret
  1545   0071E2                     __end_of_pad:
  1546                           	callstack 0
  1547                           
  1548 ;; *************** function _fputs *****************
  1549 ;; Defined at:
  1550 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  s               1    8[COMRAM] PTR const unsigned char 
  1553 ;;		 -> dbuf(32), 
  1554 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  1555 ;;		 -> sprintf@f(12), 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  i               2   11[COMRAM] int 
  1558 ;;  c               1   10[COMRAM] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2    8[COMRAM] int 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1568 ;;      Params:         2       0       0       0       0       0       0
  1569 ;;      Locals:         3       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0
  1571 ;;      Totals:         5       0       0       0       0       0       0
  1572 ;;Total ram usage:        5 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 2
  1575 ;; This function calls:
  1576 ;;		_fputc
  1577 ;; This function is called by:
  1578 ;;		_pad
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text8
  1583   007092                     __ptext8:
  1584                           	callstack 0
  1585   007092                     _fputs:
  1586                           	callstack 23
  1587   007092  0E00               	movlw	0
  1588   007094  6E0D               	movwf	(fputs@i+1)^0,c
  1589   007096  0E00               	movlw	0
  1590   007098  6E0C               	movwf	fputs@i^0,c
  1591   00709A  EF58  F038         	goto	l1388
  1592   00709E                     l1384:
  1593   00709E  C00B  F001         	movff	fputs@c,fputc@c
  1594   0070A2  6A02               	clrf	(fputc@c+1)^0,c
  1595   0070A4  C00A  F003         	movff	fputs@fp,fputc@fp
  1596   0070A8  ECF1  F038         	call	_fputc	;wreg free
  1597   0070AC  4A0C               	infsnz	fputs@i^0,f,c
  1598   0070AE  2A0D               	incf	(fputs@i+1)^0,f,c
  1599   0070B0                     l1388:
  1600   0070B0  5009               	movf	fputs@s^0,w,c
  1601   0070B2  240C               	addwf	fputs@i^0,w,c
  1602   0070B4  6ED9               	movwf	fsr2l,c
  1603   0070B6  6ADA               	clrf	fsr2h,c
  1604   0070B8  50DF               	movf	indf2,w,c
  1605   0070BA  6E0B               	movwf	fputs@c^0,c
  1606   0070BC  500B               	movf	fputs@c^0,w,c
  1607   0070BE  A4D8               	btfss	status,2,c
  1608   0070C0  EF64  F038         	goto	u821
  1609   0070C4  EF66  F038         	goto	u820
  1610   0070C8                     u821:
  1611   0070C8  EF4F  F038         	goto	l1384
  1612   0070CC                     u820:
  1613   0070CC  0012               	return		;funcret
  1614   0070CE                     __end_of_fputs:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function _fputc *****************
  1618 ;; Defined at:
  1619 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  c               2    0[COMRAM] int 
  1622 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1623 ;;		 -> sprintf@f(12), 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2    0[COMRAM] int 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1635 ;;      Params:         3       0       0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0
  1637 ;;      Temps:          5       0       0       0       0       0       0
  1638 ;;      Totals:         8       0       0       0       0       0       0
  1639 ;;Total ram usage:        8 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 1
  1642 ;; This function calls:
  1643 ;;		_putch
  1644 ;; This function is called by:
  1645 ;;		_pad
  1646 ;;		_vfpfcnvrt
  1647 ;;		_fputs
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text9
  1652   0071E2                     __ptext9:
  1653                           	callstack 0
  1654   0071E2                     _fputc:
  1655                           	callstack 26
  1656   0071E2  5003               	movf	fputc@fp^0,w,c
  1657   0071E4  B4D8               	btfsc	status,2,c
  1658   0071E6  EFF7  F038         	goto	u781
  1659   0071EA  EFF9  F038         	goto	u780
  1660   0071EE                     u781:
  1661   0071EE  EF01  F039         	goto	l1372
  1662   0071F2                     u780:
  1663   0071F2  5003               	movf	fputc@fp^0,w,c
  1664   0071F4  A4D8               	btfss	status,2,c
  1665   0071F6  EFFF  F038         	goto	u791
  1666   0071FA  EF01  F039         	goto	u790
  1667   0071FE                     u791:
  1668   0071FE  EF06  F039         	goto	l1374
  1669   007202                     u790:
  1670   007202                     l1372:
  1671   007202  5001               	movf	fputc@c^0,w,c
  1672   007204  ECA3  F037         	call	_putch
  1673   007208  EF45  F039         	goto	l829
  1674   00720C                     l1374:
  1675   00720C  5003               	movf	fputc@fp^0,w,c
  1676   00720E  6ED9               	movwf	fsr2l,c
  1677   007210  6ADA               	clrf	fsr2h,c
  1678   007212  0E0A               	movlw	10
  1679   007214  26D9               	addwf	fsr2l,f,c
  1680   007216  50DE               	movf	postinc2,w,c
  1681   007218  10DE               	iorwf	postinc2,w,c
  1682   00721A  B4D8               	btfsc	status,2,c
  1683   00721C  EF12  F039         	goto	u801
  1684   007220  EF14  F039         	goto	u800
  1685   007224                     u801:
  1686   007224  EF2D  F039         	goto	l1378
  1687   007228                     u800:
  1688   007228  5003               	movf	fputc@fp^0,w,c
  1689   00722A  6ED9               	movwf	fsr2l,c
  1690   00722C  6ADA               	clrf	fsr2h,c
  1691   00722E  0E0A               	movlw	10
  1692   007230  26D9               	addwf	fsr2l,f,c
  1693   007232  5003               	movf	fputc@fp^0,w,c
  1694   007234  6EE1               	movwf	fsr1l,c
  1695   007236  6AE2               	clrf	fsr1h,c
  1696   007238  0E03               	movlw	3
  1697   00723A  26E1               	addwf	fsr1l,f,c
  1698   00723C  50DE               	movf	postinc2,w,c
  1699   00723E  5CE6               	subwf	postinc1,w,c
  1700   007240  50E6               	movf	postinc1,w,c
  1701   007242  0A80               	xorlw	128
  1702   007244  6E08               	movwf	(??_fputc+4)^0,c
  1703   007246  50DE               	movf	postinc2,w,c
  1704   007248  0A80               	xorlw	128
  1705   00724A  5808               	subwfb	(??_fputc+4)^0,w,c
  1706   00724C  B0D8               	btfsc	status,0,c
  1707   00724E  EF2B  F039         	goto	u811
  1708   007252  EF2D  F039         	goto	u810
  1709   007256                     u811:
  1710   007256  EF45  F039         	goto	l829
  1711   00725A                     u810:
  1712   00725A                     l1378:
  1713   00725A  5003               	movf	fputc@fp^0,w,c
  1714   00725C  6ED9               	movwf	fsr2l,c
  1715   00725E  6ADA               	clrf	fsr2h,c
  1716   007260  0E03               	movlw	3
  1717   007262  26D9               	addwf	fsr2l,f,c
  1718   007264  50DF               	movf	indf2,w,c
  1719   007266  6E04               	movwf	??_fputc^0,c
  1720   007268  5003               	movf	fputc@fp^0,w,c
  1721   00726A  6ED9               	movwf	fsr2l,c
  1722   00726C  6ADA               	clrf	fsr2h,c
  1723   00726E  50DF               	movf	indf2,w,c
  1724   007270  2404               	addwf	??_fputc^0,w,c
  1725   007272  6ED9               	movwf	fsr2l,c
  1726   007274  6ADA               	clrf	fsr2h,c
  1727   007276  C001  FFDF         	movff	fputc@c,indf2
  1728   00727A  5003               	movf	fputc@fp^0,w,c
  1729   00727C  6ED9               	movwf	fsr2l,c
  1730   00727E  6ADA               	clrf	fsr2h,c
  1731   007280  0E03               	movlw	3
  1732   007282  26D9               	addwf	fsr2l,f,c
  1733   007284  2ADE               	incf	postinc2,f,c
  1734   007286  0E00               	movlw	0
  1735   007288  22DD               	addwfc	postdec2,f,c
  1736   00728A                     l829:
  1737   00728A  0012               	return		;funcret
  1738   00728C                     __end_of_fputc:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _putch *****************
  1742 ;; Defined at:
  1743 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  c               1    wreg     unsigned char 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  c               1    0[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1757 ;;      Params:         0       0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_fputc
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text10
  1771   006F46                     __ptext10:
  1772                           	callstack 0
  1773   006F46                     _putch:
  1774                           	callstack 26
  1775   006F46  0012               	return		;funcret
  1776   006F48                     __end_of_putch:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function _abs *****************
  1780 ;; Defined at:
  1781 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  a               2    6[COMRAM] int 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2    6[COMRAM] int 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1795 ;;      Params:         2       0       0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0
  1797 ;;      Temps:          2       0       0       0       0       0       0
  1798 ;;      Totals:         4       0       0       0       0       0       0
  1799 ;;Total ram usage:        4 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_dtoa
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text11
  1809   006FBA                     __ptext11:
  1810                           	callstack 0
  1811   006FBA                     _abs:
  1812                           	callstack 26
  1813   006FBA  BE08               	btfsc	(abs@a+1)^0,7,c
  1814   006FBC  EFE2  F037         	goto	u991
  1815   006FC0  EFE4  F037         	goto	u990
  1816   006FC4                     u991:
  1817   006FC4  EFEA  F037         	goto	l814
  1818   006FC8                     u990:
  1819   006FC8  C007  F007         	movff	abs@a,?_abs
  1820   006FCC  C008  F008         	movff	abs@a+1,?_abs+1
  1821   006FD0  EFF6  F037         	goto	l817
  1822   006FD4                     l814:
  1823   006FD4  C007  F009         	movff	abs@a,??_abs
  1824   006FD8  C008  F00A         	movff	abs@a+1,??_abs+1
  1825   006FDC  1E09               	comf	??_abs^0,f,c
  1826   006FDE  1E0A               	comf	(??_abs+1)^0,f,c
  1827   006FE0  4A09               	infsnz	??_abs^0,f,c
  1828   006FE2  2A0A               	incf	(??_abs+1)^0,f,c
  1829   006FE4  C009  F007         	movff	??_abs,?_abs
  1830   006FE8  C00A  F008         	movff	??_abs+1,?_abs+1
  1831   006FEC                     l817:
  1832   006FEC  0012               	return		;funcret
  1833   006FEE                     __end_of_abs:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function ___awmod *****************
  1837 ;; Defined at:
  1838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  dividend        2    0[COMRAM] int 
  1841 ;;  divisor         2    2[COMRAM] int 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  sign            1    5[COMRAM] unsigned char 
  1844 ;;  counter         1    4[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  2    0[COMRAM] int 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1854 ;;      Params:         4       0       0       0       0       0       0
  1855 ;;      Locals:         2       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0
  1857 ;;      Totals:         6       0       0       0       0       0       0
  1858 ;;Total ram usage:        6 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_dtoa
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text12
  1868   00733A                     __ptext12:
  1869                           	callstack 0
  1870   00733A                     ___awmod:
  1871                           	callstack 26
  1872   00733A  0E00               	movlw	0
  1873   00733C  6E06               	movwf	___awmod@sign^0,c
  1874   00733E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1875   007340  EFA6  F039         	goto	u890
  1876   007344  EFA4  F039         	goto	u891
  1877   007348                     u891:
  1878   007348  EFAC  F039         	goto	l1448
  1879   00734C                     u890:
  1880   00734C  6C01               	negf	___awmod@dividend^0,c
  1881   00734E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1882   007350  B0D8               	btfsc	status,0,c
  1883   007352  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1884   007354  0E01               	movlw	1
  1885   007356  6E06               	movwf	___awmod@sign^0,c
  1886   007358                     l1448:
  1887   007358  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1888   00735A  EFB3  F039         	goto	u900
  1889   00735E  EFB1  F039         	goto	u901
  1890   007362                     u901:
  1891   007362  EFB7  F039         	goto	l1452
  1892   007366                     u900:
  1893   007366  6C03               	negf	___awmod@divisor^0,c
  1894   007368  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1895   00736A  B0D8               	btfsc	status,0,c
  1896   00736C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1897   00736E                     l1452:
  1898   00736E  5003               	movf	___awmod@divisor^0,w,c
  1899   007370  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1900   007372  B4D8               	btfsc	status,2,c
  1901   007374  EFBE  F039         	goto	u911
  1902   007378  EFC0  F039         	goto	u910
  1903   00737C                     u911:
  1904   00737C  EFE4  F039         	goto	l1468
  1905   007380                     u910:
  1906   007380  0E01               	movlw	1
  1907   007382  6E05               	movwf	___awmod@counter^0,c
  1908   007384  EFC8  F039         	goto	l1458
  1909   007388                     l1456:
  1910   007388  90D8               	bcf	status,0,c
  1911   00738A  3603               	rlcf	___awmod@divisor^0,f,c
  1912   00738C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1913   00738E  2A05               	incf	___awmod@counter^0,f,c
  1914   007390                     l1458:
  1915   007390  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1916   007392  EFCD  F039         	goto	u921
  1917   007396  EFCF  F039         	goto	u920
  1918   00739A                     u921:
  1919   00739A  EFC4  F039         	goto	l1456
  1920   00739E                     u920:
  1921   00739E                     l1460:
  1922   00739E  5003               	movf	___awmod@divisor^0,w,c
  1923   0073A0  5C01               	subwf	___awmod@dividend^0,w,c
  1924   0073A2  5004               	movf	(___awmod@divisor+1)^0,w,c
  1925   0073A4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1926   0073A6  A0D8               	btfss	status,0,c
  1927   0073A8  EFD8  F039         	goto	u931
  1928   0073AC  EFDA  F039         	goto	u930
  1929   0073B0                     u931:
  1930   0073B0  EFDE  F039         	goto	l1464
  1931   0073B4                     u930:
  1932   0073B4  5003               	movf	___awmod@divisor^0,w,c
  1933   0073B6  5E01               	subwf	___awmod@dividend^0,f,c
  1934   0073B8  5004               	movf	(___awmod@divisor+1)^0,w,c
  1935   0073BA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1936   0073BC                     l1464:
  1937   0073BC  90D8               	bcf	status,0,c
  1938   0073BE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1939   0073C0  3203               	rrcf	___awmod@divisor^0,f,c
  1940   0073C2  2E05               	decfsz	___awmod@counter^0,f,c
  1941   0073C4  EFCF  F039         	goto	l1460
  1942   0073C8                     l1468:
  1943   0073C8  5006               	movf	___awmod@sign^0,w,c
  1944   0073CA  B4D8               	btfsc	status,2,c
  1945   0073CC  EFEA  F039         	goto	u941
  1946   0073D0  EFEC  F039         	goto	u940
  1947   0073D4                     u941:
  1948   0073D4  EFF0  F039         	goto	l1472
  1949   0073D8                     u940:
  1950   0073D8  6C01               	negf	___awmod@dividend^0,c
  1951   0073DA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1952   0073DC  B0D8               	btfsc	status,0,c
  1953   0073DE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1954   0073E0                     l1472:
  1955   0073E0  C001  F001         	movff	___awmod@dividend,?___awmod
  1956   0073E4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1957   0073E8  0012               	return		;funcret
  1958   0073EA                     __end_of___awmod:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function ___awdiv *****************
  1962 ;; Defined at:
  1963 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  dividend        2    0[COMRAM] int 
  1966 ;;  divisor         2    2[COMRAM] int 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  quotient        2    6[COMRAM] int 
  1969 ;;  sign            1    5[COMRAM] unsigned char 
  1970 ;;  counter         1    4[COMRAM] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  2    0[COMRAM] int 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         4       0       0       0       0       0       0
  1981 ;;      Locals:         4       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0
  1983 ;;      Totals:         8       0       0       0       0       0       0
  1984 ;;Total ram usage:        8 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_dtoa
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text13
  1994   0073EA                     __ptext13:
  1995                           	callstack 0
  1996   0073EA                     ___awdiv:
  1997                           	callstack 26
  1998   0073EA  0E00               	movlw	0
  1999   0073EC  6E06               	movwf	___awdiv@sign^0,c
  2000   0073EE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2001   0073F0  EFFE  F039         	goto	u830
  2002   0073F4  EFFC  F039         	goto	u831
  2003   0073F8                     u831:
  2004   0073F8  EF04  F03A         	goto	l1404
  2005   0073FC                     u830:
  2006   0073FC  6C03               	negf	___awdiv@divisor^0,c
  2007   0073FE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2008   007400  B0D8               	btfsc	status,0,c
  2009   007402  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2010   007404  0E01               	movlw	1
  2011   007406  6E06               	movwf	___awdiv@sign^0,c
  2012   007408                     l1404:
  2013   007408  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2014   00740A  EF0B  F03A         	goto	u840
  2015   00740E  EF09  F03A         	goto	u841
  2016   007412                     u841:
  2017   007412  EF11  F03A         	goto	l1410
  2018   007416                     u840:
  2019   007416  6C01               	negf	___awdiv@dividend^0,c
  2020   007418  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2021   00741A  B0D8               	btfsc	status,0,c
  2022   00741C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2023   00741E  0E01               	movlw	1
  2024   007420  1A06               	xorwf	___awdiv@sign^0,f,c
  2025   007422                     l1410:
  2026   007422  0E00               	movlw	0
  2027   007424  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2028   007426  0E00               	movlw	0
  2029   007428  6E07               	movwf	___awdiv@quotient^0,c
  2030   00742A  5003               	movf	___awdiv@divisor^0,w,c
  2031   00742C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2032   00742E  B4D8               	btfsc	status,2,c
  2033   007430  EF1C  F03A         	goto	u851
  2034   007434  EF1E  F03A         	goto	u850
  2035   007438                     u851:
  2036   007438  EF46  F03A         	goto	l1432
  2037   00743C                     u850:
  2038   00743C  0E01               	movlw	1
  2039   00743E  6E05               	movwf	___awdiv@counter^0,c
  2040   007440  EF26  F03A         	goto	l1418
  2041   007444                     l1416:
  2042   007444  90D8               	bcf	status,0,c
  2043   007446  3603               	rlcf	___awdiv@divisor^0,f,c
  2044   007448  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2045   00744A  2A05               	incf	___awdiv@counter^0,f,c
  2046   00744C                     l1418:
  2047   00744C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2048   00744E  EF2B  F03A         	goto	u861
  2049   007452  EF2D  F03A         	goto	u860
  2050   007456                     u861:
  2051   007456  EF22  F03A         	goto	l1416
  2052   00745A                     u860:
  2053   00745A                     l1420:
  2054   00745A  90D8               	bcf	status,0,c
  2055   00745C  3607               	rlcf	___awdiv@quotient^0,f,c
  2056   00745E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2057   007460  5003               	movf	___awdiv@divisor^0,w,c
  2058   007462  5C01               	subwf	___awdiv@dividend^0,w,c
  2059   007464  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2060   007466  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2061   007468  A0D8               	btfss	status,0,c
  2062   00746A  EF39  F03A         	goto	u871
  2063   00746E  EF3B  F03A         	goto	u870
  2064   007472                     u871:
  2065   007472  EF40  F03A         	goto	l1428
  2066   007476                     u870:
  2067   007476  5003               	movf	___awdiv@divisor^0,w,c
  2068   007478  5E01               	subwf	___awdiv@dividend^0,f,c
  2069   00747A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2070   00747C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2071   00747E  8007               	bsf	___awdiv@quotient^0,0,c
  2072   007480                     l1428:
  2073   007480  90D8               	bcf	status,0,c
  2074   007482  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2075   007484  3203               	rrcf	___awdiv@divisor^0,f,c
  2076   007486  2E05               	decfsz	___awdiv@counter^0,f,c
  2077   007488  EF2D  F03A         	goto	l1420
  2078   00748C                     l1432:
  2079   00748C  5006               	movf	___awdiv@sign^0,w,c
  2080   00748E  B4D8               	btfsc	status,2,c
  2081   007490  EF4C  F03A         	goto	u881
  2082   007494  EF4E  F03A         	goto	u880
  2083   007498                     u881:
  2084   007498  EF52  F03A         	goto	l1436
  2085   00749C                     u880:
  2086   00749C  6C07               	negf	___awdiv@quotient^0,c
  2087   00749E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2088   0074A0  B0D8               	btfsc	status,0,c
  2089   0074A2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2090   0074A4                     l1436:
  2091   0074A4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2092   0074A8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2093   0074AC  0012               	return		;funcret
  2094   0074AE                     __end_of___awdiv:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _display *****************
  2098 ;; Defined at:
  2099 ;;		line 70 in file "Temp_Adc.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  p               1   10[COMRAM] PTR const unsigned char 
  2102 ;;		 -> main@cnv(15), 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2114 ;;      Params:         1       0       0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0
  2117 ;;      Totals:         1       0       0       0       0       0       0
  2118 ;;Total ram usage:        1 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 2
  2121 ;; This function calls:
  2122 ;;		_data
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text14
  2129   006F90                     __ptext14:
  2130                           	callstack 0
  2131   006F90                     _display:
  2132                           	callstack 28
  2133   006F90                     
  2134                           ;Temp_Adc.c: 70: void display(const char *p);Temp_Adc.c: 71: {;Temp_Adc.c: 72:     while
      +                          (*p)
  2135   006F90  EFD1  F037         	goto	l1650
  2136   006F94                     l1646:
  2137                           
  2138                           ;Temp_Adc.c: 73:     {;Temp_Adc.c: 74:         data(*p);
  2139   006F94  500B               	movf	display@p^0,w,c
  2140   006F96  6ED9               	movwf	fsr2l,c
  2141   006F98  6ADA               	clrf	fsr2h,c
  2142   006F9A  50DF               	movf	indf2,w,c
  2143   006F9C  EC12  F038         	call	_data
  2144   006FA0                     
  2145                           ;Temp_Adc.c: 75:         p++;
  2146   006FA0  2A0B               	incf	display@p^0,f,c
  2147   006FA2                     l1650:
  2148                           
  2149                           ;Temp_Adc.c: 72:     while(*p)
  2150   006FA2  500B               	movf	display@p^0,w,c
  2151   006FA4  6ED9               	movwf	fsr2l,c
  2152   006FA6  6ADA               	clrf	fsr2h,c
  2153   006FA8  50DF               	movf	indf2,w,c
  2154   006FAA  A4D8               	btfss	status,2,c
  2155   006FAC  EFDA  F037         	goto	u1161
  2156   006FB0  EFDC  F037         	goto	u1160
  2157   006FB4                     u1161:
  2158   006FB4  EFCA  F037         	goto	l1646
  2159   006FB8                     u1160:
  2160   006FB8  0012               	return		;funcret
  2161   006FBA                     __end_of_display:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _data *****************
  2165 ;; Defined at:
  2166 ;;		line 60 in file "Temp_Adc.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  a               1    wreg     unsigned char 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  a               1    9[COMRAM] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2180 ;;      Params:         0       0       0       0       0       0       0
  2181 ;;      Locals:         1       0       0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0
  2183 ;;      Totals:         1       0       0       0       0       0       0
  2184 ;;Total ram usage:        1 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 1
  2187 ;; This function calls:
  2188 ;;		_delay
  2189 ;; This function is called by:
  2190 ;;		_display
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text15
  2195   007024                     __ptext15:
  2196                           	callstack 0
  2197   007024                     _data:
  2198                           	callstack 28
  2199                           
  2200                           ;incstack = 0
  2201                           ;data@a stored from wreg
  2202   007024  6E0A               	movwf	data@a^0,c
  2203   007026                     
  2204                           ;Temp_Adc.c: 60: void data(unsigned char a );Temp_Adc.c: 61: {;Temp_Adc.c: 62:     RC0=1
      +                          ;
  2205   007026  8082               	bsf	3970,0,c	;volatile
  2206   007028                     
  2207                           ;Temp_Adc.c: 63:     PORTD=a;
  2208   007028  C00A  FF83         	movff	data@a,3971	;volatile
  2209   00702C                     
  2210                           ;Temp_Adc.c: 64:     RC1=1;
  2211   00702C  8282               	bsf	3970,1,c	;volatile
  2212   00702E                     
  2213                           ;Temp_Adc.c: 65:     delay(5000);
  2214   00702E  0E88               	movlw	136
  2215   007030  6E01               	movwf	delay@j^0,c
  2216   007032  0E13               	movlw	19
  2217   007034  6E02               	movwf	(delay@j+1)^0,c
  2218   007036  0E00               	movlw	0
  2219   007038  6E03               	movwf	(delay@j+2)^0,c
  2220   00703A  0E00               	movlw	0
  2221   00703C  6E04               	movwf	(delay@j+3)^0,c
  2222   00703E  EC88  F038         	call	_delay	;wreg free
  2223   007042                     
  2224                           ;Temp_Adc.c: 66:     RC1=0;
  2225   007042  9282               	bcf	3970,1,c	;volatile
  2226   007044                     
  2227                           ;Temp_Adc.c: 67:     delay(5000);
  2228   007044  0E88               	movlw	136
  2229   007046  6E01               	movwf	delay@j^0,c
  2230   007048  0E13               	movlw	19
  2231   00704A  6E02               	movwf	(delay@j+1)^0,c
  2232   00704C  0E00               	movlw	0
  2233   00704E  6E03               	movwf	(delay@j+2)^0,c
  2234   007050  0E00               	movlw	0
  2235   007052  6E04               	movwf	(delay@j+3)^0,c
  2236   007054  EC88  F038         	call	_delay	;wreg free
  2237   007058  0012               	return		;funcret
  2238   00705A                     __end_of_data:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function _cmd *****************
  2242 ;; Defined at:
  2243 ;;		line 51 in file "Temp_Adc.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  a               1    wreg     unsigned char 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  a               1    9[COMRAM] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2257 ;;      Params:         0       0       0       0       0       0       0
  2258 ;;      Locals:         1       0       0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0
  2260 ;;      Totals:         1       0       0       0       0       0       0
  2261 ;;Total ram usage:        1 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 1
  2264 ;; This function calls:
  2265 ;;		_delay
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text16
  2272   006FEE                     __ptext16:
  2273                           	callstack 0
  2274   006FEE                     _cmd:
  2275                           	callstack 29
  2276                           
  2277                           ;incstack = 0
  2278                           ;cmd@a stored from wreg
  2279   006FEE  6E0A               	movwf	cmd@a^0,c
  2280   006FF0                     
  2281                           ;Temp_Adc.c: 51: void cmd(unsigned char a);Temp_Adc.c: 52: {;Temp_Adc.c: 53:     RC0=0;
  2282   006FF0  9082               	bcf	3970,0,c	;volatile
  2283   006FF2                     
  2284                           ;Temp_Adc.c: 54:     PORTD=a;
  2285   006FF2  C00A  FF83         	movff	cmd@a,3971	;volatile
  2286   006FF6                     
  2287                           ;Temp_Adc.c: 55:     RC1=1;
  2288   006FF6  8282               	bsf	3970,1,c	;volatile
  2289   006FF8                     
  2290                           ;Temp_Adc.c: 56:     delay(5000);
  2291   006FF8  0E88               	movlw	136
  2292   006FFA  6E01               	movwf	delay@j^0,c
  2293   006FFC  0E13               	movlw	19
  2294   006FFE  6E02               	movwf	(delay@j+1)^0,c
  2295   007000  0E00               	movlw	0
  2296   007002  6E03               	movwf	(delay@j+2)^0,c
  2297   007004  0E00               	movlw	0
  2298   007006  6E04               	movwf	(delay@j+3)^0,c
  2299   007008  EC88  F038         	call	_delay	;wreg free
  2300   00700C                     
  2301                           ;Temp_Adc.c: 57:     RC1=0;
  2302   00700C  9282               	bcf	3970,1,c	;volatile
  2303   00700E                     
  2304                           ;Temp_Adc.c: 58:     delay(5000);
  2305   00700E  0E88               	movlw	136
  2306   007010  6E01               	movwf	delay@j^0,c
  2307   007012  0E13               	movlw	19
  2308   007014  6E02               	movwf	(delay@j+1)^0,c
  2309   007016  0E00               	movlw	0
  2310   007018  6E03               	movwf	(delay@j+2)^0,c
  2311   00701A  0E00               	movlw	0
  2312   00701C  6E04               	movwf	(delay@j+3)^0,c
  2313   00701E  EC88  F038         	call	_delay	;wreg free
  2314   007022  0012               	return		;funcret
  2315   007024                     __end_of_cmd:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _delay *****************
  2319 ;; Defined at:
  2320 ;;		line 78 in file "Temp_Adc.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  j               4    0[COMRAM] long 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  i               4    5[COMRAM] long 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2334 ;;      Params:         4       0       0       0       0       0       0
  2335 ;;      Locals:         4       0       0       0       0       0       0
  2336 ;;      Temps:          1       0       0       0       0       0       0
  2337 ;;      Totals:         9       0       0       0       0       0       0
  2338 ;;Total ram usage:        9 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;;		_cmd
  2345 ;;		_data
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text17
  2350   007110                     __ptext17:
  2351                           	callstack 0
  2352   007110                     _delay:
  2353                           	callstack 28
  2354   007110                     
  2355                           ;Temp_Adc.c: 78: void delay(long j);Temp_Adc.c: 79: {;Temp_Adc.c: 80:     for(long i=0;i
      +                          <=j;i++);
  2356   007110  0E00               	movlw	0
  2357   007112  6E06               	movwf	delay@i^0,c
  2358   007114  0E00               	movlw	0
  2359   007116  6E07               	movwf	(delay@i+1)^0,c
  2360   007118  0E00               	movlw	0
  2361   00711A  6E08               	movwf	(delay@i+2)^0,c
  2362   00711C  0E00               	movlw	0
  2363   00711E  6E09               	movwf	(delay@i+3)^0,c
  2364   007120  EF98  F038         	goto	l65
  2365   007124                     l1558:
  2366   007124  0E01               	movlw	1
  2367   007126  2606               	addwf	delay@i^0,f,c
  2368   007128  0E00               	movlw	0
  2369   00712A  2207               	addwfc	(delay@i+1)^0,f,c
  2370   00712C  2208               	addwfc	(delay@i+2)^0,f,c
  2371   00712E  2209               	addwfc	(delay@i+3)^0,f,c
  2372   007130                     l65:
  2373   007130  5006               	movf	delay@i^0,w,c
  2374   007132  5C01               	subwf	delay@j^0,w,c
  2375   007134  5007               	movf	(delay@i+1)^0,w,c
  2376   007136  5802               	subwfb	(delay@j+1)^0,w,c
  2377   007138  5008               	movf	(delay@i+2)^0,w,c
  2378   00713A  5803               	subwfb	(delay@j+2)^0,w,c
  2379   00713C  5004               	movf	(delay@j+3)^0,w,c
  2380   00713E  0A80               	xorlw	128
  2381   007140  6E05               	movwf	??_delay^0,c
  2382   007142  5009               	movf	(delay@i+3)^0,w,c
  2383   007144  0A80               	xorlw	128
  2384   007146  5805               	subwfb	??_delay^0,w,c
  2385   007148  B0D8               	btfsc	status,0,c
  2386   00714A  EFA9  F038         	goto	u1101
  2387   00714E  EFAB  F038         	goto	u1100
  2388   007152                     u1101:
  2389   007152  EF92  F038         	goto	l1558
  2390   007156                     u1100:
  2391   007156  0012               	return		;funcret
  2392   007158                     __end_of_delay:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function ___xxtofl *****************
  2396 ;; Defined at:
  2397 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  sign            1    wreg     unsigned char 
  2400 ;;  val             4    0[COMRAM] long 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  sign            1    8[COMRAM] unsigned char 
  2403 ;;  arg             4   10[COMRAM] unsigned long 
  2404 ;;  exp             1    9[COMRAM] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  4    0[COMRAM] unsigned char 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2414 ;;      Params:         4       0       0       0       0       0       0
  2415 ;;      Locals:         6       0       0       0       0       0       0
  2416 ;;      Temps:          4       0       0       0       0       0       0
  2417 ;;      Totals:        14       0       0       0       0       0       0
  2418 ;;Total ram usage:       14 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text18
  2428   007916                     __ptext18:
  2429                           	callstack 0
  2430   007916                     ___xxtofl:
  2431                           	callstack 30
  2432                           
  2433                           ;incstack = 0
  2434                           ;___xxtofl@sign stored from wreg
  2435   007916  6E09               	movwf	___xxtofl@sign^0,c
  2436   007918  5009               	movf	___xxtofl@sign^0,w,c
  2437   00791A  B4D8               	btfsc	status,2,c
  2438   00791C  EF92  F03C         	goto	u1431
  2439   007920  EF94  F03C         	goto	u1430
  2440   007924                     u1431:
  2441   007924  EFB6  F03C         	goto	l726
  2442   007928                     u1430:
  2443   007928  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2444   00792A  EF9B  F03C         	goto	u1440
  2445   00792E  EF99  F03C         	goto	u1441
  2446   007932                     u1441:
  2447   007932  EFB6  F03C         	goto	l726
  2448   007936                     u1440:
  2449   007936  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2450   00793A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2451   00793E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2452   007942  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2453   007946  1E05               	comf	??___xxtofl^0,f,c
  2454   007948  1E06               	comf	(??___xxtofl+1)^0,f,c
  2455   00794A  1E07               	comf	(??___xxtofl+2)^0,f,c
  2456   00794C  1E08               	comf	(??___xxtofl+3)^0,f,c
  2457   00794E  2A05               	incf	??___xxtofl^0,f,c
  2458   007950  0E00               	movlw	0
  2459   007952  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2460   007954  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2461   007956  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2462   007958  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2463   00795C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2464   007960  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2465   007964  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2466   007968  EFBE  F03C         	goto	l1832
  2467   00796C                     l726:
  2468   00796C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2469   007970  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2470   007974  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2471   007978  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2472   00797C                     l1832:
  2473   00797C  5001               	movf	___xxtofl@val^0,w,c
  2474   00797E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2475   007980  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2476   007982  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2477   007984  A4D8               	btfss	status,2,c
  2478   007986  EFC7  F03C         	goto	u1451
  2479   00798A  EFC9  F03C         	goto	u1450
  2480   00798E                     u1451:
  2481   00798E  EFD3  F03C         	goto	l1838
  2482   007992                     u1450:
  2483   007992  0E00               	movlw	0
  2484   007994  6E01               	movwf	?___xxtofl^0,c
  2485   007996  0E00               	movlw	0
  2486   007998  6E02               	movwf	(?___xxtofl+1)^0,c
  2487   00799A  0E00               	movlw	0
  2488   00799C  6E03               	movwf	(?___xxtofl+2)^0,c
  2489   00799E  0E00               	movlw	0
  2490   0079A0  6E04               	movwf	(?___xxtofl+3)^0,c
  2491   0079A2  EF64  F03D         	goto	l729
  2492   0079A6                     l1838:
  2493   0079A6  0E96               	movlw	150
  2494   0079A8  6E0A               	movwf	___xxtofl@exp^0,c
  2495   0079AA  EFDD  F03C         	goto	l1842
  2496   0079AE                     l1840:
  2497   0079AE  2A0A               	incf	___xxtofl@exp^0,f,c
  2498   0079B0  90D8               	bcf	status,0,c
  2499   0079B2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2500   0079B4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2501   0079B6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2502   0079B8  320B               	rrcf	___xxtofl@arg^0,f,c
  2503   0079BA                     l1842:
  2504   0079BA  0E00               	movlw	0
  2505   0079BC  140B               	andwf	___xxtofl@arg^0,w,c
  2506   0079BE  6E05               	movwf	??___xxtofl^0,c
  2507   0079C0  0E00               	movlw	0
  2508   0079C2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2509   0079C4  6E06               	movwf	(??___xxtofl+1)^0,c
  2510   0079C6  0E00               	movlw	0
  2511   0079C8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2512   0079CA  6E07               	movwf	(??___xxtofl+2)^0,c
  2513   0079CC  0EFE               	movlw	254
  2514   0079CE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2515   0079D0  6E08               	movwf	(??___xxtofl+3)^0,c
  2516   0079D2  5005               	movf	??___xxtofl^0,w,c
  2517   0079D4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2518   0079D6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2519   0079D8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2520   0079DA  A4D8               	btfss	status,2,c
  2521   0079DC  EFF2  F03C         	goto	u1461
  2522   0079E0  EFF4  F03C         	goto	u1460
  2523   0079E4                     u1461:
  2524   0079E4  EFD7  F03C         	goto	l1840
  2525   0079E8                     u1460:
  2526   0079E8  EF02  F03D         	goto	l733
  2527   0079EC                     l1844:
  2528   0079EC  2A0A               	incf	___xxtofl@exp^0,f,c
  2529   0079EE  0E01               	movlw	1
  2530   0079F0  260B               	addwf	___xxtofl@arg^0,f,c
  2531   0079F2  0E00               	movlw	0
  2532   0079F4  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2533   0079F6  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2534   0079F8  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2535   0079FA  90D8               	bcf	status,0,c
  2536   0079FC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2537   0079FE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2538   007A00  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2539   007A02  320B               	rrcf	___xxtofl@arg^0,f,c
  2540   007A04                     l733:
  2541   007A04  0E00               	movlw	0
  2542   007A06  140B               	andwf	___xxtofl@arg^0,w,c
  2543   007A08  6E05               	movwf	??___xxtofl^0,c
  2544   007A0A  0E00               	movlw	0
  2545   007A0C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2546   007A0E  6E06               	movwf	(??___xxtofl+1)^0,c
  2547   007A10  0E00               	movlw	0
  2548   007A12  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2549   007A14  6E07               	movwf	(??___xxtofl+2)^0,c
  2550   007A16  0EFF               	movlw	255
  2551   007A18  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2552   007A1A  6E08               	movwf	(??___xxtofl+3)^0,c
  2553   007A1C  5005               	movf	??___xxtofl^0,w,c
  2554   007A1E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2555   007A20  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2556   007A22  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2557   007A24  A4D8               	btfss	status,2,c
  2558   007A26  EF17  F03D         	goto	u1471
  2559   007A2A  EF19  F03D         	goto	u1470
  2560   007A2E                     u1471:
  2561   007A2E  EFF6  F03C         	goto	l1844
  2562   007A32                     u1470:
  2563   007A32  EF21  F03D         	goto	l1852
  2564   007A36                     l1850:
  2565   007A36  060A               	decf	___xxtofl@exp^0,f,c
  2566   007A38  90D8               	bcf	status,0,c
  2567   007A3A  360B               	rlcf	___xxtofl@arg^0,f,c
  2568   007A3C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2569   007A3E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2570   007A40  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2571   007A42                     l1852:
  2572   007A42  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2573   007A44  EF26  F03D         	goto	u1481
  2574   007A48  EF28  F03D         	goto	u1480
  2575   007A4C                     u1481:
  2576   007A4C  EF30  F03D         	goto	l740
  2577   007A50                     u1480:
  2578   007A50  0E02               	movlw	2
  2579   007A52  600A               	cpfslt	___xxtofl@exp^0,c
  2580   007A54  EF2E  F03D         	goto	u1491
  2581   007A58  EF30  F03D         	goto	u1490
  2582   007A5C                     u1491:
  2583   007A5C  EF1B  F03D         	goto	l1850
  2584   007A60                     u1490:
  2585   007A60                     l740:
  2586   007A60  B00A               	btfsc	___xxtofl@exp^0,0,c
  2587   007A62  EF35  F03D         	goto	u1501
  2588   007A66  EF37  F03D         	goto	u1500
  2589   007A6A                     u1501:
  2590   007A6A  EF38  F03D         	goto	l1858
  2591   007A6E                     u1500:
  2592   007A6E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2593   007A70                     l1858:
  2594   007A70  90D8               	bcf	status,0,c
  2595   007A72  320A               	rrcf	___xxtofl@exp^0,f,c
  2596   007A74  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2597   007A78  6A06               	clrf	(??___xxtofl+1)^0,c
  2598   007A7A  6A07               	clrf	(??___xxtofl+2)^0,c
  2599   007A7C  6A08               	clrf	(??___xxtofl+3)^0,c
  2600   007A7E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2601   007A82  6A07               	clrf	(??___xxtofl+2)^0,c
  2602   007A84  6A06               	clrf	(??___xxtofl+1)^0,c
  2603   007A86  6A05               	clrf	??___xxtofl^0,c
  2604   007A88  5005               	movf	??___xxtofl^0,w,c
  2605   007A8A  120B               	iorwf	___xxtofl@arg^0,f,c
  2606   007A8C  5006               	movf	(??___xxtofl+1)^0,w,c
  2607   007A8E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2608   007A90  5007               	movf	(??___xxtofl+2)^0,w,c
  2609   007A92  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2610   007A94  5008               	movf	(??___xxtofl+3)^0,w,c
  2611   007A96  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2612   007A98  5009               	movf	___xxtofl@sign^0,w,c
  2613   007A9A  B4D8               	btfsc	status,2,c
  2614   007A9C  EF52  F03D         	goto	u1511
  2615   007AA0  EF54  F03D         	goto	u1510
  2616   007AA4                     u1511:
  2617   007AA4  EF5C  F03D         	goto	l1868
  2618   007AA8                     u1510:
  2619   007AA8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2620   007AAA  EF5B  F03D         	goto	u1520
  2621   007AAE  EF59  F03D         	goto	u1521
  2622   007AB2                     u1521:
  2623   007AB2  EF5C  F03D         	goto	l1868
  2624   007AB6                     u1520:
  2625   007AB6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2626   007AB8                     l1868:
  2627   007AB8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2628   007ABC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2629   007AC0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2630   007AC4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2631   007AC8                     l729:
  2632   007AC8  0012               	return		;funcret
  2633   007ACA                     __end_of___xxtofl:
  2634                           	callstack 0
  2635                           
  2636 ;; *************** function ___fltol *****************
  2637 ;; Defined at:
  2638 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  f1              4   39[COMRAM] unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  exp1            1   48[COMRAM] unsigned char 
  2643 ;;  sign1           1   47[COMRAM] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  4   39[COMRAM] long 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2653 ;;      Params:         4       0       0       0       0       0       0
  2654 ;;      Locals:         2       0       0       0       0       0       0
  2655 ;;      Temps:          4       0       0       0       0       0       0
  2656 ;;      Totals:        10       0       0       0       0       0       0
  2657 ;;Total ram usage:       10 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text19
  2667   0075A6                     __ptext19:
  2668                           	callstack 0
  2669   0075A6                     ___fltol:
  2670                           	callstack 30
  2671   0075A6  342A               	rlcf	(___fltol@f1+2)^0,w,c
  2672   0075A8  342B               	rlcf	(___fltol@f1+3)^0,w,c
  2673   0075AA  6E31               	movwf	___fltol@exp1^0,c
  2674   0075AC  5031               	movf	___fltol@exp1^0,w,c
  2675   0075AE  A4D8               	btfss	status,2,c
  2676   0075B0  EFDC  F03A         	goto	u1361
  2677   0075B4  EFDE  F03A         	goto	u1360
  2678   0075B8                     u1361:
  2679   0075B8  EFE8  F03A         	goto	l1788
  2680   0075BC                     u1360:
  2681   0075BC                     l1784:
  2682   0075BC  0E00               	movlw	0
  2683   0075BE  6E28               	movwf	?___fltol^0,c
  2684   0075C0  0E00               	movlw	0
  2685   0075C2  6E29               	movwf	(?___fltol+1)^0,c
  2686   0075C4  0E00               	movlw	0
  2687   0075C6  6E2A               	movwf	(?___fltol+2)^0,c
  2688   0075C8  0E00               	movlw	0
  2689   0075CA  6E2B               	movwf	(?___fltol+3)^0,c
  2690   0075CC  EF55  F03B         	goto	l368
  2691   0075D0                     l1788:
  2692   0075D0  C028  F02C         	movff	___fltol@f1,??___fltol
  2693   0075D4  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  2694   0075D8  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  2695   0075DC  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  2696   0075E0  0E20               	movlw	32
  2697   0075E2  EFF8  F03A         	goto	u1370
  2698   0075E6                     u1375:
  2699   0075E6  90D8               	bcf	status,0,c
  2700   0075E8  322F               	rrcf	(??___fltol+3)^0,f,c
  2701   0075EA  322E               	rrcf	(??___fltol+2)^0,f,c
  2702   0075EC  322D               	rrcf	(??___fltol+1)^0,f,c
  2703   0075EE  322C               	rrcf	??___fltol^0,f,c
  2704   0075F0                     u1370:
  2705   0075F0  2EE8               	decfsz	wreg,f,c
  2706   0075F2  EFF3  F03A         	goto	u1375
  2707   0075F6  502C               	movf	??___fltol^0,w,c
  2708   0075F8  6E30               	movwf	___fltol@sign1^0,c
  2709   0075FA  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  2710   0075FC  0EFF               	movlw	255
  2711   0075FE  1628               	andwf	___fltol@f1^0,f,c
  2712   007600  0EFF               	movlw	255
  2713   007602  1629               	andwf	(___fltol@f1+1)^0,f,c
  2714   007604  0EFF               	movlw	255
  2715   007606  162A               	andwf	(___fltol@f1+2)^0,f,c
  2716   007608  0E00               	movlw	0
  2717   00760A  162B               	andwf	(___fltol@f1+3)^0,f,c
  2718   00760C  0E96               	movlw	150
  2719   00760E  5E31               	subwf	___fltol@exp1^0,f,c
  2720   007610  BE31               	btfsc	___fltol@exp1^0,7,c
  2721   007612  EF0F  F03B         	goto	u1380
  2722   007616  EF0D  F03B         	goto	u1381
  2723   00761A                     u1381:
  2724   00761A  EF25  F03B         	goto	l1808
  2725   00761E                     u1380:
  2726   00761E  5031               	movf	___fltol@exp1^0,w,c
  2727   007620  0A80               	xorlw	128
  2728   007622  0F97               	addlw	151
  2729   007624  B0D8               	btfsc	status,0,c
  2730   007626  EF17  F03B         	goto	u1391
  2731   00762A  EF19  F03B         	goto	u1390
  2732   00762E                     u1391:
  2733   00762E  EF1B  F03B         	goto	l1804
  2734   007632                     u1390:
  2735   007632  EFDE  F03A         	goto	l1784
  2736   007636                     l1804:
  2737   007636  90D8               	bcf	status,0,c
  2738   007638  322B               	rrcf	(___fltol@f1+3)^0,f,c
  2739   00763A  322A               	rrcf	(___fltol@f1+2)^0,f,c
  2740   00763C  3229               	rrcf	(___fltol@f1+1)^0,f,c
  2741   00763E  3228               	rrcf	___fltol@f1^0,f,c
  2742   007640  3E31               	incfsz	___fltol@exp1^0,f,c
  2743   007642  EF1B  F03B         	goto	l1804
  2744   007646  EF3D  F03B         	goto	l1818
  2745   00764A                     l1808:
  2746   00764A  0E1F               	movlw	31
  2747   00764C  6431               	cpfsgt	___fltol@exp1^0,c
  2748   00764E  EF2B  F03B         	goto	u1401
  2749   007652  EF2D  F03B         	goto	u1400
  2750   007656                     u1401:
  2751   007656  EF35  F03B         	goto	l1816
  2752   00765A                     u1400:
  2753   00765A  EFDE  F03A         	goto	l1784
  2754   00765E                     l1814:
  2755   00765E  90D8               	bcf	status,0,c
  2756   007660  3628               	rlcf	___fltol@f1^0,f,c
  2757   007662  3629               	rlcf	(___fltol@f1+1)^0,f,c
  2758   007664  362A               	rlcf	(___fltol@f1+2)^0,f,c
  2759   007666  362B               	rlcf	(___fltol@f1+3)^0,f,c
  2760   007668  0631               	decf	___fltol@exp1^0,f,c
  2761   00766A                     l1816:
  2762   00766A  5031               	movf	___fltol@exp1^0,w,c
  2763   00766C  A4D8               	btfss	status,2,c
  2764   00766E  EF3B  F03B         	goto	u1411
  2765   007672  EF3D  F03B         	goto	u1410
  2766   007676                     u1411:
  2767   007676  EF2F  F03B         	goto	l1814
  2768   00767A                     u1410:
  2769   00767A                     l1818:
  2770   00767A  5030               	movf	___fltol@sign1^0,w,c
  2771   00767C  B4D8               	btfsc	status,2,c
  2772   00767E  EF43  F03B         	goto	u1421
  2773   007682  EF45  F03B         	goto	u1420
  2774   007686                     u1421:
  2775   007686  EF4D  F03B         	goto	l1822
  2776   00768A                     u1420:
  2777   00768A  1E2B               	comf	(___fltol@f1+3)^0,f,c
  2778   00768C  1E2A               	comf	(___fltol@f1+2)^0,f,c
  2779   00768E  1E29               	comf	(___fltol@f1+1)^0,f,c
  2780   007690  6C28               	negf	___fltol@f1^0,c
  2781   007692  0E00               	movlw	0
  2782   007694  2229               	addwfc	(___fltol@f1+1)^0,f,c
  2783   007696  222A               	addwfc	(___fltol@f1+2)^0,f,c
  2784   007698  222B               	addwfc	(___fltol@f1+3)^0,f,c
  2785   00769A                     l1822:
  2786   00769A  C028  F028         	movff	___fltol@f1,?___fltol
  2787   00769E  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  2788   0076A2  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  2789   0076A6  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  2790   0076AA                     l368:
  2791   0076AA  0012               	return		;funcret
  2792   0076AC                     __end_of___fltol:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function ___flmul *****************
  2796 ;; Defined at:
  2797 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  b               4   14[COMRAM] long 
  2800 ;;  a               4   18[COMRAM] long 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  prod            4   33[COMRAM] struct .
  2803 ;;  grs             4   27[COMRAM] unsigned long 
  2804 ;;  temp            2   37[COMRAM] struct .
  2805 ;;  bexp            1   32[COMRAM] unsigned char 
  2806 ;;  aexp            1   31[COMRAM] unsigned char 
  2807 ;;  sign            1   26[COMRAM] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  4   14[COMRAM] unsigned char 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0, prodl, prodh
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2817 ;;      Params:         8       0       0       0       0       0       0
  2818 ;;      Locals:        13       0       0       0       0       0       0
  2819 ;;      Temps:          4       0       0       0       0       0       0
  2820 ;;      Totals:        25       0       0       0       0       0       0
  2821 ;;Total ram usage:       25 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_main
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text20
  2831   007ACA                     __ptext20:
  2832                           	callstack 0
  2833   007ACA                     ___flmul:
  2834                           	callstack 30
  2835   007ACA  5012               	movf	(___flmul@b+3)^0,w,c
  2836   007ACC  0B80               	andlw	128
  2837   007ACE  6E1B               	movwf	___flmul@sign^0,c
  2838   007AD0  5012               	movf	(___flmul@b+3)^0,w,c
  2839   007AD2  2412               	addwf	(___flmul@b+3)^0,w,c
  2840   007AD4  6E21               	movwf	___flmul@bexp^0,c
  2841   007AD6  AE11               	btfss	(___flmul@b+2)^0,7,c
  2842   007AD8  EF70  F03D         	goto	u1171
  2843   007ADC  EF72  F03D         	goto	u1170
  2844   007AE0                     u1171:
  2845   007AE0  EF73  F03D         	goto	l1658
  2846   007AE4                     u1170:
  2847   007AE4  8021               	bsf	___flmul@bexp^0,0,c
  2848   007AE6                     l1658:
  2849   007AE6  5021               	movf	___flmul@bexp^0,w,c
  2850   007AE8  B4D8               	btfsc	status,2,c
  2851   007AEA  EF79  F03D         	goto	u1181
  2852   007AEE  EF7B  F03D         	goto	u1180
  2853   007AF2                     u1181:
  2854   007AF2  EF8E  F03D         	goto	l1666
  2855   007AF6                     u1180:
  2856   007AF6  2821               	incf	___flmul@bexp^0,w,c
  2857   007AF8  A4D8               	btfss	status,2,c
  2858   007AFA  EF81  F03D         	goto	u1191
  2859   007AFE  EF83  F03D         	goto	u1190
  2860   007B02                     u1191:
  2861   007B02  EF8B  F03D         	goto	l1664
  2862   007B06                     u1190:
  2863   007B06  0E00               	movlw	0
  2864   007B08  6E0F               	movwf	___flmul@b^0,c
  2865   007B0A  0E00               	movlw	0
  2866   007B0C  6E10               	movwf	(___flmul@b+1)^0,c
  2867   007B0E  0E00               	movlw	0
  2868   007B10  6E11               	movwf	(___flmul@b+2)^0,c
  2869   007B12  0E00               	movlw	0
  2870   007B14  6E12               	movwf	(___flmul@b+3)^0,c
  2871   007B16                     l1664:
  2872   007B16  8E11               	bsf	(___flmul@b+2)^0,7,c
  2873   007B18  EF96  F03D         	goto	l1668
  2874   007B1C                     l1666:
  2875   007B1C  0E00               	movlw	0
  2876   007B1E  6E0F               	movwf	___flmul@b^0,c
  2877   007B20  0E00               	movlw	0
  2878   007B22  6E10               	movwf	(___flmul@b+1)^0,c
  2879   007B24  0E00               	movlw	0
  2880   007B26  6E11               	movwf	(___flmul@b+2)^0,c
  2881   007B28  0E00               	movlw	0
  2882   007B2A  6E12               	movwf	(___flmul@b+3)^0,c
  2883   007B2C                     l1668:
  2884   007B2C  5016               	movf	(___flmul@a+3)^0,w,c
  2885   007B2E  0B80               	andlw	128
  2886   007B30  1A1B               	xorwf	___flmul@sign^0,f,c
  2887   007B32  5016               	movf	(___flmul@a+3)^0,w,c
  2888   007B34  2416               	addwf	(___flmul@a+3)^0,w,c
  2889   007B36  6E20               	movwf	___flmul@aexp^0,c
  2890   007B38  AE15               	btfss	(___flmul@a+2)^0,7,c
  2891   007B3A  EFA1  F03D         	goto	u1201
  2892   007B3E  EFA3  F03D         	goto	u1200
  2893   007B42                     u1201:
  2894   007B42  EFA4  F03D         	goto	l1676
  2895   007B46                     u1200:
  2896   007B46  8020               	bsf	___flmul@aexp^0,0,c
  2897   007B48                     l1676:
  2898   007B48  5020               	movf	___flmul@aexp^0,w,c
  2899   007B4A  B4D8               	btfsc	status,2,c
  2900   007B4C  EFAA  F03D         	goto	u1211
  2901   007B50  EFAC  F03D         	goto	u1210
  2902   007B54                     u1211:
  2903   007B54  EFBF  F03D         	goto	l1684
  2904   007B58                     u1210:
  2905   007B58  2820               	incf	___flmul@aexp^0,w,c
  2906   007B5A  A4D8               	btfss	status,2,c
  2907   007B5C  EFB2  F03D         	goto	u1221
  2908   007B60  EFB4  F03D         	goto	u1220
  2909   007B64                     u1221:
  2910   007B64  EFBC  F03D         	goto	l1682
  2911   007B68                     u1220:
  2912   007B68  0E00               	movlw	0
  2913   007B6A  6E13               	movwf	___flmul@a^0,c
  2914   007B6C  0E00               	movlw	0
  2915   007B6E  6E14               	movwf	(___flmul@a+1)^0,c
  2916   007B70  0E00               	movlw	0
  2917   007B72  6E15               	movwf	(___flmul@a+2)^0,c
  2918   007B74  0E00               	movlw	0
  2919   007B76  6E16               	movwf	(___flmul@a+3)^0,c
  2920   007B78                     l1682:
  2921   007B78  8E15               	bsf	(___flmul@a+2)^0,7,c
  2922   007B7A  EFC7  F03D         	goto	l685
  2923   007B7E                     l1684:
  2924   007B7E  0E00               	movlw	0
  2925   007B80  6E13               	movwf	___flmul@a^0,c
  2926   007B82  0E00               	movlw	0
  2927   007B84  6E14               	movwf	(___flmul@a+1)^0,c
  2928   007B86  0E00               	movlw	0
  2929   007B88  6E15               	movwf	(___flmul@a+2)^0,c
  2930   007B8A  0E00               	movlw	0
  2931   007B8C  6E16               	movwf	(___flmul@a+3)^0,c
  2932   007B8E                     l685:
  2933   007B8E  5020               	movf	___flmul@aexp^0,w,c
  2934   007B90  B4D8               	btfsc	status,2,c
  2935   007B92  EFCD  F03D         	goto	u1231
  2936   007B96  EFCF  F03D         	goto	u1230
  2937   007B9A                     u1231:
  2938   007B9A  EFD7  F03D         	goto	l1688
  2939   007B9E                     u1230:
  2940   007B9E  5021               	movf	___flmul@bexp^0,w,c
  2941   007BA0  A4D8               	btfss	status,2,c
  2942   007BA2  EFD5  F03D         	goto	u1241
  2943   007BA6  EFD7  F03D         	goto	u1240
  2944   007BAA                     u1241:
  2945   007BAA  EFE1  F03D         	goto	l1692
  2946   007BAE                     u1240:
  2947   007BAE                     l1688:
  2948   007BAE  0E00               	movlw	0
  2949   007BB0  6E0F               	movwf	?___flmul^0,c
  2950   007BB2  0E00               	movlw	0
  2951   007BB4  6E10               	movwf	(?___flmul+1)^0,c
  2952   007BB6  0E00               	movlw	0
  2953   007BB8  6E11               	movwf	(?___flmul+2)^0,c
  2954   007BBA  0E00               	movlw	0
  2955   007BBC  6E12               	movwf	(?___flmul+3)^0,c
  2956   007BBE  EF79  F03F         	goto	l689
  2957   007BC2                     l1692:
  2958   007BC2  5015               	movf	(___flmul@a+2)^0,w,c
  2959   007BC4  020F               	mulwf	___flmul@b^0,c
  2960   007BC6  CFF3 F026          	movff	prodl,___flmul@temp
  2961   007BCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  2962   007BCE  5026               	movf	___flmul@temp^0,w,c
  2963   007BD0  6E1C               	movwf	___flmul@grs^0,c
  2964   007BD2  6A1D               	clrf	(___flmul@grs+1)^0,c
  2965   007BD4  6A1E               	clrf	(___flmul@grs+2)^0,c
  2966   007BD6  6A1F               	clrf	(___flmul@grs+3)^0,c
  2967   007BD8  5027               	movf	(___flmul@temp+1)^0,w,c
  2968   007BDA  6E22               	movwf	___flmul@prod^0,c
  2969   007BDC  6A23               	clrf	(___flmul@prod+1)^0,c
  2970   007BDE  6A24               	clrf	(___flmul@prod+2)^0,c
  2971   007BE0  6A25               	clrf	(___flmul@prod+3)^0,c
  2972   007BE2  5014               	movf	(___flmul@a+1)^0,w,c
  2973   007BE4  0210               	mulwf	(___flmul@b+1)^0,c
  2974   007BE6  CFF3 F026          	movff	prodl,___flmul@temp
  2975   007BEA  CFF4 F027          	movff	prodh,___flmul@temp+1
  2976   007BEE  5026               	movf	___flmul@temp^0,w,c
  2977   007BF0  261C               	addwf	___flmul@grs^0,f,c
  2978   007BF2  0E00               	movlw	0
  2979   007BF4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2980   007BF6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2981   007BF8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2982   007BFA  5027               	movf	(___flmul@temp+1)^0,w,c
  2983   007BFC  2622               	addwf	___flmul@prod^0,f,c
  2984   007BFE  0E00               	movlw	0
  2985   007C00  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2986   007C02  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2987   007C04  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2988   007C06  5013               	movf	___flmul@a^0,w,c
  2989   007C08  0211               	mulwf	(___flmul@b+2)^0,c
  2990   007C0A  CFF3 F026          	movff	prodl,___flmul@temp
  2991   007C0E  CFF4 F027          	movff	prodh,___flmul@temp+1
  2992   007C12  5026               	movf	___flmul@temp^0,w,c
  2993   007C14  261C               	addwf	___flmul@grs^0,f,c
  2994   007C16  0E00               	movlw	0
  2995   007C18  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2996   007C1A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2997   007C1C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2998   007C1E  5027               	movf	(___flmul@temp+1)^0,w,c
  2999   007C20  2622               	addwf	___flmul@prod^0,f,c
  3000   007C22  0E00               	movlw	0
  3001   007C24  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3002   007C26  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3003   007C28  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3004   007C2A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3005   007C2E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3006   007C32  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3007   007C36  6A1C               	clrf	___flmul@grs^0,c
  3008   007C38  5013               	movf	___flmul@a^0,w,c
  3009   007C3A  0210               	mulwf	(___flmul@b+1)^0,c
  3010   007C3C  CFF3 F026          	movff	prodl,___flmul@temp
  3011   007C40  CFF4 F027          	movff	prodh,___flmul@temp+1
  3012   007C44  5026               	movf	___flmul@temp^0,w,c
  3013   007C46  261C               	addwf	___flmul@grs^0,f,c
  3014   007C48  5027               	movf	(___flmul@temp+1)^0,w,c
  3015   007C4A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3016   007C4C  0E00               	movlw	0
  3017   007C4E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3018   007C50  0E00               	movlw	0
  3019   007C52  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3020   007C54  5014               	movf	(___flmul@a+1)^0,w,c
  3021   007C56  020F               	mulwf	___flmul@b^0,c
  3022   007C58  CFF3 F026          	movff	prodl,___flmul@temp
  3023   007C5C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3024   007C60  5026               	movf	___flmul@temp^0,w,c
  3025   007C62  261C               	addwf	___flmul@grs^0,f,c
  3026   007C64  5027               	movf	(___flmul@temp+1)^0,w,c
  3027   007C66  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3028   007C68  0E00               	movlw	0
  3029   007C6A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3030   007C6C  0E00               	movlw	0
  3031   007C6E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3032   007C70  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3033   007C74  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3034   007C78  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3035   007C7C  6A1C               	clrf	___flmul@grs^0,c
  3036   007C7E  5013               	movf	___flmul@a^0,w,c
  3037   007C80  020F               	mulwf	___flmul@b^0,c
  3038   007C82  CFF3 F026          	movff	prodl,___flmul@temp
  3039   007C86  CFF4 F027          	movff	prodh,___flmul@temp+1
  3040   007C8A  5026               	movf	___flmul@temp^0,w,c
  3041   007C8C  261C               	addwf	___flmul@grs^0,f,c
  3042   007C8E  5027               	movf	(___flmul@temp+1)^0,w,c
  3043   007C90  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3044   007C92  0E00               	movlw	0
  3045   007C94  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3046   007C96  0E00               	movlw	0
  3047   007C98  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3048   007C9A  5015               	movf	(___flmul@a+2)^0,w,c
  3049   007C9C  0210               	mulwf	(___flmul@b+1)^0,c
  3050   007C9E  CFF3 F026          	movff	prodl,___flmul@temp
  3051   007CA2  CFF4 F027          	movff	prodh,___flmul@temp+1
  3052   007CA6  5026               	movf	___flmul@temp^0,w,c
  3053   007CA8  2622               	addwf	___flmul@prod^0,f,c
  3054   007CAA  5027               	movf	(___flmul@temp+1)^0,w,c
  3055   007CAC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3056   007CAE  0E00               	movlw	0
  3057   007CB0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3058   007CB2  0E00               	movlw	0
  3059   007CB4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3060   007CB6  5014               	movf	(___flmul@a+1)^0,w,c
  3061   007CB8  0211               	mulwf	(___flmul@b+2)^0,c
  3062   007CBA  CFF3 F026          	movff	prodl,___flmul@temp
  3063   007CBE  CFF4 F027          	movff	prodh,___flmul@temp+1
  3064   007CC2  5026               	movf	___flmul@temp^0,w,c
  3065   007CC4  2622               	addwf	___flmul@prod^0,f,c
  3066   007CC6  5027               	movf	(___flmul@temp+1)^0,w,c
  3067   007CC8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3068   007CCA  0E00               	movlw	0
  3069   007CCC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3070   007CCE  0E00               	movlw	0
  3071   007CD0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3072   007CD2  5015               	movf	(___flmul@a+2)^0,w,c
  3073   007CD4  0211               	mulwf	(___flmul@b+2)^0,c
  3074   007CD6  CFF3 F026          	movff	prodl,___flmul@temp
  3075   007CDA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3076   007CDE  5026               	movf	___flmul@temp^0,w,c
  3077   007CE0  6E17               	movwf	??___flmul^0,c
  3078   007CE2  5027               	movf	(___flmul@temp+1)^0,w,c
  3079   007CE4  6E18               	movwf	(??___flmul+1)^0,c
  3080   007CE6  6A19               	clrf	(??___flmul+2)^0,c
  3081   007CE8  6A1A               	clrf	(??___flmul+3)^0,c
  3082   007CEA  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3083   007CEE  C018  F019         	movff	??___flmul+1,??___flmul+2
  3084   007CF2  C017  F018         	movff	??___flmul,??___flmul+1
  3085   007CF6  6A17               	clrf	??___flmul^0,c
  3086   007CF8  5017               	movf	??___flmul^0,w,c
  3087   007CFA  2622               	addwf	___flmul@prod^0,f,c
  3088   007CFC  5018               	movf	(??___flmul+1)^0,w,c
  3089   007CFE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3090   007D00  5019               	movf	(??___flmul+2)^0,w,c
  3091   007D02  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3092   007D04  501A               	movf	(??___flmul+3)^0,w,c
  3093   007D06  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3094   007D08  C01C  F017         	movff	___flmul@grs,??___flmul
  3095   007D0C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3096   007D10  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3097   007D14  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3098   007D18  0E19               	movlw	25
  3099   007D1A  EF94  F03E         	goto	u1250
  3100   007D1E                     u1255:
  3101   007D1E  90D8               	bcf	status,0,c
  3102   007D20  321A               	rrcf	(??___flmul+3)^0,f,c
  3103   007D22  3219               	rrcf	(??___flmul+2)^0,f,c
  3104   007D24  3218               	rrcf	(??___flmul+1)^0,f,c
  3105   007D26  3217               	rrcf	??___flmul^0,f,c
  3106   007D28                     u1250:
  3107   007D28  2EE8               	decfsz	wreg,f,c
  3108   007D2A  EF8F  F03E         	goto	u1255
  3109   007D2E  5017               	movf	??___flmul^0,w,c
  3110   007D30  2622               	addwf	___flmul@prod^0,f,c
  3111   007D32  5018               	movf	(??___flmul+1)^0,w,c
  3112   007D34  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3113   007D36  5019               	movf	(??___flmul+2)^0,w,c
  3114   007D38  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3115   007D3A  501A               	movf	(??___flmul+3)^0,w,c
  3116   007D3C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3117   007D3E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3118   007D42  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3119   007D46  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3120   007D4A  6A1C               	clrf	___flmul@grs^0,c
  3121   007D4C  5020               	movf	___flmul@aexp^0,w,c
  3122   007D4E  C021  F017         	movff	___flmul@bexp,??___flmul
  3123   007D52  6A18               	clrf	(??___flmul+1)^0,c
  3124   007D54  2617               	addwf	??___flmul^0,f,c
  3125   007D56  0E00               	movlw	0
  3126   007D58  2218               	addwfc	(??___flmul+1)^0,f,c
  3127   007D5A  0E82               	movlw	130
  3128   007D5C  2417               	addwf	??___flmul^0,w,c
  3129   007D5E  6E26               	movwf	___flmul@temp^0,c
  3130   007D60  0EFF               	movlw	255
  3131   007D62  2018               	addwfc	(??___flmul+1)^0,w,c
  3132   007D64  6E27               	movwf	(___flmul@temp+1)^0,c
  3133   007D66  EFCA  F03E         	goto	l1740
  3134   007D6A                     l1734:
  3135   007D6A  90D8               	bcf	status,0,c
  3136   007D6C  3622               	rlcf	___flmul@prod^0,f,c
  3137   007D6E  3623               	rlcf	(___flmul@prod+1)^0,f,c
  3138   007D70  3624               	rlcf	(___flmul@prod+2)^0,f,c
  3139   007D72  3625               	rlcf	(___flmul@prod+3)^0,f,c
  3140   007D74  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3141   007D76  EFBF  F03E         	goto	u1261
  3142   007D7A  EFC1  F03E         	goto	u1260
  3143   007D7E                     u1261:
  3144   007D7E  EFC2  F03E         	goto	l692
  3145   007D82                     u1260:
  3146   007D82  8022               	bsf	___flmul@prod^0,0,c
  3147   007D84                     l692:
  3148   007D84  90D8               	bcf	status,0,c
  3149   007D86  361C               	rlcf	___flmul@grs^0,f,c
  3150   007D88  361D               	rlcf	(___flmul@grs+1)^0,f,c
  3151   007D8A  361E               	rlcf	(___flmul@grs+2)^0,f,c
  3152   007D8C  361F               	rlcf	(___flmul@grs+3)^0,f,c
  3153   007D8E  0626               	decf	___flmul@temp^0,f,c
  3154   007D90  A0D8               	btfss	status,0,c
  3155   007D92  0627               	decf	(___flmul@temp+1)^0,f,c
  3156   007D94                     l1740:
  3157   007D94  AE24               	btfss	(___flmul@prod+2)^0,7,c
  3158   007D96  EFCF  F03E         	goto	u1271
  3159   007D9A  EFD1  F03E         	goto	u1270
  3160   007D9E                     u1271:
  3161   007D9E  EFB5  F03E         	goto	l1734
  3162   007DA2                     u1270:
  3163   007DA2  0E00               	movlw	0
  3164   007DA4  6E20               	movwf	___flmul@aexp^0,c
  3165   007DA6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3166   007DA8  EFD8  F03E         	goto	u1281
  3167   007DAC  EFDA  F03E         	goto	u1280
  3168   007DB0                     u1281:
  3169   007DB0  EFFE  F03E         	goto	l694
  3170   007DB4                     u1280:
  3171   007DB4  0EFF               	movlw	255
  3172   007DB6  141C               	andwf	___flmul@grs^0,w,c
  3173   007DB8  6E17               	movwf	??___flmul^0,c
  3174   007DBA  0EFF               	movlw	255
  3175   007DBC  141D               	andwf	(___flmul@grs+1)^0,w,c
  3176   007DBE  6E18               	movwf	(??___flmul+1)^0,c
  3177   007DC0  0EFF               	movlw	255
  3178   007DC2  141E               	andwf	(___flmul@grs+2)^0,w,c
  3179   007DC4  6E19               	movwf	(??___flmul+2)^0,c
  3180   007DC6  0E7F               	movlw	127
  3181   007DC8  141F               	andwf	(___flmul@grs+3)^0,w,c
  3182   007DCA  6E1A               	movwf	(??___flmul+3)^0,c
  3183   007DCC  5017               	movf	??___flmul^0,w,c
  3184   007DCE  1018               	iorwf	(??___flmul+1)^0,w,c
  3185   007DD0  1019               	iorwf	(??___flmul+2)^0,w,c
  3186   007DD2  101A               	iorwf	(??___flmul+3)^0,w,c
  3187   007DD4  B4D8               	btfsc	status,2,c
  3188   007DD6  EFEF  F03E         	goto	u1291
  3189   007DDA  EFF1  F03E         	goto	u1290
  3190   007DDE                     u1291:
  3191   007DDE  EFF5  F03E         	goto	l695
  3192   007DE2                     u1290:
  3193   007DE2                     l1748:
  3194   007DE2  0E01               	movlw	1
  3195   007DE4  6E20               	movwf	___flmul@aexp^0,c
  3196   007DE6  EFFE  F03E         	goto	l694
  3197   007DEA                     l695:
  3198   007DEA  A022               	btfss	___flmul@prod^0,0,c
  3199   007DEC  EFFA  F03E         	goto	u1301
  3200   007DF0  EFFC  F03E         	goto	u1300
  3201   007DF4                     u1301:
  3202   007DF4  EFFE  F03E         	goto	l694
  3203   007DF8                     u1300:
  3204   007DF8  EFF1  F03E         	goto	l1748
  3205   007DFC                     l694:
  3206   007DFC  5020               	movf	___flmul@aexp^0,w,c
  3207   007DFE  B4D8               	btfsc	status,2,c
  3208   007E00  EF04  F03F         	goto	u1311
  3209   007E04  EF06  F03F         	goto	u1310
  3210   007E08                     u1311:
  3211   007E08  EF2A  F03F         	goto	l1760
  3212   007E0C                     u1310:
  3213   007E0C  0E01               	movlw	1
  3214   007E0E  2622               	addwf	___flmul@prod^0,f,c
  3215   007E10  0E00               	movlw	0
  3216   007E12  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3217   007E14  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3218   007E16  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3219   007E18  A025               	btfss	(___flmul@prod+3)^0,0,c
  3220   007E1A  EF11  F03F         	goto	u1321
  3221   007E1E  EF13  F03F         	goto	u1320
  3222   007E22                     u1321:
  3223   007E22  EF2A  F03F         	goto	l1760
  3224   007E26                     u1320:
  3225   007E26  C022  F017         	movff	___flmul@prod,??___flmul
  3226   007E2A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3227   007E2E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3228   007E32  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3229   007E36  341A               	rlcf	(??___flmul+3)^0,w,c
  3230   007E38  321A               	rrcf	(??___flmul+3)^0,f,c
  3231   007E3A  3219               	rrcf	(??___flmul+2)^0,f,c
  3232   007E3C  3218               	rrcf	(??___flmul+1)^0,f,c
  3233   007E3E  3217               	rrcf	??___flmul^0,f,c
  3234   007E40  C017  F022         	movff	??___flmul,___flmul@prod
  3235   007E44  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3236   007E48  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3237   007E4C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3238   007E50  4A26               	infsnz	___flmul@temp^0,f,c
  3239   007E52  2A27               	incf	(___flmul@temp+1)^0,f,c
  3240   007E54                     l1760:
  3241   007E54  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3242   007E56  EF35  F03F         	goto	u1331
  3243   007E5A  5027               	movf	(___flmul@temp+1)^0,w,c
  3244   007E5C  E108               	bnz	u1330
  3245   007E5E  2826               	incf	___flmul@temp^0,w,c
  3246   007E60  A0D8               	btfss	status,0,c
  3247   007E62  EF35  F03F         	goto	u1331
  3248   007E66  EF37  F03F         	goto	u1330
  3249   007E6A                     u1331:
  3250   007E6A  EF41  F03F         	goto	l1764
  3251   007E6E                     u1330:
  3252   007E6E  0E00               	movlw	0
  3253   007E70  6E22               	movwf	___flmul@prod^0,c
  3254   007E72  0E00               	movlw	0
  3255   007E74  6E23               	movwf	(___flmul@prod+1)^0,c
  3256   007E76  0E80               	movlw	128
  3257   007E78  6E24               	movwf	(___flmul@prod+2)^0,c
  3258   007E7A  0E7F               	movlw	127
  3259   007E7C  6E25               	movwf	(___flmul@prod+3)^0,c
  3260   007E7E  EF6F  F03F         	goto	l1776
  3261   007E82                     l1764:
  3262   007E82  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3263   007E84  EF4E  F03F         	goto	u1340
  3264   007E88  5027               	movf	(___flmul@temp+1)^0,w,c
  3265   007E8A  E106               	bnz	u1341
  3266   007E8C  0426               	decf	___flmul@temp^0,w,c
  3267   007E8E  B0D8               	btfsc	status,0,c
  3268   007E90  EF4C  F03F         	goto	u1341
  3269   007E94  EF4E  F03F         	goto	u1340
  3270   007E98                     u1341:
  3271   007E98  EF5A  F03F         	goto	l702
  3272   007E9C                     u1340:
  3273   007E9C  0E00               	movlw	0
  3274   007E9E  6E22               	movwf	___flmul@prod^0,c
  3275   007EA0  0E00               	movlw	0
  3276   007EA2  6E23               	movwf	(___flmul@prod+1)^0,c
  3277   007EA4  0E00               	movlw	0
  3278   007EA6  6E24               	movwf	(___flmul@prod+2)^0,c
  3279   007EA8  0E00               	movlw	0
  3280   007EAA  6E25               	movwf	(___flmul@prod+3)^0,c
  3281   007EAC  0E00               	movlw	0
  3282   007EAE  6E1B               	movwf	___flmul@sign^0,c
  3283   007EB0  EF6F  F03F         	goto	l1776
  3284   007EB4                     l702:
  3285   007EB4  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3286   007EB8  0EFF               	movlw	255
  3287   007EBA  1622               	andwf	___flmul@prod^0,f,c
  3288   007EBC  0EFF               	movlw	255
  3289   007EBE  1623               	andwf	(___flmul@prod+1)^0,f,c
  3290   007EC0  0E7F               	movlw	127
  3291   007EC2  1624               	andwf	(___flmul@prod+2)^0,f,c
  3292   007EC4  0E00               	movlw	0
  3293   007EC6  1625               	andwf	(___flmul@prod+3)^0,f,c
  3294   007EC8  A021               	btfss	___flmul@bexp^0,0,c
  3295   007ECA  EF69  F03F         	goto	u1351
  3296   007ECE  EF6B  F03F         	goto	u1350
  3297   007ED2                     u1351:
  3298   007ED2  EF6C  F03F         	goto	l1774
  3299   007ED6                     u1350:
  3300   007ED6  8E24               	bsf	(___flmul@prod+2)^0,7,c
  3301   007ED8                     l1774:
  3302   007ED8  90D8               	bcf	status,0,c
  3303   007EDA  3021               	rrcf	___flmul@bexp^0,w,c
  3304   007EDC  6E25               	movwf	(___flmul@prod+3)^0,c
  3305   007EDE                     l1776:
  3306   007EDE  501B               	movf	___flmul@sign^0,w,c
  3307   007EE0  1225               	iorwf	(___flmul@prod+3)^0,f,c
  3308   007EE2  C022  F00F         	movff	___flmul@prod,?___flmul
  3309   007EE6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3310   007EEA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3311   007EEE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3312   007EF2                     l689:
  3313   007EF2  0012               	return		;funcret
  3314   007EF4                     __end_of___flmul:
  3315                           	callstack 0
  3316                           
  3317                           	psect	rparam
  3318   000000                     tosu	equ	0xFFF
  3319                           tosh	equ	0xFFE
  3320                           tosl	equ	0xFFD
  3321                           stkptr	equ	0xFFC
  3322                           pclatu	equ	0xFFB
  3323                           pclath	equ	0xFFA
  3324                           pcl	equ	0xFF9
  3325                           tblptru	equ	0xFF8
  3326                           tblptrh	equ	0xFF7
  3327                           tblptrl	equ	0xFF6
  3328                           tablat	equ	0xFF5
  3329                           prodh	equ	0xFF4
  3330                           prodl	equ	0xFF3
  3331                           indf0	equ	0xFEF
  3332                           postinc0	equ	0xFEE
  3333                           postdec0	equ	0xFED
  3334                           preinc0	equ	0xFEC
  3335                           plusw0	equ	0xFEB
  3336                           fsr0h	equ	0xFEA
  3337                           fsr0l	equ	0xFE9
  3338                           wreg	equ	0xFE8
  3339                           indf1	equ	0xFE7
  3340                           postinc1	equ	0xFE6
  3341                           postdec1	equ	0xFE5
  3342                           preinc1	equ	0xFE4
  3343                           plusw1	equ	0xFE3
  3344                           fsr1h	equ	0xFE2
  3345                           fsr1l	equ	0xFE1
  3346                           bsr	equ	0xFE0
  3347                           indf2	equ	0xFDF
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           preinc2	equ	0xFDC
  3351                           plusw2	equ	0xFDB
  3352                           fsr2h	equ	0xFDA
  3353                           fsr2l	equ	0xFD9
  3354                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     81      92
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 15
		 -> main@cnv(COMRAM[15]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S514$buffer	PTR unsigned char  size(2) Largest target is 0

    S514$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 15
		 -> main@cnv(COMRAM[15]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _display->_data
    _data->_delay
    _cmd->_delay
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   10309
                                             66 COMRAM    15    15      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _cmd
                              _delay
                            _display
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    15      5    6369
                                             48 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4    6016
                                             42 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3    5660
                                             31 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     643
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    3753
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4    2172
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1083
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     569
                                             10 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 1     1      0     448
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  1     1      0     448
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                9     5      4     426
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _cmd
     _delay
   _delay
   _display
     _data
       _delay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
BITBIGSFRll        282      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     51      5C       1       96.8%
BITBIGSFRhhh        3B      0       0      16        0.0%
BITBIGSFRhhlh       21      0       0      17        0.0%
BITBIGSFRlh          E      0       0      20        0.0%
BITBIGSFRhhll        8      0       0      18        0.0%
BITBIGSFRhl          1      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7C      22        0.0%
DATA                 0      0      7C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 25 12:21:40 2024

                        l44 74E8                          l53 7022                          l62 6FB8  
                        l46 74F6                          l71 6F8E                          l56 7058  
                        l65 7130                          l68 7156                          _GO 7E11  
              ___awdiv@sign 0006         ___wmul@multiplicand 0003                         l302 74AC  
                       l315 73E8                         l702 7EB4                         l368 76AA  
                       l810 710E                         l740 7A60                         l804 77D4  
                       l733 7A04                         l726 796C                         l814 6FD4  
                       l840 6F46                         l729 7AC8                         l817 6FEC  
                       l692 7D84                         l772 71C6                         l685 7B8E  
                       l829 728A                         l837 70CC                         l749 7090  
                       l694 7DFC                         l774 71E0                         l695 7DEA  
                       l792 7330                         l689 7EF2                         l769 7188  
                       l777 7834                         l788 7914                         l796 7338  
                       _RC0 7C10                         _RC1 7C11                         u800 7228  
                       u801 7224                         u810 725A                         u811 7256  
                       u900 7366                         u820 70CC                         u901 7362  
                       u821 70C8                         u830 73FC                         u910 7380  
                       u831 73F8                         u911 737C                         u840 7416  
                       u920 739E                         u841 7412                         u921 739A  
                       u850 743C                         u930 73B4                         u851 7438  
                       u931 73B0                         u860 745A                         u940 73D8  
                       u780 71F2                         u861 7456                         u941 73D4  
                       u781 71EE                         u870 7476                         u790 7202  
                       u950 7166                         u871 7472                         u791 71FE  
                       u951 7162                         u880 749C                         u960 7180  
                       u881 7498                         u961 717C                         u890 734C  
                       u970 71C6                         u891 7348                         u971 71C2  
                       u980 71D4                         u981 71D0                         u990 6FC8  
                       u991 6FC4                         _adc 005A                         _abs 6FBA  
                       _cmd 6FEE                         _pad 7158                ___awmod@sign 0006  
                       wreg 0FE8                ___flmul@aexp 0020                ___flmul@bexp 0021  
              ___flmul@sign 001B                ___flmul@temp 0026                ___flmul@prod 0022  
              ___fltol@exp1 0031                        ?_abs 0007                        l1400 73FC  
                      l1410 7422                        l1402 7404                        l1420 745A  
                      l1412 742A                        l1404 7408                        l1500 77EE  
                      l1430 7486                        l1422 7460                        l1414 743C  
                      l1406 7416                        l1510 7828                        l1502 77F6  
                      l1600 7028                        l1424 7476                        l1416 7444  
                      l1432 748C                        l1408 741E                        l1440 733A  
                      l1520 787A                        l1512 7830                        l1504 7806  
                      l1602 702C                        l1434 749C                        l1426 747E  
                      l1418 744C                        l1450 7366                        l1442 733E  
                      l1370 71F2                        l1530 78CC                        l1522 787E  
                      l1514 783C                        l1506 780C                        l1610 70CE  
                      ?_cmd 0001                        l1700 7BFA                        l1620 6FF0  
                      l1604 702E                        l1436 74A4                        l1428 7480  
                      l1460 739E                        l1452 736E                        l1444 734C  
                      l1372 7202                        l1532 78DC                        l1524 7884  
                      l1516 7846                        l1508 781C                        l1612 70DA  
                      l1710 7C44                        l1702 7C12                        l1630 700E  
                      l1622 6FF2                        l1606 7042                        l1470 73D8  
                      l1462 73B4                        l1454 7380                        l1446 7354  
                      l1374 720C                        l1382 7092                        l1534 78EC  
                      l1518 784C                        l1526 78A0                        l1390 6F6A  
                      l1550 72DE                        l1542 728C                        l1614 70EA  
                      l1720 7C9A                        l1712 7C54                        l1704 7C1E  
                      l1624 6FF6                        l1608 7044                        l1472 73E0  
                      l1464 73BC                        l1456 7388                        l1448 7358  
                      l1376 7228                        l1368 71E2                        l1384 709E  
                      l1480 7172                        l1536 78F2                        l1528 78BA  
                      l1392 6F86                        l1552 72FE                        l1544 7294  
                      l1560 76AC                        l1616 7106                        l1640 7086  
                      l1632 705A                        l1730 7D3E                        l1722 7CB6  
                      l1714 7C60                        l1706 7C2A                        l1626 6FF8  
                      l1650 6FA2                        l1466 73C2                        l1458 7390  
                      l1378 725A                        l1386 70AC                        l1490 71D4  
                      l1482 7180                        l1538 78FE                        l1546 72B6  
                      l1554 730A                        l1570 76FE                        l1562 76CE  
                      l1634 7062                        l1740 7D94                        l1732 7D4C  
                      l1724 7CC2                        l1716 7C70                        l1708 7C38  
                      l1660 7AF6                        l1652 7ACA                        l1820 768A  
                      l1804 7636                        l1556 7110                        l1628 700C  
                      l1644 6F90                        l1396 73EA                        l1468 73C8  
                      l1492 6FBA                        l1388 70B0                        l1484 7194  
                      l1476 7158                        l1548 72C2                        l1580 775C  
                      l1572 770C                        l1564 76DA                        l1636 706A  
                      l1742 7DA2                        l1734 7D6A                        l1726 7CDE  
                      l1718 7C8A                        l1670 7B32                        l1662 7B06  
                      l1654 7AD6                        l1822 769A                        l1814 765E  
                      l1806 7640                        l1830 7936                        l1558 7124  
                      l1646 6F94                        l1398 73EE                        l1494 6FC8  
                      l1486 71A4                        l1478 7166                        l1582 7774  
                      l1574 7716                        l1566 76E6                        l1638 7072  
                      l1752 7E0C                        l1760 7E54                        l1744 7DA6  
                      l1736 7D74                        l1728 7D08                        l1680 7B68  
                      l1672 7B38                        l1664 7B16                        l1656 7AE4  
                      l1816 766A                        l1808 764A                        l1840 79AE  
                      l1832 797C                        l1648 6FA0                        l1488 71A8  
                      l1496 77D6                        l1584 778E                        l1576 7724  
                      l1568 76EA                        l1592 77B2                        l1770 7EC8  
                      l1762 7E6E                        l1754 7E18                        l1746 7DB4  
                      l1738 7D82                        l1682 7B78                        l1674 7B46  
                      l1666 7B1C                        l1658 7AE6                        l1818 767A  
                      l1850 7A36                        l1842 79BA                        l1834 7992  
                      l1826 7918                        l1498 77DA                        l1578 7740  
                      l1772 7ED6                        l1764 7E82                        l1756 7E26  
                      l1748 7DE2                        l1692 7BC2                        l1684 7B7E  
                      l1676 7B48                        l1668 7B2C                        l1860 7A74  
                      l1852 7A42                        l1844 79EC                        l1828 7928  
                      l1588 77A2                        l1774 7ED8                        l1766 7E9C  
                      l1758 7E50                        l1694 7BCE                        l1686 7B9E  
                      l1678 7B58                        l1790 75FA                        l1782 75A6  
                      l1862 7A98                        l1854 7A50                        l1846 79EE  
                      l1838 79A6                        l1598 7026                        l1768 7EB8  
                      l1776 7EDE                        l1696 7BD8                        l1688 7BAE  
                      l1792 75FC                        l1784 75BC                        l1864 7AA8  
                      l1856 7A6E                        l1848 79FA                        l1880 74E6  
                      l1872 74AE                        l1778 7EE2                        l1698 7BEE  
                      l1794 760C                        l1866 7AB6                        l1858 7A70  
                      l1890 758E                        l1882 7500                        l1874 74BA  
                      l1796 7610                        l1788 75D0                        l1868 7AB8  
                      l1892 7596                        l1884 7558                        l1876 74C0  
                      l1798 761E                        l1886 7570                        l1878 74D2  
                      ?_pad 000E                        l1888 7588                        _ADIF 7CF6  
                      STR_1 7EF5                        u1000 77EA                        u1001 77E4  
                      u1010 77EC                        u1100 7156                        u1020 7806  
                      u1101 7152                        u1021 7802                        u1030 781C  
                      u1110 76CE                        u1031 7818                        u1111 76CA  
                      u1200 7B46                        u1040 78BA                        u1120 770C  
                      u1201 7B42                        u1041 78B6                        u1121 7708  
                      u1210 7B58                        u1050 78CC                        u1130 7740  
                      u1211 7B54                        u1051 78C8                        u1131 773C  
                      u1300 7DF8                        u1220 7B68                        u1060 78DC  
                      u1140 775C                        u1301 7DF4                        u1221 7B64  
                      u1061 78D8                        u1141 7758                        u1310 7E0C  
                      u1230 7B9E                        u1070 78EC                        u1150 7106  
                      u1311 7E08                        u1231 7B9A                        u1071 78E8  
                      u1151 7102                        u1320 7E26                        u1240 7BAE  
                      u1400 765A                        u1160 6FB8                        u1080 72B6  
                      u1321 7E22                        u1241 7BAA                        u1401 7656  
                      u1161 6FB4                        u1081 72B2                        u1330 7E6E  
                      u1250 7D28                        u1170 7AE4                        u1410 767A  
                      u1090 7330                        u1331 7E6A                        u1171 7AE0  
                      u1411 7676                        u1091 732C                        u1340 7E9C  
                      u1260 7D82                        u1180 7AF6                        u1420 768A  
                      u1500 7A6E                        u1341 7E98                        u1261 7D7E  
                      u1181 7AF2                        u1421 7686                        u1501 7A6A  
                      u1350 7ED6                        u1270 7DA2                        u1190 7B06  
                      u1510 7AA8                        u1430 7928                        u1351 7ED2  
                      u1271 7D9E                        u1255 7D1E                        u1191 7B02  
                      u1511 7AA4                        u1431 7924                        u1280 7DB4  
                      u1360 75BC                        u1520 7AB6                        u1440 7936  
                      u1281 7DB0                        u1361 75B8                        u1521 7AB2  
                      u1441 7932                        u1290 7DE2                        u1370 75F0  
                      u1450 7992                        u1530 74F6                        u1291 7DDE  
                      u1451 798E                        u1531 74F2                        u1380 761E  
                      u1460 79E8                        u1540 7588                        u1381 761A  
                      u1461 79E4                        u1541 7584                        u1390 7632  
                      u1470 7A32                        u1391 762E                        u1375 75E6  
                      u1471 7A2E                        u1480 7A50                        u1481 7A4C  
                      u1490 7A60                        u1491 7A5C                        abs@a 0007  
                      _data 7024                        _dbuf 0060                        cmd@a 000A  
                      _main 74AE                        _dtoa 77D6                        _prec 0054  
                      _temp 0056                        pad@i 0013                        pad@p 0010  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        prodh 0FF4  
                      prodl 0FF3                        start 0000                ___param_bank 0000  
                     ??_abs 0009                       ??_cmd 000A                       ??_pad 0012  
                     ?_data 0001               ___fltol@sign1 0030                       ?_main 0001  
                     ?_dtoa 0015             __end_of___awdiv 74AE                       _ADRES 0FC3  
           __end_of___awmod 73EA             __end_of___flmul 7EF4             __end_of___fltol 76AC  
           ___awdiv@divisor 0003             ___awdiv@counter 0005                vfpfcnvrt@fmt 0021  
                     _PORTD 0F83                       _TRISA 0F92                       _TRISC 0F94  
                     _TRISD 0F95             __end_of_display 6FBA                       _delay 7110  
                     _flags 005C                       data@a 000A         read_prec_or_width@c 0009  
       read_prec_or_width@n 000A                       _fputc 71E2                       _fputs 7092  
                     pad@fp 000E                       _width 0052                       _putch 6F46  
                     dtoa@d 0016                       dtoa@i 001E                       dtoa@p 001C  
                     dtoa@s 001D                       dtoa@w 001A                       tablat 0FF5  
                     status 0FD8             __end_of_sprintf 7092             __initialization 6F48  
              __end_of_data 705A                __end_of_main 75A6                __end_of_dtoa 7916  
                    ??_data 000A                      ??_main 0043                      ??_dtoa 0018  
             __activetblptr 0002  __end_of_read_prec_or_width 733A                      ?_delay 0001  
                    _ADCON0 0FC2                      _ADCON1 0FC1                      _ADCON2 0FC0  
                    ?_fputc 0001                      ?_fputs 0009            ___awdiv@dividend 0001  
                    ?_putch 0001            __end_of___xxtofl 7ACA                vfprintf@cfmt 002F  
                    ___wmul 6F6A                   ??___awdiv 0005                   ??___awmod 0005  
                 ??___flmul 0017                   ??___fltol 002C        read_prec_or_width@ap 0008  
                    delay@i 0006                      delay@j 0001                      clear_0 6F4E  
                    clear_1 6F5A            ___awdiv@quotient 0007             ___awmod@divisor 0003  
                    isa$std 0001                      _result 0058             ___awmod@counter 0005  
                    pad@buf 000F                      dtoa@fp 0015                   ??_display 000C  
                    fputc@c 0001                      fputs@c 000B                      fputs@i 000C  
                    fputs@s 0009                __mediumconst 7EF4                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 0001  
          __end_of_vfprintf 7110                   ??_sprintf 0036                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  __accesstop 0060  
   __end_of__initialization 6F60               ___rparam_used 0001                  ___fltol@f1 0028  
            __pcstackCOMRAM 0001               __end_of_delay 7158               __end_of_fputc 728C  
             __end_of_fputs 70CE               __end_of_putch 6F48                     ??_delay 0005  
                   ??_fputc 0004                     ??_fputs 000B                     ??_putch 0001  
                __pbssBANK0 0060                     ?___wmul 0001                   ?___xxtofl 0001  
                   __Hparam 0000                     __Lparam 0000                     ___awdiv 73EA  
                   ___awmod 733A                     ___flmul 7ACA                     ___fltol 75A6  
                 ?_vfprintf 002B                     __pcinit 6F48                     __ramtop 0600  
                   __ptext0 74AE                     __ptext1 705A                     __ptext2 70CE  
                   __ptext3 76AC                     __ptext4 728C                     __ptext5 6F6A  
                   __ptext6 77D6                     __ptext7 7158                     __ptext8 7092  
                   __ptext9 71E2                     _display 6F90       read_prec_or_width@fmt 0007  
                ??___xxtofl 0005            ___awmod@dividend 0001                     main@cnv 0043  
                   _sprintf 705A        end_of_initialization 6F60                     fputc@fp 0003  
             __Lmediumconst 7EF4                     fputs@fp 000A          _read_prec_or_width 728C  
         __end_of_vfpfcnvrt 77D6                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 0025                  ??_vfprintf 002F               ___xxtofl@sign 0009  
      ??_read_prec_or_width 0009                 ___flmul@grs 001C                 vfpfcnvrt@ap 0022  
               vfpfcnvrt@cp 0029                 vfpfcnvrt@fp 0020              __end_of___wmul 6F90  
       start_initialization 6F48                 __end_of_abs 6FEE                 __end_of_cmd 7024  
               __end_of_pad 71E2                 vfprintf@fmt 002C                    ??___wmul 0005  
                 ___flmul@a 0013                   ___flmul@b 000F                 __pbssCOMRAM 0052  
             __pmediumconst 7EF4                    ?___awdiv 0001                    ?___awmod 0001  
                  ?___flmul 000F                    ?___fltol 0028                    ?_display 000B  
                  ?_sprintf 0031              ___wmul@product 0005                   _vfpfcnvrt 76AC  
         ___wmul@multiplier 0001                    __Hrparam 0000                  vfprintf@ap 002E  
                  __Lrparam 0000                  vfprintf@fp 002B                  ?_vfpfcnvrt 0020  
                sprintf@fmt 0032                    ___xxtofl 7916                    _dtoa$593 0018  
                  __ptext10 6F46                    __ptext11 6FBA                    __ptext20 7ACA  
                  __ptext12 733A                    __ptext13 73EA                    __ptext14 6F90  
                  __ptext15 7024                    __ptext16 6FEE                    __ptext17 7110  
                  __ptext18 7916                    __ptext19 75A6                    isa$xinst 0000  
                  _vfprintf 70CE                    display@p 000B                   sprintf@ap 0036  
               ??_vfpfcnvrt 0023                    sprintf@f 0037                    sprintf@s 0031  
