

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 06 09:38:15 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4580 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _RC7	set	31767
    51   000000                     _RC6	set	31766
    52   000000                     _RC2	set	31762
    53   000000                     _RC1	set	31761
    54   000000                     _RC0	set	31760
    55   000000                     _RC5	set	31765
    56   000000                     _RC4	set	31764
    57   000000                     _RB2	set	31754
    58   000000                     _RC3	set	31763
    59   000000                     _TRISB	set	3987
    60   000000                     _TRISC	set	3988
    61   000000                     _PORTD	set	3971
    62   000000                     _TRISD	set	3989
    63                           
    64                           	psect	smallconst
    65   000600                     __psmallconst:
    66                           	callstack 0
    67   000600  00                 	db	0
    68   000601                     STR_3:
    69   000601  4D                 	db	77	;'M'
    70   000602  31                 	db	49	;'1'
    71   000603  3A                 	db	58	;':'
    72   000604  53                 	db	83	;'S'
    73   000605  74                 	db	116	;'t'
    74   000606  6F                 	db	111	;'o'
    75   000607  70                 	db	112	;'p'
    76   000608  70                 	db	112	;'p'
    77   000609  65                 	db	101	;'e'
    78   00060A  64                 	db	100	;'d'
    79   00060B  20                 	db	32
    80   00060C  20                 	db	32
    81   00060D  20                 	db	32
    82   00060E  20                 	db	32
    83   00060F  20                 	db	32
    84   000610  20                 	db	32
    85   000611  20                 	db	32
    86   000612  00                 	db	0
    87   000613                     STR_6:
    88   000613  4D                 	db	77	;'M'
    89   000614  32                 	db	50	;'2'
    90   000615  3A                 	db	58	;':'
    91   000616  53                 	db	83	;'S'
    92   000617  74                 	db	116	;'t'
    93   000618  6F                 	db	111	;'o'
    94   000619  70                 	db	112	;'p'
    95   00061A  70                 	db	112	;'p'
    96   00061B  65                 	db	101	;'e'
    97   00061C  64                 	db	100	;'d'
    98   00061D  20                 	db	32
    99   00061E  20                 	db	32
   100   00061F  20                 	db	32
   101   000620  20                 	db	32
   102   000621  20                 	db	32
   103   000622  20                 	db	32
   104   000623  20                 	db	32
   105   000624  00                 	db	0
   106   000625                     STR_2:
   107   000625  4D                 	db	77	;'M'
   108   000626  31                 	db	49	;'1'
   109   000627  3A                 	db	58	;':'
   110   000628  41                 	db	65	;'A'
   111   000629  6E                 	db	110	;'n'
   112   00062A  74                 	db	116	;'t'
   113   00062B  69                 	db	105	;'i'
   114   00062C  63                 	db	99	;'c'
   115   00062D  6C                 	db	108	;'l'
   116   00062E  6F                 	db	111	;'o'
   117   00062F  63                 	db	99	;'c'
   118   000630  6B                 	db	107	;'k'
   119   000631  77                 	db	119	;'w'
   120   000632  69                 	db	105	;'i'
   121   000633  73                 	db	115	;'s'
   122   000634  65                 	db	101	;'e'
   123   000635  00                 	db	0
   124   000636                     STR_5:
   125   000636  4D                 	db	77	;'M'
   126   000637  32                 	db	50	;'2'
   127   000638  3A                 	db	58	;':'
   128   000639  41                 	db	65	;'A'
   129   00063A  6E                 	db	110	;'n'
   130   00063B  74                 	db	116	;'t'
   131   00063C  69                 	db	105	;'i'
   132   00063D  63                 	db	99	;'c'
   133   00063E  6C                 	db	108	;'l'
   134   00063F  6F                 	db	111	;'o'
   135   000640  63                 	db	99	;'c'
   136   000641  6B                 	db	107	;'k'
   137   000642  77                 	db	119	;'w'
   138   000643  69                 	db	105	;'i'
   139   000644  73                 	db	115	;'s'
   140   000645  65                 	db	101	;'e'
   141   000646  00                 	db	0
   142   000647                     STR_1:
   143   000647  4D                 	db	77	;'M'
   144   000648  31                 	db	49	;'1'
   145   000649  3A                 	db	58	;':'
   146   00064A  43                 	db	67	;'C'
   147   00064B  6C                 	db	108	;'l'
   148   00064C  6F                 	db	111	;'o'
   149   00064D  63                 	db	99	;'c'
   150   00064E  6B                 	db	107	;'k'
   151   00064F  77                 	db	119	;'w'
   152   000650  69                 	db	105	;'i'
   153   000651  73                 	db	115	;'s'
   154   000652  65                 	db	101	;'e'
   155   000653  00                 	db	0
   156   000654                     STR_4:
   157   000654  4D                 	db	77	;'M'
   158   000655  32                 	db	50	;'2'
   159   000656  3A                 	db	58	;':'
   160   000657  43                 	db	67	;'C'
   161   000658  6C                 	db	108	;'l'
   162   000659  6F                 	db	111	;'o'
   163   00065A  63                 	db	99	;'c'
   164   00065B  6B                 	db	107	;'k'
   165   00065C  77                 	db	119	;'w'
   166   00065D  69                 	db	105	;'i'
   167   00065E  73                 	db	115	;'s'
   168   00065F  65                 	db	101	;'e'
   169   000660  00                 	db	0
   170   000661  00                 	db	0	; dummy byte at the end
   171   000000                     
   172                           ; #config settings
   173                           
   174                           	psect	cinit
   175   00095E                     __pcinit:
   176                           	callstack 0
   177   00095E                     start_initialization:
   178                           	callstack 0
   179   00095E                     __initialization:
   180                           	callstack 0
   181   00095E                     end_of_initialization:
   182                           	callstack 0
   183   00095E                     __end_of__initialization:
   184                           	callstack 0
   185   00095E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   186   000960  6EF8               	movwf	tblptru,c
   187   000962  0E06               	movlw	high __Lsmallconst
   188   000964  6EF7               	movwf	tblptrh,c
   189   000966  0100               	movlb	0
   190   000968  EF31  F003         	goto	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMRAM
   193   000001                     __pcstackCOMRAM:
   194                           	callstack 0
   195   000001                     delay@j:
   196                           	callstack 0
   197                           
   198                           ; 4 bytes @ 0x0
   199   000001                     	ds	4
   200   000005                     ??_delay:
   201                           
   202                           ; 1 bytes @ 0x4
   203   000005                     	ds	1
   204   000006                     delay@i:
   205                           	callstack 0
   206                           
   207                           ; 4 bytes @ 0x5
   208   000006                     	ds	4
   209   00000A                     start_func@a:
   210                           	callstack 0
   211   00000A                     data@a:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x9
   215   00000A                     	ds	1
   216   00000B                     display@p:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0xA
   220   00000B                     	ds	1
   221   00000C                     main@count1:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0xB
   225   00000C                     	ds	2
   226   00000E                     main@count2:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0xD
   230   00000E                     	ds	2
   231                           
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 43 in file "LCD_2LINE.C"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;  count2          2   13[COMRAM] int 
   242 ;;  count1          2   11[COMRAM] int 
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : 0/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   252 ;;      Params:         0       0       0       0       0       0       0
   253 ;;      Locals:         4       0       0       0       0       0       0
   254 ;;      Temps:          0       0       0       0       0       0       0
   255 ;;      Totals:         4       0       0       0       0       0       0
   256 ;;Total ram usage:        4 bytes
   257 ;; Hardware stack levels required when called: 3
   258 ;; This function calls:
   259 ;;		_delay
   260 ;;		_display
   261 ;;		_start_func
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text0
   268   000662                     __ptext0:
   269                           	callstack 0
   270   000662                     _main:
   271                           	callstack 28
   272   000662                     
   273                           ;LCD_2LINE.C: 45:     TRISC=0x01;
   274   000662  0E01               	movlw	1
   275   000664  6E94               	movwf	148,c	;volatile
   276                           
   277                           ;LCD_2LINE.C: 46:     TRISD=0x00;
   278   000666  0E00               	movlw	0
   279   000668  6E95               	movwf	149,c	;volatile
   280                           
   281                           ;LCD_2LINE.C: 47:     TRISB=0x04;
   282   00066A  0E04               	movlw	4
   283   00066C  6E93               	movwf	147,c	;volatile
   284   00066E                     
   285                           ;LCD_2LINE.C: 48:     start_func(0x01);
   286   00066E  0E01               	movlw	1
   287   000670  EC61  F004         	call	_start_func
   288   000674                     
   289                           ;LCD_2LINE.C: 49:     start_func(0x0f);
   290   000674  0E0F               	movlw	15
   291   000676  EC61  F004         	call	_start_func
   292   00067A                     
   293                           ;LCD_2LINE.C: 50:     start_func(0x38);
   294   00067A  0E38               	movlw	56
   295   00067C  EC61  F004         	call	_start_func
   296   000680                     
   297                           ;LCD_2LINE.C: 51:     int count1=0,count2=0;
   298   000680  0E00               	movlw	0
   299   000682  6E0D               	movwf	(main@count1+1)^0,c
   300   000684  0E00               	movlw	0
   301   000686  6E0C               	movwf	main@count1^0,c
   302   000688  0E00               	movlw	0
   303   00068A  6E0F               	movwf	(main@count2+1)^0,c
   304   00068C  0E00               	movlw	0
   305   00068E  6E0E               	movwf	main@count2^0,c
   306   000690                     l918:
   307                           
   308                           ;LCD_2LINE.C: 53:     {;LCD_2LINE.C: 54:         if(RC0==1 && count1==0)
   309   000690  A082               	btfss	3970,0,c	;volatile
   310   000692  EF4D  F003         	goto	u231
   311   000696  EF4F  F003         	goto	u230
   312   00069A                     u231:
   313   00069A  EF7B  F003         	goto	l50
   314   00069E                     u230:
   315   00069E  500C               	movf	main@count1^0,w,c
   316   0006A0  100D               	iorwf	(main@count1+1)^0,w,c
   317   0006A2  A4D8               	btfss	status,2,c
   318   0006A4  EF56  F003         	goto	u241
   319   0006A8  EF58  F003         	goto	u240
   320   0006AC                     u241:
   321   0006AC  EF7B  F003         	goto	l50
   322   0006B0                     u240:
   323   0006B0                     
   324                           ;LCD_2LINE.C: 55:         {;LCD_2LINE.C: 56:             RC1=1; RC2=0;
   325   0006B0  8282               	bsf	3970,1,c	;volatile
   326   0006B2  9482               	bcf	3970,2,c	;volatile
   327   0006B4                     
   328                           ;LCD_2LINE.C: 57:             count1=1;
   329   0006B4  0E00               	movlw	0
   330   0006B6  6E0D               	movwf	(main@count1+1)^0,c
   331   0006B8  0E01               	movlw	1
   332   0006BA  6E0C               	movwf	main@count1^0,c
   333   0006BC                     
   334                           ;LCD_2LINE.C: 58:             start_func(0x80);
   335   0006BC  0E80               	movlw	128
   336   0006BE  EC61  F004         	call	_start_func
   337   0006C2                     
   338                           ;LCD_2LINE.C: 59:             start_func(0x18);
   339   0006C2  0E18               	movlw	24
   340   0006C4  EC61  F004         	call	_start_func
   341   0006C8                     
   342                           ;LCD_2LINE.C: 60:             delay(100);
   343   0006C8  0E64               	movlw	100
   344   0006CA  6E01               	movwf	delay@j^0,c
   345   0006CC  0E00               	movlw	0
   346   0006CE  6E02               	movwf	(delay@j+1)^0,c
   347   0006D0  0E00               	movlw	0
   348   0006D2  6E03               	movwf	(delay@j+2)^0,c
   349   0006D4  0E00               	movlw	0
   350   0006D6  6E04               	movwf	(delay@j+3)^0,c
   351   0006D8  EC3D  F004         	call	_delay	;wreg free
   352   0006DC                     
   353                           ;LCD_2LINE.C: 61:             display("M1:Clockwise");
   354   0006DC  0E47               	movlw	low STR_1
   355   0006DE  6E0B               	movwf	display@p^0,c
   356   0006E0  EC99  F004         	call	_display	;wreg free
   357   0006E4                     l51:
   358   0006E4  B082               	btfsc	3970,0,c	;volatile
   359   0006E6  EF77  F003         	goto	u251
   360   0006EA  EF79  F003         	goto	u250
   361   0006EE                     u251:
   362   0006EE  EF72  F003         	goto	l51
   363   0006F2                     u250:
   364   0006F2  EFC6  F003         	goto	l54
   365   0006F6                     l50:
   366   0006F6  A082               	btfss	3970,0,c	;volatile
   367   0006F8  EF80  F003         	goto	u261
   368   0006FC  EF82  F003         	goto	u260
   369   000700                     u261:
   370   000700  EFA1  F003         	goto	l55
   371   000704                     u260:
   372   000704  040C               	decf	main@count1^0,w,c
   373   000706  100D               	iorwf	(main@count1+1)^0,w,c
   374   000708  A4D8               	btfss	status,2,c
   375   00070A  EF89  F003         	goto	u271
   376   00070E  EF8B  F003         	goto	u270
   377   000712                     u271:
   378   000712  EFA1  F003         	goto	l55
   379   000716                     u270:
   380   000716                     
   381                           ;LCD_2LINE.C: 65:         {;LCD_2LINE.C: 66:             RC1=0;RC2=1;
   382   000716  9282               	bcf	3970,1,c	;volatile
   383   000718  8482               	bsf	3970,2,c	;volatile
   384   00071A                     
   385                           ;LCD_2LINE.C: 67:             count1=2;
   386   00071A  0E00               	movlw	0
   387   00071C  6E0D               	movwf	(main@count1+1)^0,c
   388   00071E  0E02               	movlw	2
   389   000720  6E0C               	movwf	main@count1^0,c
   390   000722                     
   391                           ;LCD_2LINE.C: 68:             start_func(0x80);
   392   000722  0E80               	movlw	128
   393   000724  EC61  F004         	call	_start_func
   394   000728                     
   395                           ;LCD_2LINE.C: 69:             display("M1:Anticlockwise");
   396   000728  0E25               	movlw	low STR_2
   397   00072A  6E0B               	movwf	display@p^0,c
   398   00072C  EC99  F004         	call	_display	;wreg free
   399   000730                     l56:
   400   000730  B082               	btfsc	3970,0,c	;volatile
   401   000732  EF9D  F003         	goto	u281
   402   000736  EF9F  F003         	goto	u280
   403   00073A                     u281:
   404   00073A  EF98  F003         	goto	l56
   405   00073E                     u280:
   406   00073E  EFC6  F003         	goto	l54
   407   000742                     l55:
   408   000742  A082               	btfss	3970,0,c	;volatile
   409   000744  EFA6  F003         	goto	u291
   410   000748  EFA8  F003         	goto	u290
   411   00074C                     u291:
   412   00074C  EFC6  F003         	goto	l54
   413   000750                     u290:
   414   000750  0E02               	movlw	2
   415   000752  180C               	xorwf	main@count1^0,w,c
   416   000754  100D               	iorwf	(main@count1+1)^0,w,c
   417   000756  A4D8               	btfss	status,2,c
   418   000758  EFB0  F003         	goto	u301
   419   00075C  EFB2  F003         	goto	u300
   420   000760                     u301:
   421   000760  EFC6  F003         	goto	l54
   422   000764                     u300:
   423   000764                     
   424                           ;LCD_2LINE.C: 73:         {;LCD_2LINE.C: 74:             RC1=0;RC2=0;
   425   000764  9282               	bcf	3970,1,c	;volatile
   426   000766  9482               	bcf	3970,2,c	;volatile
   427   000768                     
   428                           ;LCD_2LINE.C: 75:             count1=0;
   429   000768  0E00               	movlw	0
   430   00076A  6E0D               	movwf	(main@count1+1)^0,c
   431   00076C  0E00               	movlw	0
   432   00076E  6E0C               	movwf	main@count1^0,c
   433   000770                     
   434                           ;LCD_2LINE.C: 76:             start_func(0x80);
   435   000770  0E80               	movlw	128
   436   000772  EC61  F004         	call	_start_func
   437   000776                     
   438                           ;LCD_2LINE.C: 77:             display("M1:Stopped       ");
   439   000776  0E01               	movlw	low STR_3
   440   000778  6E0B               	movwf	display@p^0,c
   441   00077A  EC99  F004         	call	_display	;wreg free
   442   00077E                     l61:
   443   00077E  B082               	btfsc	3970,0,c	;volatile
   444   000780  EFC4  F003         	goto	u311
   445   000784  EFC6  F003         	goto	u310
   446   000788                     u311:
   447   000788  EFBF  F003         	goto	l61
   448   00078C                     u310:
   449   00078C                     l54:
   450                           
   451                           ;LCD_2LINE.C: 83:         if(RB2==1 && count2==0)
   452   00078C  A481               	btfss	3969,2,c	;volatile
   453   00078E  EFCB  F003         	goto	u321
   454   000792  EFCD  F003         	goto	u320
   455   000796                     u321:
   456   000796  EFEC  F003         	goto	l64
   457   00079A                     u320:
   458   00079A  500E               	movf	main@count2^0,w,c
   459   00079C  100F               	iorwf	(main@count2+1)^0,w,c
   460   00079E  A4D8               	btfss	status,2,c
   461   0007A0  EFD4  F003         	goto	u331
   462   0007A4  EFD6  F003         	goto	u330
   463   0007A8                     u331:
   464   0007A8  EFEC  F003         	goto	l64
   465   0007AC                     u330:
   466   0007AC                     
   467                           ;LCD_2LINE.C: 84:         {;LCD_2LINE.C: 85:             RC6=1; RC7=0;
   468   0007AC  8C82               	bsf	3970,6,c	;volatile
   469   0007AE  9E82               	bcf	3970,7,c	;volatile
   470   0007B0                     
   471                           ;LCD_2LINE.C: 86:             count2=1;
   472   0007B0  0E00               	movlw	0
   473   0007B2  6E0F               	movwf	(main@count2+1)^0,c
   474   0007B4  0E01               	movlw	1
   475   0007B6  6E0E               	movwf	main@count2^0,c
   476   0007B8                     
   477                           ;LCD_2LINE.C: 87:             start_func(0xC0);
   478   0007B8  0EC0               	movlw	192
   479   0007BA  EC61  F004         	call	_start_func
   480   0007BE                     
   481                           ;LCD_2LINE.C: 88:             display("M2:Clockwise");
   482   0007BE  0E54               	movlw	low STR_4
   483   0007C0  6E0B               	movwf	display@p^0,c
   484   0007C2  EC99  F004         	call	_display	;wreg free
   485   0007C6                     l65:
   486   0007C6  B481               	btfsc	3969,2,c	;volatile
   487   0007C8  EFE8  F003         	goto	u341
   488   0007CC  EFEA  F003         	goto	u340
   489   0007D0                     u341:
   490   0007D0  EFE3  F003         	goto	l65
   491   0007D4                     u340:
   492   0007D4  EF48  F003         	goto	l918
   493   0007D8                     l64:
   494   0007D8  A481               	btfss	3969,2,c	;volatile
   495   0007DA  EFF1  F003         	goto	u351
   496   0007DE  EFF3  F003         	goto	u350
   497   0007E2                     u351:
   498   0007E2  EF12  F004         	goto	l69
   499   0007E6                     u350:
   500   0007E6  040E               	decf	main@count2^0,w,c
   501   0007E8  100F               	iorwf	(main@count2+1)^0,w,c
   502   0007EA  A4D8               	btfss	status,2,c
   503   0007EC  EFFA  F003         	goto	u361
   504   0007F0  EFFC  F003         	goto	u360
   505   0007F4                     u361:
   506   0007F4  EF12  F004         	goto	l69
   507   0007F8                     u360:
   508   0007F8                     
   509                           ;LCD_2LINE.C: 92:         {;LCD_2LINE.C: 93:             RC6=0;RC7=1;
   510   0007F8  9C82               	bcf	3970,6,c	;volatile
   511   0007FA  8E82               	bsf	3970,7,c	;volatile
   512   0007FC                     
   513                           ;LCD_2LINE.C: 94:             count2=2;
   514   0007FC  0E00               	movlw	0
   515   0007FE  6E0F               	movwf	(main@count2+1)^0,c
   516   000800  0E02               	movlw	2
   517   000802  6E0E               	movwf	main@count2^0,c
   518   000804                     
   519                           ;LCD_2LINE.C: 95:             start_func(0xC0);
   520   000804  0EC0               	movlw	192
   521   000806  EC61  F004         	call	_start_func
   522   00080A                     
   523                           ;LCD_2LINE.C: 96:             display("M2:Anticlockwise");
   524   00080A  0E36               	movlw	low STR_5
   525   00080C  6E0B               	movwf	display@p^0,c
   526   00080E  EC99  F004         	call	_display	;wreg free
   527   000812                     l70:
   528   000812  B481               	btfsc	3969,2,c	;volatile
   529   000814  EF0E  F004         	goto	u371
   530   000818  EF10  F004         	goto	u370
   531   00081C                     u371:
   532   00081C  EF09  F004         	goto	l70
   533   000820                     u370:
   534   000820  EF48  F003         	goto	l918
   535   000824                     l69:
   536   000824  A481               	btfss	3969,2,c	;volatile
   537   000826  EF17  F004         	goto	u381
   538   00082A  EF19  F004         	goto	u380
   539   00082E                     u381:
   540   00082E  EF39  F004         	goto	l68
   541   000832                     u380:
   542   000832  0E02               	movlw	2
   543   000834  180E               	xorwf	main@count2^0,w,c
   544   000836  100F               	iorwf	(main@count2+1)^0,w,c
   545   000838  A4D8               	btfss	status,2,c
   546   00083A  EF21  F004         	goto	u391
   547   00083E  EF23  F004         	goto	u390
   548   000842                     u391:
   549   000842  EF39  F004         	goto	l68
   550   000846                     u390:
   551   000846                     
   552                           ;LCD_2LINE.C: 100:         {;LCD_2LINE.C: 101:             RC6=0;RC7=0;
   553   000846  9C82               	bcf	3970,6,c	;volatile
   554   000848  9E82               	bcf	3970,7,c	;volatile
   555   00084A                     
   556                           ;LCD_2LINE.C: 102:             count2=0;
   557   00084A  0E00               	movlw	0
   558   00084C  6E0F               	movwf	(main@count2+1)^0,c
   559   00084E  0E00               	movlw	0
   560   000850  6E0E               	movwf	main@count2^0,c
   561   000852                     
   562                           ;LCD_2LINE.C: 103:             start_func(0xC0);
   563   000852  0EC0               	movlw	192
   564   000854  EC61  F004         	call	_start_func
   565   000858                     
   566                           ;LCD_2LINE.C: 104:             display("M2:Stopped       ");
   567   000858  0E13               	movlw	low STR_6
   568   00085A  6E0B               	movwf	display@p^0,c
   569   00085C  EC99  F004         	call	_display	;wreg free
   570   000860                     l75:
   571   000860  B481               	btfsc	3969,2,c	;volatile
   572   000862  EF35  F004         	goto	u401
   573   000866  EF37  F004         	goto	u400
   574   00086A                     u401:
   575   00086A  EF30  F004         	goto	l75
   576   00086E                     u400:
   577   00086E  EF48  F003         	goto	l918
   578   000872                     l68:
   579   000872  EF48  F003         	goto	l918
   580   000876  EF00  F000         	goto	start
   581   00087A                     __end_of_main:
   582                           	callstack 0
   583                           
   584 ;; *************** function _start_func *****************
   585 ;; Defined at:
   586 ;;		line 14 in file "LCD_2LINE.C"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  a               1    wreg     unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  a               1    9[COMRAM] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   600 ;;      Params:         0       0       0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0
   603 ;;      Totals:         1       0       0       0       0       0       0
   604 ;;Total ram usage:        1 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 1
   607 ;; This function calls:
   608 ;;		_delay
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text1
   615   0008C2                     __ptext1:
   616                           	callstack 0
   617   0008C2                     _start_func:
   618                           	callstack 29
   619                           
   620                           ;incstack = 0
   621                           ;start_func@a stored from wreg
   622   0008C2  6E0A               	movwf	start_func@a^0,c
   623   0008C4                     
   624                           ;LCD_2LINE.C: 14: void start_func(unsigned char a);LCD_2LINE.C: 15: {;LCD_2LINE.C: 16:  
      +                             RC3=0;
   625   0008C4  9682               	bcf	3970,3,c	;volatile
   626                           
   627                           ;LCD_2LINE.C: 17:     RC4=0;
   628   0008C6  9882               	bcf	3970,4,c	;volatile
   629   0008C8                     
   630                           ;LCD_2LINE.C: 18:     PORTD=a;
   631   0008C8  C00A  FF83         	movff	start_func@a,3971	;volatile
   632   0008CC                     
   633                           ;LCD_2LINE.C: 19:     RC5=1;
   634   0008CC  8A82               	bsf	3970,5,c	;volatile
   635   0008CE                     
   636                           ;LCD_2LINE.C: 20:     delay(100);
   637   0008CE  0E64               	movlw	100
   638   0008D0  6E01               	movwf	delay@j^0,c
   639   0008D2  0E00               	movlw	0
   640   0008D4  6E02               	movwf	(delay@j+1)^0,c
   641   0008D6  0E00               	movlw	0
   642   0008D8  6E03               	movwf	(delay@j+2)^0,c
   643   0008DA  0E00               	movlw	0
   644   0008DC  6E04               	movwf	(delay@j+3)^0,c
   645   0008DE  EC3D  F004         	call	_delay	;wreg free
   646   0008E2                     
   647                           ;LCD_2LINE.C: 21:     RC5=0;
   648   0008E2  9A82               	bcf	3970,5,c	;volatile
   649   0008E4                     
   650                           ;LCD_2LINE.C: 22:     delay(5000);
   651   0008E4  0E88               	movlw	136
   652   0008E6  6E01               	movwf	delay@j^0,c
   653   0008E8  0E13               	movlw	19
   654   0008EA  6E02               	movwf	(delay@j+1)^0,c
   655   0008EC  0E00               	movlw	0
   656   0008EE  6E03               	movwf	(delay@j+2)^0,c
   657   0008F0  0E00               	movlw	0
   658   0008F2  6E04               	movwf	(delay@j+3)^0,c
   659   0008F4  EC3D  F004         	call	_delay	;wreg free
   660   0008F8  0012               	return		;funcret
   661   0008FA                     __end_of_start_func:
   662                           	callstack 0
   663                           
   664 ;; *************** function _display *****************
   665 ;; Defined at:
   666 ;;		line 35 in file "LCD_2LINE.C"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  p               1   10[COMRAM] PTR const unsigned char 
   669 ;;		 -> STR_6(18), STR_5(17), STR_4(13), STR_3(18), 
   670 ;;		 -> STR_2(17), STR_1(13), 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   682 ;;      Params:         1       0       0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0
   685 ;;      Totals:         1       0       0       0       0       0       0
   686 ;;Total ram usage:        1 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 2
   689 ;; This function calls:
   690 ;;		_data
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text2
   697   000932                     __ptext2:
   698                           	callstack 0
   699   000932                     _display:
   700                           	callstack 28
   701   000932                     
   702                           ;LCD_2LINE.C: 35: void display(const char *p);LCD_2LINE.C: 36: {;LCD_2LINE.C: 37:     wh
      +                          ile(*p)
   703   000932  EFA2  F004         	goto	l904
   704   000936                     l900:
   705                           
   706                           ;LCD_2LINE.C: 38:     {;LCD_2LINE.C: 39:         data(*p);
   707   000936  C00B  FFF6         	movff	display@p,tblptrl
   708   00093A                     	if	0	;There is only one active tblptr byte
   709   00093A                     	endif
   710   00093A                     	if	0	;tblptru may be non-zero
   711   00093A                     	endif
   712   00093A                     	if	0	;tblptru may be non-zero
   713   00093A                     	endif
   714   00093A  0008               	tblrd		*
   715   00093C  50F5               	movf	tablat,w,c
   716   00093E  EC7D  F004         	call	_data
   717   000942                     
   718                           ;LCD_2LINE.C: 40:         p++;
   719   000942  2A0B               	incf	display@p^0,f,c
   720   000944                     l904:
   721                           
   722                           ;LCD_2LINE.C: 37:     while(*p)
   723   000944  C00B  FFF6         	movff	display@p,tblptrl
   724   000948                     	if	0	;There is only one active tblptr byte
   725   000948                     	endif
   726   000948                     	if	0	;tblptru may be non-zero
   727   000948                     	endif
   728   000948                     	if	0	;tblptru may be non-zero
   729   000948                     	endif
   730   000948  0008               	tblrd		*
   731   00094A  50F5               	movf	tablat,w,c
   732   00094C  0900               	iorlw	0
   733   00094E  A4D8               	btfss	status,2,c
   734   000950  EFAC  F004         	goto	u221
   735   000954  EFAE  F004         	goto	u220
   736   000958                     u221:
   737   000958  EF9B  F004         	goto	l900
   738   00095C                     u220:
   739   00095C  0012               	return		;funcret
   740   00095E                     __end_of_display:
   741                           	callstack 0
   742                           
   743 ;; *************** function _data *****************
   744 ;; Defined at:
   745 ;;		line 24 in file "LCD_2LINE.C"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  a               1    wreg     unsigned char 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  a               1    9[COMRAM] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   759 ;;      Params:         0       0       0       0       0       0       0
   760 ;;      Locals:         1       0       0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0
   762 ;;      Totals:         1       0       0       0       0       0       0
   763 ;;Total ram usage:        1 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; Hardware stack levels required when called: 1
   766 ;; This function calls:
   767 ;;		_delay
   768 ;; This function is called by:
   769 ;;		_display
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text3
   774   0008FA                     __ptext3:
   775                           	callstack 0
   776   0008FA                     _data:
   777                           	callstack 28
   778                           
   779                           ;incstack = 0
   780                           ;data@a stored from wreg
   781   0008FA  6E0A               	movwf	data@a^0,c
   782   0008FC                     
   783                           ;LCD_2LINE.C: 24: void data(unsigned char a);LCD_2LINE.C: 25: {;LCD_2LINE.C: 26:     RC3
      +                          =1;
   784   0008FC  8682               	bsf	3970,3,c	;volatile
   785                           
   786                           ;LCD_2LINE.C: 27:     RC4=0;
   787   0008FE  9882               	bcf	3970,4,c	;volatile
   788   000900                     
   789                           ;LCD_2LINE.C: 28:     PORTD=a;
   790   000900  C00A  FF83         	movff	data@a,3971	;volatile
   791   000904                     
   792                           ;LCD_2LINE.C: 29:     RC5=1;
   793   000904  8A82               	bsf	3970,5,c	;volatile
   794   000906                     
   795                           ;LCD_2LINE.C: 30:     delay(100);
   796   000906  0E64               	movlw	100
   797   000908  6E01               	movwf	delay@j^0,c
   798   00090A  0E00               	movlw	0
   799   00090C  6E02               	movwf	(delay@j+1)^0,c
   800   00090E  0E00               	movlw	0
   801   000910  6E03               	movwf	(delay@j+2)^0,c
   802   000912  0E00               	movlw	0
   803   000914  6E04               	movwf	(delay@j+3)^0,c
   804   000916  EC3D  F004         	call	_delay	;wreg free
   805   00091A                     
   806                           ;LCD_2LINE.C: 32:     RC5=0;
   807   00091A  9A82               	bcf	3970,5,c	;volatile
   808   00091C                     
   809                           ;LCD_2LINE.C: 33:     delay(5000);
   810   00091C  0E88               	movlw	136
   811   00091E  6E01               	movwf	delay@j^0,c
   812   000920  0E13               	movlw	19
   813   000922  6E02               	movwf	(delay@j+1)^0,c
   814   000924  0E00               	movlw	0
   815   000926  6E03               	movwf	(delay@j+2)^0,c
   816   000928  0E00               	movlw	0
   817   00092A  6E04               	movwf	(delay@j+3)^0,c
   818   00092C  EC3D  F004         	call	_delay	;wreg free
   819   000930  0012               	return		;funcret
   820   000932                     __end_of_data:
   821                           	callstack 0
   822                           
   823 ;; *************** function _delay *****************
   824 ;; Defined at:
   825 ;;		line 10 in file "LCD_2LINE.C"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  j               4    0[COMRAM] long 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  i               4    5[COMRAM] long 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   839 ;;      Params:         4       0       0       0       0       0       0
   840 ;;      Locals:         4       0       0       0       0       0       0
   841 ;;      Temps:          1       0       0       0       0       0       0
   842 ;;      Totals:         9       0       0       0       0       0       0
   843 ;;Total ram usage:        9 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_start_func
   849 ;;		_data
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text4
   855   00087A                     __ptext4:
   856                           	callstack 0
   857   00087A                     _delay:
   858                           	callstack 29
   859   00087A                     
   860                           ;LCD_2LINE.C: 10: void delay(long j);LCD_2LINE.C: 11: {;LCD_2LINE.C: 12:     for(long i=
      +                          0;i<=j;i++);
   861   00087A  0E00               	movlw	0
   862   00087C  6E06               	movwf	delay@i^0,c
   863   00087E  0E00               	movlw	0
   864   000880  6E07               	movwf	(delay@i+1)^0,c
   865   000882  0E00               	movlw	0
   866   000884  6E08               	movwf	(delay@i+2)^0,c
   867   000886  0E00               	movlw	0
   868   000888  6E09               	movwf	(delay@i+3)^0,c
   869   00088A  EF4D  F004         	goto	l29
   870   00088E                     l872:
   871   00088E  0E01               	movlw	1
   872   000890  2606               	addwf	delay@i^0,f,c
   873   000892  0E00               	movlw	0
   874   000894  2207               	addwfc	(delay@i+1)^0,f,c
   875   000896  2208               	addwfc	(delay@i+2)^0,f,c
   876   000898  2209               	addwfc	(delay@i+3)^0,f,c
   877   00089A                     l29:
   878   00089A  5006               	movf	delay@i^0,w,c
   879   00089C  5C01               	subwf	delay@j^0,w,c
   880   00089E  5007               	movf	(delay@i+1)^0,w,c
   881   0008A0  5802               	subwfb	(delay@j+1)^0,w,c
   882   0008A2  5008               	movf	(delay@i+2)^0,w,c
   883   0008A4  5803               	subwfb	(delay@j+2)^0,w,c
   884   0008A6  5004               	movf	(delay@j+3)^0,w,c
   885   0008A8  0A80               	xorlw	128
   886   0008AA  6E05               	movwf	??_delay^0,c
   887   0008AC  5009               	movf	(delay@i+3)^0,w,c
   888   0008AE  0A80               	xorlw	128
   889   0008B0  5805               	subwfb	??_delay^0,w,c
   890   0008B2  B0D8               	btfsc	status,0,c
   891   0008B4  EF5E  F004         	goto	u211
   892   0008B8  EF60  F004         	goto	u210
   893   0008BC                     u211:
   894   0008BC  EF47  F004         	goto	l872
   895   0008C0                     u210:
   896   0008C0  0012               	return		;funcret
   897   0008C2                     __end_of_delay:
   898                           	callstack 0
   899                           
   900                           	psect	rparam
   901   000000                     tosu	equ	0xFFF
   902                           tosh	equ	0xFFE
   903                           tosl	equ	0xFFD
   904                           stkptr	equ	0xFFC
   905                           pclatu	equ	0xFFB
   906                           pclath	equ	0xFFA
   907                           pcl	equ	0xFF9
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           prodh	equ	0xFF4
   913                           prodl	equ	0xFF3
   914                           indf0	equ	0xFEF
   915                           postinc0	equ	0xFEE
   916                           postdec0	equ	0xFED
   917                           preinc0	equ	0xFEC
   918                           plusw0	equ	0xFEB
   919                           fsr0h	equ	0xFEA
   920                           fsr0l	equ	0xFE9
   921                           wreg	equ	0xFE8
   922                           indf1	equ	0xFE7
   923                           postinc1	equ	0xFE6
   924                           postdec1	equ	0xFE5
   925                           preinc1	equ	0xFE4
   926                           plusw1	equ	0xFE3
   927                           fsr1h	equ	0xFE2
   928                           fsr1l	equ	0xFE1
   929                           bsr	equ	0xFE0
   930                           indf2	equ	0xFDF
   931                           postinc2	equ	0xFDE
   932                           postdec2	equ	0xFDD
   933                           preinc2	equ	0xFDC
   934                           plusw2	equ	0xFDB
   935                           fsr2h	equ	0xFDA
   936                           fsr2l	equ	0xFD9
   937                           status	equ	0xFD8

Data Sizes:
    Strings     96
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[13]), STR_2(CODE[17]), STR_3(CODE[18]), STR_4(CODE[13]), 
		 -> STR_5(CODE[17]), STR_6(CODE[18]), 


Critical Paths under _main in COMRAM

    _main->_display
    _start_func->_delay
    _display->_data
    _data->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1963
                                             11 COMRAM     4     4      0
                              _delay
                            _display
                         _start_func
 ---------------------------------------------------------------------------------
 (1) _start_func                                           1     1      0     448
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     949
                                             10 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 1     1      0     448
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                9     5      4     426
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _display
     _data
       _delay
   _start_func
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      F       F       1       15.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhh         6A      0       0      16        0.0%
BITBIGSFRhl          F      0       0      17        0.0%
BITBIGSFRl         281      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 06 09:38:15 2024

                     l32 08C0                       l50 06F6                       l35 08F8  
                     l51 06E4                       l44 095C                       l29 089A  
                     l61 077E                       l38 0930                       l70 0812  
                     l54 078C                       l55 0742                       l64 07D8  
                     l56 0730                       l65 07C6                       l75 0860  
                     l68 0872                       l69 0824                      l900 0936  
                    l902 0942                      l910 0674                      l904 0944  
                    l920 069E                      l912 067A                      l930 06C8  
                    l922 06B0                      l914 0680                      l906 0662  
                    l940 0722                      l932 06DC                      l924 06B4  
                    l916 0688                      l908 066E                      l870 087A  
                    l950 0770                      l942 0728                      l934 0704  
                    l926 06BC                      l918 0690                      l872 088E  
                    l880 0906                      l960 07B8                      l952 0776  
                    l944 0750                      l936 0716                      l928 06C2  
                    l882 091A                      l874 08FC                      l890 08CC  
                    l970 0804                      l962 07BE                      l954 079A  
                    l946 0764                      l938 071A                      l884 091C  
                    l876 0900                      l892 08CE                      l980 0852  
                    l972 080A                      l964 07E6                      l956 07AC  
                    l948 0768                      l878 0904                      l894 08E2  
                    l886 08C4                      l982 0858                      l974 0832  
                    l966 07F8                      l958 07B0                      l896 08E4  
                    l888 08C8                      l976 0846                      l968 07FC  
                    l898 0932                      l978 084A                      _RB2 7C0A  
                    _RC0 7C10                      _RC1 7C11                      _RC2 7C12  
                    _RC3 7C13                      _RC4 7C14                      _RC5 7C15  
                    _RC6 7C16                      _RC7 7C17                      u210 08C0  
                    u211 08BC                      u220 095C                      u300 0764  
                    u221 0958                      u301 0760                      u310 078C  
                    u230 069E                      u311 0788                      u231 069A  
                    u400 086E                      u320 079A                      u240 06B0  
                    u401 086A                      u321 0796                      u241 06AC  
                    u330 07AC                      u250 06F2                      u331 07A8  
                    u251 06EE                      u340 07D4                      u260 0704  
                    u341 07D0                      u261 0700                      u350 07E6  
                    u270 0716                      u351 07E2                      u271 0712  
                    u360 07F8                      u280 073E                      u361 07F4  
                    u281 073A                      u370 0820                      u290 0750  
                    u371 081C                      u291 074C                      u380 0832  
                    u381 082E                      u390 0846                      u391 0842  
                   STR_1 0647                     STR_2 0625                     STR_3 0601  
                   STR_4 0654                     STR_5 0636                     STR_6 0613  
                   _data 08FA                     _main 0662                     start 0000  
           ___param_bank 0000                    ?_data 0001                    ?_main 0001  
                  _PORTD 0F83                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95          __end_of_display 095E                    _delay 087A  
                  data@a 000A                    tablat 0FF5                    status 0FD8  
        __initialization 095E             __end_of_data 0932             __end_of_main 087A  
                 ??_data 000A                   ??_main 000C            __activetblptr 0001  
                 ?_delay 0001                   delay@i 0006                   delay@j 0001  
                 isa$std 0001                ??_display 000C             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 095E            ___rparam_used 0001  
         __pcstackCOMRAM 0001            __end_of_delay 08C2                  ??_delay 0005  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 095E                  __ramtop 0600                  __ptext0 0662  
                __ptext1 08C2                  __ptext2 0932                  __ptext3 08FA  
                __ptext4 087A                  _display 0932     end_of_initialization 095E  
             _start_func 08C2               main@count1 000C               main@count2 000E  
    start_initialization 095E              start_func@a 000A              ?_start_func 0001  
               ?_display 000B              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 isa$xinst 0000  
               display@p 000B             ??_start_func 000A       __end_of_start_func 08FA  
