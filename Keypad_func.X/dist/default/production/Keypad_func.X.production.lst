

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 13 09:10:21 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20   000000                     
    21                           ; Generated 17/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4580 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   000BFC                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _inp
    61   000BFC  30                 	db	48
    62   000BFD  30                 	db	48
    63   000BFE  30                 	db	48
    64   000BFF  30                 	db	48
    65   000C00  00                 	db	0
    66                           
    67                           ;initializer for _pass
    68   000C01  31                 	db	49
    69   000C02  32                 	db	50
    70   000C03  33                 	db	51
    71   000C04  34                 	db	52
    72   000C05  00                 	db	0
    73   000000                     _PORTC	set	3970
    74   000000                     _RB7	set	31759
    75   000000                     _RB6	set	31758
    76   000000                     _RB5	set	31757
    77   000000                     _RB4	set	31756
    78   000000                     _RC2	set	31762
    79   000000                     _RC1	set	31761
    80   000000                     _PORTB	set	3969
    81   000000                     _RC0	set	31760
    82   000000                     _TRISB	set	3987
    83   000000                     _ADCON1	set	4033
    84   000000                     _PORTD	set	3971
    85   000000                     _TRISD	set	3989
    86   000000                     _TRISC	set	3988
    87                           
    88                           	psect	smallconst
    89   000600                     __psmallconst:
    90                           	callstack 0
    91   000600  00                 	db	0
    92   000601                     STR_2:
    93   000601  50                 	db	80	;'P'
    94   000602  61                 	db	97	;'a'
    95   000603  73                 	db	115	;'s'
    96   000604  73                 	db	115	;'s'
    97   000605  77                 	db	119	;'w'
    98   000606  6F                 	db	111	;'o'
    99   000607  72                 	db	114	;'r'
   100   000608  64                 	db	100	;'d'
   101   000609  20                 	db	32
   102   00060A  43                 	db	67	;'C'
   103   00060B  6F                 	db	111	;'o'
   104   00060C  72                 	db	114	;'r'
   105   00060D  72                 	db	114	;'r'
   106   00060E  65                 	db	101	;'e'
   107   00060F  63                 	db	99	;'c'
   108   000610  74                 	db	116	;'t'
   109   000611  00                 	db	0
   110   000612                     STR_1:
   111   000612  45                 	db	69	;'E'
   112   000613  4E                 	db	78	;'N'
   113   000614  54                 	db	84	;'T'
   114   000615  45                 	db	69	;'E'
   115   000616  52                 	db	82	;'R'
   116   000617  20                 	db	32
   117   000618  50                 	db	80	;'P'
   118   000619  41                 	db	65	;'A'
   119   00061A  53                 	db	83	;'S'
   120   00061B  53                 	db	83	;'S'
   121   00061C  57                 	db	87	;'W'
   122   00061D  4F                 	db	79	;'O'
   123   00061E  52                 	db	82	;'R'
   124   00061F  44                 	db	68	;'D'
   125   000620  00                 	db	0
   126   000621                     STR_3:
   127   000621  50                 	db	80	;'P'
   128   000622  61                 	db	97	;'a'
   129   000623  73                 	db	115	;'s'
   130   000624  73                 	db	115	;'s'
   131   000625  77                 	db	119	;'w'
   132   000626  6F                 	db	111	;'o'
   133   000627  72                 	db	114	;'r'
   134   000628  64                 	db	100	;'d'
   135   000629  20                 	db	32
   136   00062A  57                 	db	87	;'W'
   137   00062B  72                 	db	114	;'r'
   138   00062C  6F                 	db	111	;'o'
   139   00062D  6E                 	db	110	;'n'
   140   00062E  67                 	db	103	;'g'
   141   00062F  00                 	db	0
   142   000630  00                 	db	0	; dummy byte at the end
   143   000000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147   000BA0                     __pcinit:
   148                           	callstack 0
   149   000BA0                     start_initialization:
   150                           	callstack 0
   151   000BA0                     __initialization:
   152                           	callstack 0
   153                           
   154                           ; Initialize objects allocated to COMRAM (10 bytes)
   155                           ; load TBLPTR registers with __pidataCOMRAM
   156   000BA0  0EFC               	movlw	low __pidataCOMRAM
   157   000BA2  6EF6               	movwf	tblptrl,c
   158   000BA4  0E0B               	movlw	high __pidataCOMRAM
   159   000BA6  6EF7               	movwf	tblptrh,c
   160   000BA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   161   000BAA  6EF8               	movwf	tblptru,c
   162   000BAC  EE00  F020         	lfsr	0,__pdataCOMRAM
   163   000BB0  EE10 F00A          	lfsr	1,10
   164   000BB4                     copy_data0:
   165   000BB4  0009               	tblrd		*+
   166   000BB6  CFF5 FFEE          	movff	tablat,postinc0
   167   000BBA  50E5               	movf	postdec1,w,c
   168   000BBC  50E1               	movf	fsr1l,w,c
   169   000BBE  E1FA               	bnz	copy_data0
   170                           
   171                           ; Clear objects allocated to COMRAM (1 bytes)
   172   000BC0  6A2A               	clrf	__pbssCOMRAM& (0+255),c
   173   000BC2                     end_of_initialization:
   174                           	callstack 0
   175   000BC2                     __end_of__initialization:
   176                           	callstack 0
   177   000BC2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   178   000BC4  6EF8               	movwf	tblptru,c
   179   000BC6  0E06               	movlw	high __Lsmallconst
   180   000BC8  6EF7               	movwf	tblptrh,c
   181   000BCA  0100               	movlb	0
   182   000BCC  EF19  F003         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185   00002A                     __pbssCOMRAM:
   186                           	callstack 0
   187   00002A                     _index:
   188                           	callstack 0
   189   00002A                     	ds	1
   190                           
   191                           	psect	dataCOMRAM
   192   000020                     __pdataCOMRAM:
   193                           	callstack 0
   194   000020                     _inp:
   195                           	callstack 0
   196   000020                     	ds	5
   197   000025                     _pass:
   198                           	callstack 0
   199   000025                     	ds	5
   200                           
   201                           	psect	cstackCOMRAM
   202   000001                     __pcstackCOMRAM:
   203                           	callstack 0
   204   000001                     ?_strcmp:
   205                           	callstack 0
   206   000001                     ?_keypad:
   207                           	callstack 0
   208   000001                     strcmp@l:
   209                           	callstack 0
   210   000001                     delay@j:
   211                           	callstack 0
   212                           
   213                           ; 4 bytes @ 0x0
   214   000001                     	ds	1
   215   000002                     strcmp@r:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x1
   219   000002                     	ds	1
   220   000003                     ??_strcmp:
   221   000003                     
   222                           ; 1 bytes @ 0x2
   223   000003                     	ds	2
   224   000005                     ??_delay:
   225                           
   226                           ; 1 bytes @ 0x4
   227   000005                     	ds	1
   228   000006                     delay@i:
   229                           	callstack 0
   230                           
   231                           ; 4 bytes @ 0x5
   232   000006                     	ds	4
   233   00000A                     start_func@a:
   234                           	callstack 0
   235   00000A                     data@a:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x9
   239   00000A                     	ds	1
   240   00000B                     display@p:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0xA
   244   00000B                     	ds	1
   245   00000C                     main@i:
   246                           	callstack 0
   247                           
   248                           ; 4 bytes @ 0xB
   249   00000C                     	ds	4
   250   000010                     main@i_71:
   251                           	callstack 0
   252                           
   253                           ; 4 bytes @ 0xF
   254   000010                     	ds	4
   255   000014                     main@i_72:
   256                           	callstack 0
   257                           
   258                           ; 4 bytes @ 0x13
   259   000014                     	ds	4
   260   000018                     main@i_75:
   261                           	callstack 0
   262                           
   263                           ; 4 bytes @ 0x17
   264   000018                     	ds	4
   265   00001C                     main@j:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x1B
   269   00001C                     	ds	2
   270   00001E                     main@j_74:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x1D
   274   00001E                     	ds	2
   275                           
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 120 in file "keypad_func.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  i               4   23[COMRAM] long 
   286 ;;  j               2   29[COMRAM] int 
   287 ;;  i               4   19[COMRAM] long 
   288 ;;  i               4   15[COMRAM] long 
   289 ;;  j               2   27[COMRAM] int 
   290 ;;  i               4   11[COMRAM] long 
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   300 ;;      Params:         0       0       0       0       0       0       0
   301 ;;      Locals:        20       0       0       0       0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0
   303 ;;      Totals:        20       0       0       0       0       0       0
   304 ;;Total ram usage:       20 bytes
   305 ;; Hardware stack levels required when called: 3
   306 ;; This function calls:
   307 ;;		_data
   308 ;;		_delay
   309 ;;		_display
   310 ;;		_keypad
   311 ;;		_start_func
   312 ;;		_strcmp
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text0
   319   000632                     __ptext0:
   320                           	callstack 0
   321   000632                     _main:
   322                           	callstack 28
   323   000632                     
   324                           ;keypad_func.c: 122:     ADCON1=0X0F;
   325   000632  0E0F               	movlw	15
   326   000634  6EC1               	movwf	193,c	;volatile
   327                           
   328                           ;keypad_func.c: 123:     TRISB=0XF0;
   329   000636  0EF0               	movlw	240
   330   000638  6E93               	movwf	147,c	;volatile
   331                           
   332                           ;keypad_func.c: 124:     TRISC=0X00;
   333   00063A  0E00               	movlw	0
   334   00063C  6E94               	movwf	148,c	;volatile
   335                           
   336                           ;keypad_func.c: 125:     TRISD=0x00;
   337   00063E  0E00               	movlw	0
   338   000640  6E95               	movwf	149,c	;volatile
   339   000642                     
   340                           ;keypad_func.c: 126:     PORTC=0xff;
   341   000642  6882               	setf	130,c	;volatile
   342   000644                     
   343                           ;keypad_func.c: 127:     start_func(0x01);
   344   000644  0E01               	movlw	1
   345   000646  EC98  F005         	call	_start_func
   346   00064A                     
   347                           ;keypad_func.c: 128:     start_func(0x0f);
   348   00064A  0E0F               	movlw	15
   349   00064C  EC98  F005         	call	_start_func
   350   000650                     
   351                           ;keypad_func.c: 129:     start_func(0x38);
   352   000650  0E38               	movlw	56
   353   000652  EC98  F005         	call	_start_func
   354   000656                     l1203:
   355                           
   356                           ;keypad_func.c: 131:     {;keypad_func.c: 132:         start_func(0x01);
   357   000656  0E01               	movlw	1
   358   000658  EC98  F005         	call	_start_func
   359   00065C                     
   360                           ;keypad_func.c: 133:         display("ENTER PASSWORD");
   361   00065C  0E12               	movlw	low STR_1
   362   00065E  6E0B               	movwf	display@p^0,c
   363   000660  ECE8  F005         	call	_display	;wreg free
   364   000664                     
   365                           ;keypad_func.c: 134:         start_func(0xc0);
   366   000664  0EC0               	movlw	192
   367   000666  EC98  F005         	call	_start_func
   368   00066A                     
   369                           ;keypad_func.c: 135:         for(index=0;index<4;index++)
   370   00066A  0E00               	movlw	0
   371   00066C  6E2A               	movwf	_index^0,c
   372   00066E                     l1215:
   373                           
   374                           ;keypad_func.c: 136:         {;keypad_func.c: 137:             inp[index]=keypad();
   375   00066E  502A               	movf	_index^0,w,c
   376   000670  0F20               	addlw	low _inp
   377   000672  6ED9               	movwf	fsr2l,c
   378   000674  6ADA               	clrf	fsr2h,c
   379   000676  EC6A  F004         	call	_keypad	;wreg free
   380   00067A  5001               	movf	?_keypad^0,w,c
   381   00067C  6EDF               	movwf	indf2,c
   382                           
   383                           ;keypad_func.c: 138:             data(inp[index]);
   384   00067E  502A               	movf	_index^0,w,c
   385   000680  0F20               	addlw	low _inp
   386   000682  6ED9               	movwf	fsr2l,c
   387   000684  6ADA               	clrf	fsr2h,c
   388   000686  50DF               	movf	indf2,w,c
   389   000688  ECB4  F005         	call	_data
   390   00068C                     l94:
   391   00068C  A881               	btfss	3969,4,c	;volatile
   392   00068E  EF4B  F003         	goto	u531
   393   000692  EF4D  F003         	goto	u530
   394   000696                     u531:
   395   000696  EF46  F003         	goto	l94
   396   00069A                     u530:
   397   00069A  AA81               	btfss	3969,5,c	;volatile
   398   00069C  EF52  F003         	goto	u541
   399   0006A0  EF54  F003         	goto	u540
   400   0006A4                     u541:
   401   0006A4  EF46  F003         	goto	l94
   402   0006A8                     u540:
   403   0006A8  AC81               	btfss	3969,6,c	;volatile
   404   0006AA  EF59  F003         	goto	u551
   405   0006AE  EF5B  F003         	goto	u550
   406   0006B2                     u551:
   407   0006B2  EF46  F003         	goto	l94
   408   0006B6                     u550:
   409   0006B6  AE81               	btfss	3969,7,c	;volatile
   410   0006B8  EF60  F003         	goto	u561
   411   0006BC  EF62  F003         	goto	u560
   412   0006C0                     u561:
   413   0006C0  EF46  F003         	goto	l94
   414   0006C4                     u560:
   415   0006C4                     
   416                           ;keypad_func.c: 140:         }
   417   0006C4  2A2A               	incf	_index^0,f,c
   418   0006C6  0E03               	movlw	3
   419   0006C8  642A               	cpfsgt	_index^0,c
   420   0006CA  EF69  F003         	goto	u571
   421   0006CE  EF6B  F003         	goto	u570
   422   0006D2                     u571:
   423   0006D2  EF37  F003         	goto	l1215
   424   0006D6                     u570:
   425   0006D6                     
   426                           ;keypad_func.c: 141:         if(strcmp(inp,pass)==0)
   427   0006D6  0E20               	movlw	low _inp
   428   0006D8  6E01               	movwf	strcmp@l^0,c
   429   0006DA  0E25               	movlw	low _pass
   430   0006DC  6E02               	movwf	strcmp@r^0,c
   431   0006DE  EC45  F005         	call	_strcmp	;wreg free
   432   0006E2  5001               	movf	?_strcmp^0,w,c
   433   0006E4  1002               	iorwf	(?_strcmp+1)^0,w,c
   434   0006E6  A4D8               	btfss	status,2,c
   435   0006E8  EF78  F003         	goto	u581
   436   0006EC  EF7A  F003         	goto	u580
   437   0006F0                     u581:
   438   0006F0  EFF1  F003         	goto	l1261
   439   0006F4                     u580:
   440   0006F4                     
   441                           ;keypad_func.c: 142:         {;keypad_func.c: 143:             for(long i=0;i<=100000;i+
      +                          +);
   442   0006F4  0E00               	movlw	0
   443   0006F6  6E0C               	movwf	main@i^0,c
   444   0006F8  0E00               	movlw	0
   445   0006FA  6E0D               	movwf	(main@i+1)^0,c
   446   0006FC  0E00               	movlw	0
   447   0006FE  6E0E               	movwf	(main@i+2)^0,c
   448   000700  0E00               	movlw	0
   449   000702  6E0F               	movwf	(main@i+3)^0,c
   450   000704                     l1235:
   451   000704  0E01               	movlw	1
   452   000706  260C               	addwf	main@i^0,f,c
   453   000708  0E00               	movlw	0
   454   00070A  220D               	addwfc	(main@i+1)^0,f,c
   455   00070C  220E               	addwfc	(main@i+2)^0,f,c
   456   00070E  220F               	addwfc	(main@i+3)^0,f,c
   457   000710  BE0F               	btfsc	(main@i+3)^0,7,c
   458   000712  EF98  F003         	goto	u591
   459   000716  500F               	movf	(main@i+3)^0,w,c
   460   000718  E10D               	bnz	u590
   461   00071A  0EA1               	movlw	161
   462   00071C  5C0C               	subwf	main@i^0,w,c
   463   00071E  0E86               	movlw	134
   464   000720  580D               	subwfb	(main@i+1)^0,w,c
   465   000722  0E01               	movlw	1
   466   000724  580E               	subwfb	(main@i+2)^0,w,c
   467   000726  A0D8               	btfss	status,0,c
   468   000728  EF98  F003         	goto	u591
   469   00072C  EF9A  F003         	goto	u590
   470   000730                     u591:
   471   000730  EF82  F003         	goto	l1235
   472   000734                     u590:
   473   000734                     
   474                           ;keypad_func.c: 144:             start_func(0x01);
   475   000734  0E01               	movlw	1
   476   000736  EC98  F005         	call	_start_func
   477   00073A                     
   478                           ;keypad_func.c: 145:             display("Password Correct");
   479   00073A  0E01               	movlw	low STR_2
   480   00073C  6E0B               	movwf	display@p^0,c
   481   00073E  ECE8  F005         	call	_display	;wreg free
   482   000742                     
   483                           ;keypad_func.c: 146:             for(int j=0;j<=10;j++)
   484   000742  0E00               	movlw	0
   485   000744  6E1D               	movwf	(main@j+1)^0,c
   486   000746  0E00               	movlw	0
   487   000748  6E1C               	movwf	main@j^0,c
   488   00074A                     l1247:
   489                           
   490                           ;keypad_func.c: 147:                {;keypad_func.c: 148:                 start_func(0x0
      +                          8);
   491   00074A  0E08               	movlw	8
   492   00074C  EC98  F005         	call	_start_func
   493                           
   494                           ;keypad_func.c: 149:                 delay(1000);
   495   000750  0EE8               	movlw	232
   496   000752  6E01               	movwf	delay@j^0,c
   497   000754  0E03               	movlw	3
   498   000756  6E02               	movwf	(delay@j+1)^0,c
   499   000758  0E00               	movlw	0
   500   00075A  6E03               	movwf	(delay@j+2)^0,c
   501   00075C  0E00               	movlw	0
   502   00075E  6E04               	movwf	(delay@j+3)^0,c
   503   000760  EC74  F005         	call	_delay	;wreg free
   504                           
   505                           ;keypad_func.c: 150:                 start_func(0x0E);
   506   000764  0E0E               	movlw	14
   507   000766  EC98  F005         	call	_start_func
   508                           
   509                           ;keypad_func.c: 151:                 delay(1000);
   510   00076A  0EE8               	movlw	232
   511   00076C  6E01               	movwf	delay@j^0,c
   512   00076E  0E03               	movlw	3
   513   000770  6E02               	movwf	(delay@j+1)^0,c
   514   000772  0E00               	movlw	0
   515   000774  6E03               	movwf	(delay@j+2)^0,c
   516   000776  0E00               	movlw	0
   517   000778  6E04               	movwf	(delay@j+3)^0,c
   518   00077A  EC74  F005         	call	_delay	;wreg free
   519   00077E                     
   520                           ;keypad_func.c: 152:                }
   521   00077E  4A1C               	infsnz	main@j^0,f,c
   522   000780  2A1D               	incf	(main@j+1)^0,f,c
   523   000782  BE1D               	btfsc	(main@j+1)^0,7,c
   524   000784  EFCD  F003         	goto	u601
   525   000788  501D               	movf	(main@j+1)^0,w,c
   526   00078A  E109               	bnz	u600
   527   00078C  0E0B               	movlw	11
   528   00078E  5C1C               	subwf	main@j^0,w,c
   529   000790  A0D8               	btfss	status,0,c
   530   000792  EFCD  F003         	goto	u601
   531   000796  EFCF  F003         	goto	u600
   532   00079A                     u601:
   533   00079A  EFA5  F003         	goto	l1247
   534   00079E                     u600:
   535   00079E                     
   536                           ;keypad_func.c: 153:             for(long i=0;i<=100000;i++);
   537   00079E  0E00               	movlw	0
   538   0007A0  6E10               	movwf	main@i_71^0,c
   539   0007A2  0E00               	movlw	0
   540   0007A4  6E11               	movwf	(main@i_71+1)^0,c
   541   0007A6  0E00               	movlw	0
   542   0007A8  6E12               	movwf	(main@i_71+2)^0,c
   543   0007AA  0E00               	movlw	0
   544   0007AC  6E13               	movwf	(main@i_71+3)^0,c
   545   0007AE                     l1259:
   546   0007AE  0E01               	movlw	1
   547   0007B0  2610               	addwf	main@i_71^0,f,c
   548   0007B2  0E00               	movlw	0
   549   0007B4  2211               	addwfc	(main@i_71+1)^0,f,c
   550   0007B6  2212               	addwfc	(main@i_71+2)^0,f,c
   551   0007B8  2213               	addwfc	(main@i_71+3)^0,f,c
   552   0007BA  BE13               	btfsc	(main@i_71+3)^0,7,c
   553   0007BC  EFED  F003         	goto	u611
   554   0007C0  5013               	movf	(main@i_71+3)^0,w,c
   555   0007C2  E10D               	bnz	u610
   556   0007C4  0EA1               	movlw	161
   557   0007C6  5C10               	subwf	main@i_71^0,w,c
   558   0007C8  0E86               	movlw	134
   559   0007CA  5811               	subwfb	(main@i_71+1)^0,w,c
   560   0007CC  0E01               	movlw	1
   561   0007CE  5812               	subwfb	(main@i_71+2)^0,w,c
   562   0007D0  A0D8               	btfss	status,0,c
   563   0007D2  EFED  F003         	goto	u611
   564   0007D6  EFEF  F003         	goto	u610
   565   0007DA                     u611:
   566   0007DA  EFD7  F003         	goto	l1259
   567   0007DE                     u610:
   568   0007DE  EF2B  F003         	goto	l1203
   569   0007E2                     l1261:
   570                           
   571                           ;keypad_func.c: 156:         {;keypad_func.c: 157:             for(long i=0;i<=100000;i+
      +                          +);
   572   0007E2  0E00               	movlw	0
   573   0007E4  6E14               	movwf	main@i_72^0,c
   574   0007E6  0E00               	movlw	0
   575   0007E8  6E15               	movwf	(main@i_72+1)^0,c
   576   0007EA  0E00               	movlw	0
   577   0007EC  6E16               	movwf	(main@i_72+2)^0,c
   578   0007EE  0E00               	movlw	0
   579   0007F0  6E17               	movwf	(main@i_72+3)^0,c
   580   0007F2                     l1267:
   581   0007F2  0E01               	movlw	1
   582   0007F4  2614               	addwf	main@i_72^0,f,c
   583   0007F6  0E00               	movlw	0
   584   0007F8  2215               	addwfc	(main@i_72+1)^0,f,c
   585   0007FA  2216               	addwfc	(main@i_72+2)^0,f,c
   586   0007FC  2217               	addwfc	(main@i_72+3)^0,f,c
   587   0007FE  BE17               	btfsc	(main@i_72+3)^0,7,c
   588   000800  EF0F  F004         	goto	u621
   589   000804  5017               	movf	(main@i_72+3)^0,w,c
   590   000806  E10D               	bnz	u620
   591   000808  0EA1               	movlw	161
   592   00080A  5C14               	subwf	main@i_72^0,w,c
   593   00080C  0E86               	movlw	134
   594   00080E  5815               	subwfb	(main@i_72+1)^0,w,c
   595   000810  0E01               	movlw	1
   596   000812  5816               	subwfb	(main@i_72+2)^0,w,c
   597   000814  A0D8               	btfss	status,0,c
   598   000816  EF0F  F004         	goto	u621
   599   00081A  EF11  F004         	goto	u620
   600   00081E                     u621:
   601   00081E  EFF9  F003         	goto	l1267
   602   000822                     u620:
   603   000822                     
   604                           ;keypad_func.c: 158:             start_func(0x01);
   605   000822  0E01               	movlw	1
   606   000824  EC98  F005         	call	_start_func
   607   000828                     
   608                           ;keypad_func.c: 159:             display("Password Wrong");
   609   000828  0E21               	movlw	low STR_3
   610   00082A  6E0B               	movwf	display@p^0,c
   611   00082C  ECE8  F005         	call	_display	;wreg free
   612   000830                     
   613                           ;keypad_func.c: 160:             for(int j=0;j<=10;j++)
   614   000830  0E00               	movlw	0
   615   000832  6E1F               	movwf	(main@j_74+1)^0,c
   616   000834  0E00               	movlw	0
   617   000836  6E1E               	movwf	main@j_74^0,c
   618   000838                     l1279:
   619                           
   620                           ;keypad_func.c: 161:                {;keypad_func.c: 162:                 start_func(0x0
      +                          8);
   621   000838  0E08               	movlw	8
   622   00083A  EC98  F005         	call	_start_func
   623                           
   624                           ;keypad_func.c: 163:                 delay(1000);
   625   00083E  0EE8               	movlw	232
   626   000840  6E01               	movwf	delay@j^0,c
   627   000842  0E03               	movlw	3
   628   000844  6E02               	movwf	(delay@j+1)^0,c
   629   000846  0E00               	movlw	0
   630   000848  6E03               	movwf	(delay@j+2)^0,c
   631   00084A  0E00               	movlw	0
   632   00084C  6E04               	movwf	(delay@j+3)^0,c
   633   00084E  EC74  F005         	call	_delay	;wreg free
   634                           
   635                           ;keypad_func.c: 164:                 start_func(0x0E);
   636   000852  0E0E               	movlw	14
   637   000854  EC98  F005         	call	_start_func
   638                           
   639                           ;keypad_func.c: 165:                 delay(1000);
   640   000858  0EE8               	movlw	232
   641   00085A  6E01               	movwf	delay@j^0,c
   642   00085C  0E03               	movlw	3
   643   00085E  6E02               	movwf	(delay@j+1)^0,c
   644   000860  0E00               	movlw	0
   645   000862  6E03               	movwf	(delay@j+2)^0,c
   646   000864  0E00               	movlw	0
   647   000866  6E04               	movwf	(delay@j+3)^0,c
   648   000868  EC74  F005         	call	_delay	;wreg free
   649   00086C                     
   650                           ;keypad_func.c: 166:                }
   651   00086C  4A1E               	infsnz	main@j_74^0,f,c
   652   00086E  2A1F               	incf	(main@j_74+1)^0,f,c
   653   000870  BE1F               	btfsc	(main@j_74+1)^0,7,c
   654   000872  EF44  F004         	goto	u631
   655   000876  501F               	movf	(main@j_74+1)^0,w,c
   656   000878  E109               	bnz	u630
   657   00087A  0E0B               	movlw	11
   658   00087C  5C1E               	subwf	main@j_74^0,w,c
   659   00087E  A0D8               	btfss	status,0,c
   660   000880  EF44  F004         	goto	u631
   661   000884  EF46  F004         	goto	u630
   662   000888                     u631:
   663   000888  EF1C  F004         	goto	l1279
   664   00088C                     u630:
   665   00088C                     
   666                           ;keypad_func.c: 167:             for(long i=0;i<=1000000;i++);
   667   00088C  0E00               	movlw	0
   668   00088E  6E18               	movwf	main@i_75^0,c
   669   000890  0E00               	movlw	0
   670   000892  6E19               	movwf	(main@i_75+1)^0,c
   671   000894  0E00               	movlw	0
   672   000896  6E1A               	movwf	(main@i_75+2)^0,c
   673   000898  0E00               	movlw	0
   674   00089A  6E1B               	movwf	(main@i_75+3)^0,c
   675   00089C                     l1291:
   676   00089C  0E01               	movlw	1
   677   00089E  2618               	addwf	main@i_75^0,f,c
   678   0008A0  0E00               	movlw	0
   679   0008A2  2219               	addwfc	(main@i_75+1)^0,f,c
   680   0008A4  221A               	addwfc	(main@i_75+2)^0,f,c
   681   0008A6  221B               	addwfc	(main@i_75+3)^0,f,c
   682   0008A8  BE1B               	btfsc	(main@i_75+3)^0,7,c
   683   0008AA  EF64  F004         	goto	u641
   684   0008AE  501B               	movf	(main@i_75+3)^0,w,c
   685   0008B0  E10D               	bnz	u640
   686   0008B2  0E41               	movlw	65
   687   0008B4  5C18               	subwf	main@i_75^0,w,c
   688   0008B6  0E42               	movlw	66
   689   0008B8  5819               	subwfb	(main@i_75+1)^0,w,c
   690   0008BA  0E0F               	movlw	15
   691   0008BC  581A               	subwfb	(main@i_75+2)^0,w,c
   692   0008BE  A0D8               	btfss	status,0,c
   693   0008C0  EF64  F004         	goto	u641
   694   0008C4  EF66  F004         	goto	u640
   695   0008C8                     u641:
   696   0008C8  EF4E  F004         	goto	l1291
   697   0008CC                     u640:
   698   0008CC  EF2B  F003         	goto	l1203
   699   0008D0  EF00  F000         	goto	start
   700   0008D4                     __end_of_main:
   701                           	callstack 0
   702                           
   703 ;; *************** function _strcmp *****************
   704 ;; Defined at:
   705 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  l               1    0[COMRAM] PTR const unsigned char 
   708 ;;		 -> inp(5), 
   709 ;;  r               1    1[COMRAM] PTR const unsigned char 
   710 ;;		 -> pass(5), 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  2    0[COMRAM] int 
   715 ;; Registers used:
   716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   722 ;;      Params:         2       0       0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0
   725 ;;      Totals:         4       0       0       0       0       0       0
   726 ;;Total ram usage:        4 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text1
   736   000A8A                     __ptext1:
   737                           	callstack 0
   738   000A8A                     _strcmp:
   739                           	callstack 30
   740   000A8A  EF49  F005         	goto	l1185
   741   000A8E                     l1183:
   742   000A8E  2A01               	incf	strcmp@l^0,f,c
   743   000A90  2A02               	incf	strcmp@r^0,f,c
   744   000A92                     l1185:
   745   000A92  5002               	movf	strcmp@r^0,w,c
   746   000A94  6ED9               	movwf	fsr2l,c
   747   000A96  6ADA               	clrf	fsr2h,c
   748   000A98  5001               	movf	strcmp@l^0,w,c
   749   000A9A  6EE1               	movwf	fsr1l,c
   750   000A9C  6AE2               	clrf	fsr1h,c
   751   000A9E  50DE               	movf	postinc2,w,c
   752   000AA0  18E6               	xorwf	postinc1,w,c
   753   000AA2  A4D8               	btfss	status,2,c
   754   000AA4  EF56  F005         	goto	u511
   755   000AA8  EF58  F005         	goto	u510
   756   000AAC                     u511:
   757   000AAC  EF63  F005         	goto	l1189
   758   000AB0                     u510:
   759   000AB0  5001               	movf	strcmp@l^0,w,c
   760   000AB2  6ED9               	movwf	fsr2l,c
   761   000AB4  6ADA               	clrf	fsr2h,c
   762   000AB6  50DF               	movf	indf2,w,c
   763   000AB8  A4D8               	btfss	status,2,c
   764   000ABA  EF61  F005         	goto	u521
   765   000ABE  EF63  F005         	goto	u520
   766   000AC2                     u521:
   767   000AC2  EF47  F005         	goto	l1183
   768   000AC6                     u520:
   769   000AC6                     l1189:
   770   000AC6  5001               	movf	strcmp@l^0,w,c
   771   000AC8  6ED9               	movwf	fsr2l,c
   772   000ACA  6ADA               	clrf	fsr2h,c
   773   000ACC  50DF               	movf	indf2,w,c
   774   000ACE  6E03               	movwf	??_strcmp^0,c
   775   000AD0  5002               	movf	strcmp@r^0,w,c
   776   000AD2  6ED9               	movwf	fsr2l,c
   777   000AD4  6ADA               	clrf	fsr2h,c
   778   000AD6  50DF               	movf	indf2,w,c
   779   000AD8  6E04               	movwf	(??_strcmp+1)^0,c
   780   000ADA  5004               	movf	(??_strcmp+1)^0,w,c
   781   000ADC  5C03               	subwf	??_strcmp^0,w,c
   782   000ADE  6E01               	movwf	?_strcmp^0,c
   783   000AE0  6A02               	clrf	(?_strcmp+1)^0,c
   784   000AE2  A0D8               	btfss	status,0,c
   785   000AE4  0602               	decf	(?_strcmp+1)^0,f,c
   786   000AE6  0012               	return		;funcret
   787   000AE8                     __end_of_strcmp:
   788                           	callstack 0
   789                           
   790 ;; *************** function _start_func *****************
   791 ;; Defined at:
   792 ;;		line 15 in file "keypad_func.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  a               1    wreg     unsigned char 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  a               1    9[COMRAM] unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   806 ;;      Params:         0       0       0       0       0       0       0
   807 ;;      Locals:         1       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0
   809 ;;      Totals:         1       0       0       0       0       0       0
   810 ;;Total ram usage:        1 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 1
   813 ;; This function calls:
   814 ;;		_delay
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text2
   821   000B30                     __ptext2:
   822                           	callstack 0
   823   000B30                     _start_func:
   824                           	callstack 29
   825                           
   826                           ;incstack = 0
   827                           ;start_func@a stored from wreg
   828   000B30  6E0A               	movwf	start_func@a^0,c
   829   000B32                     
   830                           ;keypad_func.c: 15: void start_func(unsigned char a);keypad_func.c: 16: {;keypad_func.c:
      +                           17:     RC0=0;
   831   000B32  9082               	bcf	3970,0,c	;volatile
   832                           
   833                           ;keypad_func.c: 18:     RC1=0;
   834   000B34  9282               	bcf	3970,1,c	;volatile
   835   000B36                     
   836                           ;keypad_func.c: 19:     PORTD=a;
   837   000B36  C00A  FF83         	movff	start_func@a,3971	;volatile
   838   000B3A                     
   839                           ;keypad_func.c: 20:     RC2=1;
   840   000B3A  8482               	bsf	3970,2,c	;volatile
   841   000B3C                     
   842                           ;keypad_func.c: 21:     delay(100);
   843   000B3C  0E64               	movlw	100
   844   000B3E  6E01               	movwf	delay@j^0,c
   845   000B40  0E00               	movlw	0
   846   000B42  6E02               	movwf	(delay@j+1)^0,c
   847   000B44  0E00               	movlw	0
   848   000B46  6E03               	movwf	(delay@j+2)^0,c
   849   000B48  0E00               	movlw	0
   850   000B4A  6E04               	movwf	(delay@j+3)^0,c
   851   000B4C  EC74  F005         	call	_delay	;wreg free
   852   000B50                     
   853                           ;keypad_func.c: 22:     RC2=0;
   854   000B50  9482               	bcf	3970,2,c	;volatile
   855   000B52                     
   856                           ;keypad_func.c: 23:     delay(5000);
   857   000B52  0E88               	movlw	136
   858   000B54  6E01               	movwf	delay@j^0,c
   859   000B56  0E13               	movlw	19
   860   000B58  6E02               	movwf	(delay@j+1)^0,c
   861   000B5A  0E00               	movlw	0
   862   000B5C  6E03               	movwf	(delay@j+2)^0,c
   863   000B5E  0E00               	movlw	0
   864   000B60  6E04               	movwf	(delay@j+3)^0,c
   865   000B62  EC74  F005         	call	_delay	;wreg free
   866   000B66  0012               	return		;funcret
   867   000B68                     __end_of_start_func:
   868                           	callstack 0
   869                           
   870 ;; *************** function _keypad *****************
   871 ;; Defined at:
   872 ;;		line 44 in file "keypad_func.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  2    0[COMRAM] int 
   879 ;; Registers used:
   880 ;;		wreg, status,2
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   886 ;;      Params:         2       0       0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0       0       0
   889 ;;      Totals:         2       0       0       0       0       0       0
   890 ;;Total ram usage:        2 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text3
   900   0008D4                     __ptext3:
   901                           	callstack 0
   902   0008D4                     _keypad:
   903                           	callstack 30
   904   0008D4                     l51:
   905   0008D4                     
   906                           ;keypad_func.c: 47:     {;keypad_func.c: 48:         PORTB=0X0E;
   907   0008D4  0E0E               	movlw	14
   908   0008D6  6E81               	movwf	129,c	;volatile
   909   0008D8                     
   910                           ;keypad_func.c: 49:         if(RB4==0)
   911   0008D8  B881               	btfsc	3969,4,c	;volatile
   912   0008DA  EF71  F004         	goto	u351
   913   0008DE  EF73  F004         	goto	u350
   914   0008E2                     u351:
   915   0008E2  EF79  F004         	goto	l52
   916   0008E6                     u350:
   917   0008E6                     
   918                           ;keypad_func.c: 50:         {;keypad_func.c: 51:             return '1';
   919   0008E6  0E00               	movlw	0
   920   0008E8  6E02               	movwf	(?_keypad+1)^0,c
   921   0008EA  0E31               	movlw	49
   922   0008EC  6E01               	movwf	?_keypad^0,c
   923   0008EE  EF44  F005         	goto	l53
   924   0008F2                     l52:
   925                           
   926                           ;keypad_func.c: 53:         if(RB5==0)
   927   0008F2  BA81               	btfsc	3969,5,c	;volatile
   928   0008F4  EF7E  F004         	goto	u361
   929   0008F8  EF80  F004         	goto	u360
   930   0008FC                     u361:
   931   0008FC  EF86  F004         	goto	l54
   932   000900                     u360:
   933   000900                     
   934                           ;keypad_func.c: 54:         {;keypad_func.c: 55:             return '2';
   935   000900  0E00               	movlw	0
   936   000902  6E02               	movwf	(?_keypad+1)^0,c
   937   000904  0E32               	movlw	50
   938   000906  6E01               	movwf	?_keypad^0,c
   939   000908  EF44  F005         	goto	l53
   940   00090C                     l54:
   941   00090C  BC81               	btfsc	3969,6,c	;volatile
   942   00090E  EF8B  F004         	goto	u371
   943   000912  EF8D  F004         	goto	u370
   944   000916                     u371:
   945   000916  EF93  F004         	goto	l56
   946   00091A                     u370:
   947   00091A                     
   948                           ;keypad_func.c: 58:         {;keypad_func.c: 59:             return '3';
   949   00091A  0E00               	movlw	0
   950   00091C  6E02               	movwf	(?_keypad+1)^0,c
   951   00091E  0E33               	movlw	51
   952   000920  6E01               	movwf	?_keypad^0,c
   953   000922  EF44  F005         	goto	l53
   954   000926                     l56:
   955   000926  BE81               	btfsc	3969,7,c	;volatile
   956   000928  EF98  F004         	goto	u381
   957   00092C  EF9A  F004         	goto	u380
   958   000930                     u381:
   959   000930  EFA0  F004         	goto	l1105
   960   000934                     u380:
   961   000934                     
   962                           ;keypad_func.c: 62:         {;keypad_func.c: 63:             return '4';
   963   000934  0E00               	movlw	0
   964   000936  6E02               	movwf	(?_keypad+1)^0,c
   965   000938  0E34               	movlw	52
   966   00093A  6E01               	movwf	?_keypad^0,c
   967   00093C  EF44  F005         	goto	l53
   968   000940                     l1105:
   969                           
   970                           ;keypad_func.c: 65:         PORTB=0X0D;
   971   000940  0E0D               	movlw	13
   972   000942  6E81               	movwf	129,c	;volatile
   973   000944                     
   974                           ;keypad_func.c: 66:         if(RB4==0)
   975   000944  B881               	btfsc	3969,4,c	;volatile
   976   000946  EFA7  F004         	goto	u391
   977   00094A  EFA9  F004         	goto	u390
   978   00094E                     u391:
   979   00094E  EFAF  F004         	goto	l59
   980   000952                     u390:
   981   000952                     
   982                           ;keypad_func.c: 67:         {;keypad_func.c: 68:             return '5';
   983   000952  0E00               	movlw	0
   984   000954  6E02               	movwf	(?_keypad+1)^0,c
   985   000956  0E35               	movlw	53
   986   000958  6E01               	movwf	?_keypad^0,c
   987   00095A  EF44  F005         	goto	l53
   988   00095E                     l59:
   989   00095E  BA81               	btfsc	3969,5,c	;volatile
   990   000960  EFB4  F004         	goto	u401
   991   000964  EFB6  F004         	goto	u400
   992   000968                     u401:
   993   000968  EFBC  F004         	goto	l61
   994   00096C                     u400:
   995   00096C                     
   996                           ;keypad_func.c: 71:         {;keypad_func.c: 72:             return '6';
   997   00096C  0E00               	movlw	0
   998   00096E  6E02               	movwf	(?_keypad+1)^0,c
   999   000970  0E36               	movlw	54
  1000   000972  6E01               	movwf	?_keypad^0,c
  1001   000974  EF44  F005         	goto	l53
  1002   000978                     l61:
  1003   000978  BC81               	btfsc	3969,6,c	;volatile
  1004   00097A  EFC1  F004         	goto	u411
  1005   00097E  EFC3  F004         	goto	u410
  1006   000982                     u411:
  1007   000982  EFC9  F004         	goto	l63
  1008   000986                     u410:
  1009   000986                     
  1010                           ;keypad_func.c: 75:         {;keypad_func.c: 76:             return '7';
  1011   000986  0E00               	movlw	0
  1012   000988  6E02               	movwf	(?_keypad+1)^0,c
  1013   00098A  0E37               	movlw	55
  1014   00098C  6E01               	movwf	?_keypad^0,c
  1015   00098E  EF44  F005         	goto	l53
  1016   000992                     l63:
  1017   000992  BE81               	btfsc	3969,7,c	;volatile
  1018   000994  EFCE  F004         	goto	u421
  1019   000998  EFD0  F004         	goto	u420
  1020   00099C                     u421:
  1021   00099C  EFD6  F004         	goto	l62
  1022   0009A0                     u420:
  1023   0009A0                     
  1024                           ;keypad_func.c: 79:         {;keypad_func.c: 80:             return '8';
  1025   0009A0  0E00               	movlw	0
  1026   0009A2  6E02               	movwf	(?_keypad+1)^0,c
  1027   0009A4  0E38               	movlw	56
  1028   0009A6  6E01               	movwf	?_keypad^0,c
  1029   0009A8  EF44  F005         	goto	l53
  1030   0009AC                     l62:
  1031   0009AC                     
  1032                           ;keypad_func.c: 82:         PORTB=0X0B;
  1033   0009AC  0E0B               	movlw	11
  1034   0009AE  6E81               	movwf	129,c	;volatile
  1035   0009B0                     
  1036                           ;keypad_func.c: 83:         if(RB4==0)
  1037   0009B0  B881               	btfsc	3969,4,c	;volatile
  1038   0009B2  EFDD  F004         	goto	u431
  1039   0009B6  EFDF  F004         	goto	u430
  1040   0009BA                     u431:
  1041   0009BA  EFE5  F004         	goto	l66
  1042   0009BE                     u430:
  1043   0009BE                     
  1044                           ;keypad_func.c: 84:         {;keypad_func.c: 85:             return '9';
  1045   0009BE  0E00               	movlw	0
  1046   0009C0  6E02               	movwf	(?_keypad+1)^0,c
  1047   0009C2  0E39               	movlw	57
  1048   0009C4  6E01               	movwf	?_keypad^0,c
  1049   0009C6  EF44  F005         	goto	l53
  1050   0009CA                     l66:
  1051   0009CA  BA81               	btfsc	3969,5,c	;volatile
  1052   0009CC  EFEA  F004         	goto	u441
  1053   0009D0  EFEC  F004         	goto	u440
  1054   0009D4                     u441:
  1055   0009D4  EFF2  F004         	goto	l68
  1056   0009D8                     u440:
  1057   0009D8                     
  1058                           ;keypad_func.c: 88:         {;keypad_func.c: 89:             return 'A';
  1059   0009D8  0E00               	movlw	0
  1060   0009DA  6E02               	movwf	(?_keypad+1)^0,c
  1061   0009DC  0E41               	movlw	65
  1062   0009DE  6E01               	movwf	?_keypad^0,c
  1063   0009E0  EF44  F005         	goto	l53
  1064   0009E4                     l68:
  1065   0009E4  BC81               	btfsc	3969,6,c	;volatile
  1066   0009E6  EFF7  F004         	goto	u451
  1067   0009EA  EFF9  F004         	goto	u450
  1068   0009EE                     u451:
  1069   0009EE  EFFF  F004         	goto	l70
  1070   0009F2                     u450:
  1071   0009F2                     
  1072                           ;keypad_func.c: 92:         {;keypad_func.c: 93:             return 'B';
  1073   0009F2  0E00               	movlw	0
  1074   0009F4  6E02               	movwf	(?_keypad+1)^0,c
  1075   0009F6  0E42               	movlw	66
  1076   0009F8  6E01               	movwf	?_keypad^0,c
  1077   0009FA  EF44  F005         	goto	l53
  1078   0009FE                     l70:
  1079   0009FE  BE81               	btfsc	3969,7,c	;volatile
  1080   000A00  EF04  F005         	goto	u461
  1081   000A04  EF06  F005         	goto	u460
  1082   000A08                     u461:
  1083   000A08  EF0C  F005         	goto	l69
  1084   000A0C                     u460:
  1085   000A0C                     
  1086                           ;keypad_func.c: 96:         {;keypad_func.c: 97:             return 'C';
  1087   000A0C  0E00               	movlw	0
  1088   000A0E  6E02               	movwf	(?_keypad+1)^0,c
  1089   000A10  0E43               	movlw	67
  1090   000A12  6E01               	movwf	?_keypad^0,c
  1091   000A14  EF44  F005         	goto	l53
  1092   000A18                     l69:
  1093   000A18                     
  1094                           ;keypad_func.c: 99:        PORTB=0X07;
  1095   000A18  0E07               	movlw	7
  1096   000A1A  6E81               	movwf	129,c	;volatile
  1097   000A1C                     
  1098                           ;keypad_func.c: 100:        if(RB4==0)
  1099   000A1C  B881               	btfsc	3969,4,c	;volatile
  1100   000A1E  EF13  F005         	goto	u471
  1101   000A22  EF15  F005         	goto	u470
  1102   000A26                     u471:
  1103   000A26  EF1B  F005         	goto	l73
  1104   000A2A                     u470:
  1105   000A2A                     
  1106                           ;keypad_func.c: 101:         {;keypad_func.c: 102:            return 'D';
  1107   000A2A  0E00               	movlw	0
  1108   000A2C  6E02               	movwf	(?_keypad+1)^0,c
  1109   000A2E  0E44               	movlw	68
  1110   000A30  6E01               	movwf	?_keypad^0,c
  1111   000A32  EF44  F005         	goto	l53
  1112   000A36                     l73:
  1113                           
  1114                           ;keypad_func.c: 104:         if(RB5==0)
  1115   000A36  BA81               	btfsc	3969,5,c	;volatile
  1116   000A38  EF20  F005         	goto	u481
  1117   000A3C  EF22  F005         	goto	u480
  1118   000A40                     u481:
  1119   000A40  EF28  F005         	goto	l74
  1120   000A44                     u480:
  1121   000A44                     
  1122                           ;keypad_func.c: 105:         {;keypad_func.c: 106:             return 'E';
  1123   000A44  0E00               	movlw	0
  1124   000A46  6E02               	movwf	(?_keypad+1)^0,c
  1125   000A48  0E45               	movlw	69
  1126   000A4A  6E01               	movwf	?_keypad^0,c
  1127   000A4C  EF44  F005         	goto	l53
  1128   000A50                     l74:
  1129   000A50  BC81               	btfsc	3969,6,c	;volatile
  1130   000A52  EF2D  F005         	goto	u491
  1131   000A56  EF2F  F005         	goto	u490
  1132   000A5A                     u491:
  1133   000A5A  EF35  F005         	goto	l76
  1134   000A5E                     u490:
  1135   000A5E                     
  1136                           ;keypad_func.c: 109:         {;keypad_func.c: 110:             return 'F';
  1137   000A5E  0E00               	movlw	0
  1138   000A60  6E02               	movwf	(?_keypad+1)^0,c
  1139   000A62  0E46               	movlw	70
  1140   000A64  6E01               	movwf	?_keypad^0,c
  1141   000A66  EF44  F005         	goto	l53
  1142   000A6A                     l76:
  1143   000A6A  BE81               	btfsc	3969,7,c	;volatile
  1144   000A6C  EF3A  F005         	goto	u501
  1145   000A70  EF3C  F005         	goto	u500
  1146   000A74                     u501:
  1147   000A74  EF42  F005         	goto	l75
  1148   000A78                     u500:
  1149   000A78                     
  1150                           ;keypad_func.c: 113:         {;keypad_func.c: 114:             return 'G';
  1151   000A78  0E00               	movlw	0
  1152   000A7A  6E02               	movwf	(?_keypad+1)^0,c
  1153   000A7C  0E47               	movlw	71
  1154   000A7E  6E01               	movwf	?_keypad^0,c
  1155   000A80  EF44  F005         	goto	l53
  1156   000A84                     l75:
  1157   000A84  EF6A  F004         	goto	l51
  1158   000A88                     l53:
  1159   000A88  0012               	return		;funcret
  1160   000A8A                     __end_of_keypad:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _display *****************
  1164 ;; Defined at:
  1165 ;;		line 36 in file "keypad_func.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  p               1   10[COMRAM] PTR const unsigned char 
  1168 ;;		 -> STR_3(15), STR_2(17), STR_1(15), 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1180 ;;      Params:         1       0       0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0
  1183 ;;      Totals:         1       0       0       0       0       0       0
  1184 ;;Total ram usage:        1 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 2
  1187 ;; This function calls:
  1188 ;;		_data
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text4
  1195   000BD0                     __ptext4:
  1196                           	callstack 0
  1197   000BD0                     _display:
  1198                           	callstack 28
  1199   000BD0                     
  1200                           ;keypad_func.c: 36: void display(const char *p);keypad_func.c: 37: {;keypad_func.c: 38: 
      +                              while(*p)
  1201   000BD0  EFF1  F005         	goto	l1079
  1202   000BD4                     l1075:
  1203                           
  1204                           ;keypad_func.c: 39:     {;keypad_func.c: 40:         data(*p);
  1205   000BD4  C00B  FFF6         	movff	display@p,tblptrl
  1206   000BD8                     	if	0	;There is only one active tblptr byte
  1207   000BD8                     	endif
  1208   000BD8                     	if	0	;tblptru may be non-zero
  1209   000BD8                     	endif
  1210   000BD8                     	if	0	;tblptru may be non-zero
  1211   000BD8                     	endif
  1212   000BD8  0008               	tblrd		*
  1213   000BDA  50F5               	movf	tablat,w,c
  1214   000BDC  ECB4  F005         	call	_data
  1215   000BE0                     
  1216                           ;keypad_func.c: 41:         p++;
  1217   000BE0  2A0B               	incf	display@p^0,f,c
  1218   000BE2                     l1079:
  1219                           
  1220                           ;keypad_func.c: 38:     while(*p)
  1221   000BE2  C00B  FFF6         	movff	display@p,tblptrl
  1222   000BE6                     	if	0	;There is only one active tblptr byte
  1223   000BE6                     	endif
  1224   000BE6                     	if	0	;tblptru may be non-zero
  1225   000BE6                     	endif
  1226   000BE6                     	if	0	;tblptru may be non-zero
  1227   000BE6                     	endif
  1228   000BE6  0008               	tblrd		*
  1229   000BE8  50F5               	movf	tablat,w,c
  1230   000BEA  0900               	iorlw	0
  1231   000BEC  A4D8               	btfss	status,2,c
  1232   000BEE  EFFB  F005         	goto	u341
  1233   000BF2  EFFD  F005         	goto	u340
  1234   000BF6                     u341:
  1235   000BF6  EFEA  F005         	goto	l1075
  1236   000BFA                     u340:
  1237   000BFA  0012               	return		;funcret
  1238   000BFC                     __end_of_display:
  1239                           	callstack 0
  1240                           
  1241 ;; *************** function _data *****************
  1242 ;; Defined at:
  1243 ;;		line 25 in file "keypad_func.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  a               1    wreg     unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  a               1    9[COMRAM] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1257 ;;      Params:         0       0       0       0       0       0       0
  1258 ;;      Locals:         1       0       0       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0
  1260 ;;      Totals:         1       0       0       0       0       0       0
  1261 ;;Total ram usage:        1 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; Hardware stack levels required when called: 1
  1264 ;; This function calls:
  1265 ;;		_delay
  1266 ;; This function is called by:
  1267 ;;		_display
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text5
  1273   000B68                     __ptext5:
  1274                           	callstack 0
  1275   000B68                     _data:
  1276                           	callstack 28
  1277                           
  1278                           ;incstack = 0
  1279                           ;data@a stored from wreg
  1280   000B68  6E0A               	movwf	data@a^0,c
  1281   000B6A                     
  1282                           ;keypad_func.c: 25: void data(unsigned char a);keypad_func.c: 26: {;keypad_func.c: 27:  
      +                             RC0=1;
  1283   000B6A  8082               	bsf	3970,0,c	;volatile
  1284                           
  1285                           ;keypad_func.c: 28:     RC1=0;
  1286   000B6C  9282               	bcf	3970,1,c	;volatile
  1287   000B6E                     
  1288                           ;keypad_func.c: 29:     PORTD=a;
  1289   000B6E  C00A  FF83         	movff	data@a,3971	;volatile
  1290   000B72                     
  1291                           ;keypad_func.c: 30:     RC2=1;
  1292   000B72  8482               	bsf	3970,2,c	;volatile
  1293   000B74                     
  1294                           ;keypad_func.c: 31:     delay(100);
  1295   000B74  0E64               	movlw	100
  1296   000B76  6E01               	movwf	delay@j^0,c
  1297   000B78  0E00               	movlw	0
  1298   000B7A  6E02               	movwf	(delay@j+1)^0,c
  1299   000B7C  0E00               	movlw	0
  1300   000B7E  6E03               	movwf	(delay@j+2)^0,c
  1301   000B80  0E00               	movlw	0
  1302   000B82  6E04               	movwf	(delay@j+3)^0,c
  1303   000B84  EC74  F005         	call	_delay	;wreg free
  1304   000B88                     
  1305                           ;keypad_func.c: 33:     RC2=0;
  1306   000B88  9482               	bcf	3970,2,c	;volatile
  1307   000B8A                     
  1308                           ;keypad_func.c: 34:     delay(5000);
  1309   000B8A  0E88               	movlw	136
  1310   000B8C  6E01               	movwf	delay@j^0,c
  1311   000B8E  0E13               	movlw	19
  1312   000B90  6E02               	movwf	(delay@j+1)^0,c
  1313   000B92  0E00               	movlw	0
  1314   000B94  6E03               	movwf	(delay@j+2)^0,c
  1315   000B96  0E00               	movlw	0
  1316   000B98  6E04               	movwf	(delay@j+3)^0,c
  1317   000B9A  EC74  F005         	call	_delay	;wreg free
  1318   000B9E  0012               	return		;funcret
  1319   000BA0                     __end_of_data:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _delay *****************
  1323 ;; Defined at:
  1324 ;;		line 11 in file "keypad_func.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  j               4    0[COMRAM] long 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  i               4    5[COMRAM] long 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1338 ;;      Params:         4       0       0       0       0       0       0
  1339 ;;      Locals:         4       0       0       0       0       0       0
  1340 ;;      Temps:          1       0       0       0       0       0       0
  1341 ;;      Totals:         9       0       0       0       0       0       0
  1342 ;;Total ram usage:        9 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_start_func
  1348 ;;		_data
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text6
  1354   000AE8                     __ptext6:
  1355                           	callstack 0
  1356   000AE8                     _delay:
  1357                           	callstack 29
  1358   000AE8                     
  1359                           ;keypad_func.c: 11: void delay(long j);keypad_func.c: 12: {;keypad_func.c: 13:     for(l
      +                          ong i=0;i<=j;i++);
  1360   000AE8  0E00               	movlw	0
  1361   000AEA  6E06               	movwf	delay@i^0,c
  1362   000AEC  0E00               	movlw	0
  1363   000AEE  6E07               	movwf	(delay@i+1)^0,c
  1364   000AF0  0E00               	movlw	0
  1365   000AF2  6E08               	movwf	(delay@i+2)^0,c
  1366   000AF4  0E00               	movlw	0
  1367   000AF6  6E09               	movwf	(delay@i+3)^0,c
  1368   000AF8  EF84  F005         	goto	l33
  1369   000AFC                     l1047:
  1370   000AFC  0E01               	movlw	1
  1371   000AFE  2606               	addwf	delay@i^0,f,c
  1372   000B00  0E00               	movlw	0
  1373   000B02  2207               	addwfc	(delay@i+1)^0,f,c
  1374   000B04  2208               	addwfc	(delay@i+2)^0,f,c
  1375   000B06  2209               	addwfc	(delay@i+3)^0,f,c
  1376   000B08                     l33:
  1377   000B08  5006               	movf	delay@i^0,w,c
  1378   000B0A  5C01               	subwf	delay@j^0,w,c
  1379   000B0C  5007               	movf	(delay@i+1)^0,w,c
  1380   000B0E  5802               	subwfb	(delay@j+1)^0,w,c
  1381   000B10  5008               	movf	(delay@i+2)^0,w,c
  1382   000B12  5803               	subwfb	(delay@j+2)^0,w,c
  1383   000B14  5004               	movf	(delay@j+3)^0,w,c
  1384   000B16  0A80               	xorlw	128
  1385   000B18  6E05               	movwf	??_delay^0,c
  1386   000B1A  5009               	movf	(delay@i+3)^0,w,c
  1387   000B1C  0A80               	xorlw	128
  1388   000B1E  5805               	subwfb	??_delay^0,w,c
  1389   000B20  B0D8               	btfsc	status,0,c
  1390   000B22  EF95  F005         	goto	u331
  1391   000B26  EF97  F005         	goto	u330
  1392   000B2A                     u331:
  1393   000B2A  EF7E  F005         	goto	l1047
  1394   000B2E                     u330:
  1395   000B2E  0012               	return		;funcret
  1396   000B30                     __end_of_delay:
  1397                           	callstack 0
  1398                           
  1399                           	psect	rparam
  1400   000000                     tosu	equ	0xFFF
  1401                           tosh	equ	0xFFE
  1402                           tosl	equ	0xFFD
  1403                           stkptr	equ	0xFFC
  1404                           pclatu	equ	0xFFB
  1405                           pclath	equ	0xFFA
  1406                           pcl	equ	0xFF9
  1407                           tblptru	equ	0xFF8
  1408                           tblptrh	equ	0xFF7
  1409                           tblptrl	equ	0xFF6
  1410                           tablat	equ	0xFF5
  1411                           prodh	equ	0xFF4
  1412                           prodl	equ	0xFF3
  1413                           indf0	equ	0xFEF
  1414                           postinc0	equ	0xFEE
  1415                           postdec0	equ	0xFED
  1416                           preinc0	equ	0xFEC
  1417                           plusw0	equ	0xFEB
  1418                           fsr0h	equ	0xFEA
  1419                           fsr0l	equ	0xFE9
  1420                           wreg	equ	0xFE8
  1421                           indf1	equ	0xFE7
  1422                           postinc1	equ	0xFE6
  1423                           postdec1	equ	0xFE5
  1424                           preinc1	equ	0xFE4
  1425                           plusw1	equ	0xFE3
  1426                           fsr1h	equ	0xFE2
  1427                           fsr1l	equ	0xFE1
  1428                           bsr	equ	0xFE0
  1429                           indf2	equ	0xFDF
  1430                           postinc2	equ	0xFDE
  1431                           postdec2	equ	0xFDD
  1432                           preinc2	equ	0xFDC
  1433                           plusw2	equ	0xFDB
  1434                           fsr2h	equ	0xFDA
  1435                           fsr2l	equ	0xFD9
  1436                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      42
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[17]), STR_3(CODE[15]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> inp(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> pass(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _start_func->_delay
    _display->_data
    _data->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    3495
                                             11 COMRAM    20    20      0
                               _data
                              _delay
                            _display
                             _keypad
                         _start_func
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     264
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _start_func                                           1     1      0     676
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _keypad                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     949
                                             10 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 1     1      0     676
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                9     5      4     654
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _data
     _delay
   _delay
   _display
     _data
   _keypad
   _start_func
     _delay
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRl         281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      2A       1       44.2%
BITBIGSFRhh         3E      0       0      16        0.0%
BITBIGSFRhlh        2B      0       0      17        0.0%
BITBIGSFRhll         F      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A      20        0.0%
DATA                 0      0      2A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 13 09:10:21 2024

                     l33 0B08                       l42 0B9E                       l51 08D4  
                     l36 0B2E                       l52 08F2                       l61 0978  
                     l53 0A88                       l70 09FE                       l62 09AC  
                     l54 090C                       l63 0992                       l39 0B66  
                     l48 0BFA                       l56 0926                       l73 0A36  
                     l74 0A50                       l66 09CA                       l75 0A84  
                     l59 095E                       l76 0A6A                       l68 09E4  
                     l69 0A18                       l94 068C                      l795 0AE6  
                    _RC0 7C10                      _RC1 7C11                      _RC2 7C12  
                    _RB4 7C0C                      _RB5 7C0D                      _RB6 7C0E  
                    _RB7 7C0F                      u400 096C                      u401 0968  
                    u330 0B2E                      u410 0986                      u331 0B2A  
                    u411 0982                      u340 0BFA                      u500 0A78  
                    u420 09A0                      u341 0BF6                      u501 0A74  
                    u421 099C                      u430 09BE                      u350 08E6  
                    u510 0AB0                      u431 09BA                      u351 08E2  
                    u511 0AAC                      u440 09D8                      u360 0900  
                    u520 0AC6                      u600 079E                      u441 09D4  
                    u361 08FC                      u521 0AC2                      u601 079A  
                    u450 09F2                      u370 091A                      u610 07DE  
                    u530 069A                      u451 09EE                      u371 0916  
                    u611 07DA                      u531 0696                      u460 0A0C  
                    u380 0934                      u620 0822                      u540 06A8  
                    u461 0A08                      u381 0930                      u621 081E  
                    u541 06A4                      u470 0A2A                      u390 0952  
                    u630 088C                      u550 06B6                      u471 0A26  
                    u391 094E                      u631 0888                      u551 06B2  
                    u480 0A44                      u640 08CC                      u560 06C4  
                    u481 0A40                      u641 08C8                      u561 06C0  
                    u490 0A5E                      u570 06D6                      u491 0A5A  
                    u571 06D2                      u580 06F4                      u581 06F0  
                    u590 0734                      u591 0730                      _inp 0020  
                   l1101 0934                     l1121 0986                     l1105 0940  
                   l1201 0650                     l1051 0B6E                     l1131 09AC  
                   l1115 096C                     l1107 0944                     l1203 0656  
                   l1045 0AE8                     l1053 0B72                     l1141 09D8  
                   l1133 09B0                     l1109 0952                     l1061 0B32  
                   l1221 06B6                     l1205 065C                     l1047 0AFC  
                   l1055 0B74                     l1135 09BE                     l1127 09A0  
                   l1071 0B52                     l1063 0B36                     l1223 06C4  
                   l1215 066E                     l1207 0664                     l1057 0B88  
                   l1049 0B6A                     l1073 0BD0                     l1161 0A2A  
                   l1153 0A0C                     l1081 08D4                     l1065 0B3A  
                   l1241 0742                     l1225 06C6                     l1217 069A  
                   l1209 066A                     l1059 0B8A                     l1075 0BD4  
                   l1171 0A5E                     l1147 09F2                     l1083 08D8  
                   l1067 0B3C                     l1251 0782                     l1235 0704  
                   l1227 06D6                     l1219 06A8                     l1077 0BE0  
                   l1165 0A44                     l1157 0A18                     l1085 08E6  
                   l1069 0B50                     l1181 0A8A                     l1253 079E  
                   l1237 0734                     l1229 06F4                     l1261 07E2  
                   l1079 0BE2                     l1159 0A1C                     l1095 091A  
                   l1183 0A8E                     l1271 0828                     l1247 074A  
                   l1239 073A                     l1177 0A78                     l1089 0900  
                   l1185 0A92                     l1281 086C                     l1273 0830  
                   l1249 077E                     l1193 0632                     l1187 0AB0  
                   l1291 089C                     l1283 0870                     l1267 07F2  
                   l1259 07AE                     l1195 0642                     l1189 0AC6  
                   l1285 088C                     l1269 0822                     l1197 0644  
                   l1279 0838                     l1199 064A                     STR_1 0612  
                   STR_2 0601                     STR_3 0621                     _data 0B68  
                   _main 0632                     _pass 0025                     fsr1h 0FE2  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000             ___param_bank 0000  
                  ?_data 0001                    ?_main 0001                    _PORTB 0F81  
                  _PORTC 0F82                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_display 0BFC  
                  _delay 0AE8                    data@a 000A                    _index 002A  
                  main@i 000C                    main@j 001C                    tablat 0FF5  
                  status 0FD8          __initialization 0BA0             __end_of_data 0BA0  
           __end_of_main 08D4                   ??_data 000A                   ??_main 000C  
          __activetblptr 0001                   ?_delay 0001                   _ADCON1 0FC1  
                 _keypad 08D4                   delay@i 0006                   delay@j 0001  
                 isa$std 0001                   _strcmp 0A8A                ??_display 000C  
           __pdataCOMRAM 0020             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 0BC2            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_delay 0B30                  ??_delay 0005                  ?_keypad 0001  
                ?_strcmp 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0BA0                  __ramtop 0600  
                __ptext0 0632                  __ptext1 0A8A                  __ptext2 0B30  
                __ptext3 08D4                  __ptext4 0BD0                  __ptext5 0B68  
                __ptext6 0AE8                  _display 0BD0     end_of_initialization 0BC2  
                postdec1 0FE5                  postinc0 0FEE                  postinc1 0FE6  
                postinc2 0FDE                  strcmp@l 0001                  strcmp@r 0002  
             _start_func 0B30            __pidataCOMRAM 0BFC           __end_of_keypad 0A8A  
         __end_of_strcmp 0AE8      start_initialization 0BA0                 ??_keypad 0003  
            start_func@a 000A                 ??_strcmp 0003              __pbssCOMRAM 002A  
            ?_start_func 0001                 ?_display 000B              __smallconst 0600  
              copy_data0 0BB4                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600                 isa$xinst 0000                 main@i_71 0010  
               main@i_72 0014                 main@i_75 0018                 main@j_74 001E  
               display@p 000B             ??_start_func 000A       __end_of_start_func 0B68  
