

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 12 17:46:36 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20   000000                     
    21                           ; Generated 17/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4580 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   000B44                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _inp
    61   000B44  30                 	db	48
    62   000B45  30                 	db	48
    63   000B46  30                 	db	48
    64   000B47  30                 	db	48
    65   000B48  00                 	db	0
    66                           
    67                           ;initializer for _pass
    68   000B49  31                 	db	49
    69   000B4A  32                 	db	50
    70   000B4B  33                 	db	51
    71   000B4C  34                 	db	52
    72   000B4D  00                 	db	0
    73   000000                     _PORTC	set	3970
    74   000000                     _RB7	set	31759
    75   000000                     _RB6	set	31758
    76   000000                     _RB5	set	31757
    77   000000                     _RB4	set	31756
    78   000000                     _RC2	set	31762
    79   000000                     _RC1	set	31761
    80   000000                     _PORTB	set	3969
    81   000000                     _RC0	set	31760
    82   000000                     _TRISB	set	3987
    83   000000                     _ADCON1	set	4033
    84   000000                     _PORTD	set	3971
    85   000000                     _TRISD	set	3989
    86   000000                     _TRISC	set	3988
    87                           
    88                           	psect	smallconst
    89   000600                     __psmallconst:
    90                           	callstack 0
    91   000600  00                 	db	0
    92   000601                     STR_2:
    93   000601  50                 	db	80	;'P'
    94   000602  61                 	db	97	;'a'
    95   000603  73                 	db	115	;'s'
    96   000604  73                 	db	115	;'s'
    97   000605  77                 	db	119	;'w'
    98   000606  6F                 	db	111	;'o'
    99   000607  72                 	db	114	;'r'
   100   000608  64                 	db	100	;'d'
   101   000609  20                 	db	32
   102   00060A  43                 	db	67	;'C'
   103   00060B  6F                 	db	111	;'o'
   104   00060C  72                 	db	114	;'r'
   105   00060D  72                 	db	114	;'r'
   106   00060E  65                 	db	101	;'e'
   107   00060F  63                 	db	99	;'c'
   108   000610  74                 	db	116	;'t'
   109   000611  00                 	db	0
   110   000612                     STR_1:
   111   000612  45                 	db	69	;'E'
   112   000613  4E                 	db	78	;'N'
   113   000614  54                 	db	84	;'T'
   114   000615  45                 	db	69	;'E'
   115   000616  52                 	db	82	;'R'
   116   000617  20                 	db	32
   117   000618  50                 	db	80	;'P'
   118   000619  41                 	db	65	;'A'
   119   00061A  53                 	db	83	;'S'
   120   00061B  53                 	db	83	;'S'
   121   00061C  57                 	db	87	;'W'
   122   00061D  4F                 	db	79	;'O'
   123   00061E  52                 	db	82	;'R'
   124   00061F  44                 	db	68	;'D'
   125   000620  00                 	db	0
   126   000621                     STR_3:
   127   000621  50                 	db	80	;'P'
   128   000622  61                 	db	97	;'a'
   129   000623  73                 	db	115	;'s'
   130   000624  73                 	db	115	;'s'
   131   000625  77                 	db	119	;'w'
   132   000626  6F                 	db	111	;'o'
   133   000627  72                 	db	114	;'r'
   134   000628  64                 	db	100	;'d'
   135   000629  20                 	db	32
   136   00062A  57                 	db	87	;'W'
   137   00062B  72                 	db	114	;'r'
   138   00062C  6F                 	db	111	;'o'
   139   00062D  6E                 	db	110	;'n'
   140   00062E  67                 	db	103	;'g'
   141   00062F  00                 	db	0
   142   000630  00                 	db	0	; dummy byte at the end
   143   000000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147   000AE8                     __pcinit:
   148                           	callstack 0
   149   000AE8                     start_initialization:
   150                           	callstack 0
   151   000AE8                     __initialization:
   152                           	callstack 0
   153                           
   154                           ; Initialize objects allocated to COMRAM (10 bytes)
   155                           ; load TBLPTR registers with __pidataCOMRAM
   156   000AE8  0E44               	movlw	low __pidataCOMRAM
   157   000AEA  6EF6               	movwf	tblptrl,c
   158   000AEC  0E0B               	movlw	high __pidataCOMRAM
   159   000AEE  6EF7               	movwf	tblptrh,c
   160   000AF0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   161   000AF2  6EF8               	movwf	tblptru,c
   162   000AF4  EE00  F01C         	lfsr	0,__pdataCOMRAM
   163   000AF8  EE10 F00A          	lfsr	1,10
   164   000AFC                     copy_data0:
   165   000AFC  0009               	tblrd		*+
   166   000AFE  CFF5 FFEE          	movff	tablat,postinc0
   167   000B02  50E5               	movf	postdec1,w,c
   168   000B04  50E1               	movf	fsr1l,w,c
   169   000B06  E1FA               	bnz	copy_data0
   170                           
   171                           ; Clear objects allocated to COMRAM (1 bytes)
   172   000B08  6A26               	clrf	__pbssCOMRAM& (0+255),c
   173   000B0A                     end_of_initialization:
   174                           	callstack 0
   175   000B0A                     __end_of__initialization:
   176                           	callstack 0
   177   000B0A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   178   000B0C  6EF8               	movwf	tblptru,c
   179   000B0E  0E06               	movlw	high __Lsmallconst
   180   000B10  6EF7               	movwf	tblptrh,c
   181   000B12  0100               	movlb	0
   182   000B14  EF19  F003         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185   000026                     __pbssCOMRAM:
   186                           	callstack 0
   187   000026                     _index:
   188                           	callstack 0
   189   000026                     	ds	1
   190                           
   191                           	psect	dataCOMRAM
   192   00001C                     __pdataCOMRAM:
   193                           	callstack 0
   194   00001C                     _inp:
   195                           	callstack 0
   196   00001C                     	ds	5
   197   000021                     _pass:
   198                           	callstack 0
   199   000021                     	ds	5
   200                           
   201                           	psect	cstackCOMRAM
   202   000001                     __pcstackCOMRAM:
   203                           	callstack 0
   204   000001                     ?_strcmp:
   205                           	callstack 0
   206   000001                     ?_keypad:
   207                           	callstack 0
   208   000001                     strcmp@l:
   209                           	callstack 0
   210   000001                     delay@j:
   211                           	callstack 0
   212                           
   213                           ; 4 bytes @ 0x0
   214   000001                     	ds	1
   215   000002                     strcmp@r:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x1
   219   000002                     	ds	1
   220   000003                     ??_strcmp:
   221   000003                     
   222                           ; 1 bytes @ 0x2
   223   000003                     	ds	2
   224   000005                     ??_delay:
   225                           
   226                           ; 1 bytes @ 0x4
   227   000005                     	ds	1
   228   000006                     delay@i:
   229                           	callstack 0
   230                           
   231                           ; 4 bytes @ 0x5
   232   000006                     	ds	4
   233   00000A                     start_func@a:
   234                           	callstack 0
   235   00000A                     data@a:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x9
   239   00000A                     	ds	1
   240   00000B                     display@p:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0xA
   244   00000B                     	ds	1
   245   00000C                     main@i:
   246                           	callstack 0
   247                           
   248                           ; 4 bytes @ 0xB
   249   00000C                     	ds	4
   250   000010                     main@i_70:
   251                           	callstack 0
   252                           
   253                           ; 4 bytes @ 0xF
   254   000010                     	ds	4
   255   000014                     main@i_71:
   256                           	callstack 0
   257                           
   258                           ; 4 bytes @ 0x13
   259   000014                     	ds	4
   260   000018                     main@i_73:
   261                           	callstack 0
   262                           
   263                           ; 4 bytes @ 0x17
   264   000018                     	ds	4
   265                           
   266 ;;
   267 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   268 ;;
   269 ;; *************** function _main *****************
   270 ;; Defined at:
   271 ;;		line 120 in file "keypad_func.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;  i               4   23[COMRAM] long 
   276 ;;  i               4   19[COMRAM] long 
   277 ;;  i               4   15[COMRAM] long 
   278 ;;  i               4   11[COMRAM] long 
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   288 ;;      Params:         0       0       0       0       0       0       0
   289 ;;      Locals:        16       0       0       0       0       0       0
   290 ;;      Temps:          0       0       0       0       0       0       0
   291 ;;      Totals:        16       0       0       0       0       0       0
   292 ;;Total ram usage:       16 bytes
   293 ;; Hardware stack levels required when called: 3
   294 ;; This function calls:
   295 ;;		_data
   296 ;;		_display
   297 ;;		_keypad
   298 ;;		_start_func
   299 ;;		_strcmp
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text0
   306   000632                     __ptext0:
   307                           	callstack 0
   308   000632                     _main:
   309                           	callstack 28
   310   000632                     
   311                           ;keypad_func.c: 122:     ADCON1=0X0F;
   312   000632  0E0F               	movlw	15
   313   000634  6EC1               	movwf	193,c	;volatile
   314                           
   315                           ;keypad_func.c: 123:     TRISB=0XF0;
   316   000636  0EF0               	movlw	240
   317   000638  6E93               	movwf	147,c	;volatile
   318                           
   319                           ;keypad_func.c: 124:     TRISC=0X00;
   320   00063A  0E00               	movlw	0
   321   00063C  6E94               	movwf	148,c	;volatile
   322                           
   323                           ;keypad_func.c: 125:     TRISD=0x00;
   324   00063E  0E00               	movlw	0
   325   000640  6E95               	movwf	149,c	;volatile
   326   000642                     
   327                           ;keypad_func.c: 126:     PORTC=0xff;
   328   000642  6882               	setf	130,c	;volatile
   329   000644                     
   330                           ;keypad_func.c: 127:     start_func(0x01);
   331   000644  0E01               	movlw	1
   332   000646  EC3C  F005         	call	_start_func
   333   00064A                     
   334                           ;keypad_func.c: 128:     start_func(0x0f);
   335   00064A  0E0F               	movlw	15
   336   00064C  EC3C  F005         	call	_start_func
   337   000650                     
   338                           ;keypad_func.c: 129:     start_func(0x38);
   339   000650  0E38               	movlw	56
   340   000652  EC3C  F005         	call	_start_func
   341   000656                     l1175:
   342                           
   343                           ;keypad_func.c: 131:     {;keypad_func.c: 132:         start_func(0x01);
   344   000656  0E01               	movlw	1
   345   000658  EC3C  F005         	call	_start_func
   346   00065C                     
   347                           ;keypad_func.c: 133:         display("ENTER PASSWORD");
   348   00065C  0E12               	movlw	low STR_1
   349   00065E  6E0B               	movwf	display@p^0,c
   350   000660  EC8C  F005         	call	_display	;wreg free
   351   000664                     
   352                           ;keypad_func.c: 134:         start_func(0xc0);
   353   000664  0EC0               	movlw	192
   354   000666  EC3C  F005         	call	_start_func
   355   00066A                     
   356                           ;keypad_func.c: 135:         for(index=0;index<4;index++)
   357   00066A  0E00               	movlw	0
   358   00066C  6E26               	movwf	_index^0,c
   359   00066E                     l1187:
   360                           
   361                           ;keypad_func.c: 136:         {;keypad_func.c: 137:             inp[index]=keypad();
   362   00066E  5026               	movf	_index^0,w,c
   363   000670  0F1C               	addlw	low _inp
   364   000672  6ED9               	movwf	fsr2l,c
   365   000674  6ADA               	clrf	fsr2h,c
   366   000676  EC0E  F004         	call	_keypad	;wreg free
   367   00067A  5001               	movf	?_keypad^0,w,c
   368   00067C  6EDF               	movwf	indf2,c
   369                           
   370                           ;keypad_func.c: 138:             data(inp[index]);
   371   00067E  5026               	movf	_index^0,w,c
   372   000680  0F1C               	addlw	low _inp
   373   000682  6ED9               	movwf	fsr2l,c
   374   000684  6ADA               	clrf	fsr2h,c
   375   000686  50DF               	movf	indf2,w,c
   376   000688  EC58  F005         	call	_data
   377   00068C                     l94:
   378   00068C  A881               	btfss	3969,4,c	;volatile
   379   00068E  EF4B  F003         	goto	u511
   380   000692  EF4D  F003         	goto	u510
   381   000696                     u511:
   382   000696  EF46  F003         	goto	l94
   383   00069A                     u510:
   384   00069A  AA81               	btfss	3969,5,c	;volatile
   385   00069C  EF52  F003         	goto	u521
   386   0006A0  EF54  F003         	goto	u520
   387   0006A4                     u521:
   388   0006A4  EF46  F003         	goto	l94
   389   0006A8                     u520:
   390   0006A8  AC81               	btfss	3969,6,c	;volatile
   391   0006AA  EF59  F003         	goto	u531
   392   0006AE  EF5B  F003         	goto	u530
   393   0006B2                     u531:
   394   0006B2  EF46  F003         	goto	l94
   395   0006B6                     u530:
   396   0006B6  AE81               	btfss	3969,7,c	;volatile
   397   0006B8  EF60  F003         	goto	u541
   398   0006BC  EF62  F003         	goto	u540
   399   0006C0                     u541:
   400   0006C0  EF46  F003         	goto	l94
   401   0006C4                     u540:
   402   0006C4                     
   403                           ;keypad_func.c: 140:         }
   404   0006C4  2A26               	incf	_index^0,f,c
   405   0006C6  0E03               	movlw	3
   406   0006C8  6426               	cpfsgt	_index^0,c
   407   0006CA  EF69  F003         	goto	u551
   408   0006CE  EF6B  F003         	goto	u550
   409   0006D2                     u551:
   410   0006D2  EF37  F003         	goto	l1187
   411   0006D6                     u550:
   412   0006D6                     
   413                           ;keypad_func.c: 141:         if(strcmp(inp,pass)==0)
   414   0006D6  0E1C               	movlw	low _inp
   415   0006D8  6E01               	movwf	strcmp@l^0,c
   416   0006DA  0E21               	movlw	low _pass
   417   0006DC  6E02               	movwf	strcmp@r^0,c
   418   0006DE  ECE9  F004         	call	_strcmp	;wreg free
   419   0006E2  5001               	movf	?_strcmp^0,w,c
   420   0006E4  1002               	iorwf	(?_strcmp+1)^0,w,c
   421   0006E6  A4D8               	btfss	status,2,c
   422   0006E8  EF78  F003         	goto	u561
   423   0006EC  EF7A  F003         	goto	u560
   424   0006F0                     u561:
   425   0006F0  EFC3  F003         	goto	l1221
   426   0006F4                     u560:
   427   0006F4                     
   428                           ;keypad_func.c: 142:         {;keypad_func.c: 143:             for(long i=0;i<=100000;i+
      +                          +);
   429   0006F4  0E00               	movlw	0
   430   0006F6  6E0C               	movwf	main@i^0,c
   431   0006F8  0E00               	movlw	0
   432   0006FA  6E0D               	movwf	(main@i+1)^0,c
   433   0006FC  0E00               	movlw	0
   434   0006FE  6E0E               	movwf	(main@i+2)^0,c
   435   000700  0E00               	movlw	0
   436   000702  6E0F               	movwf	(main@i+3)^0,c
   437   000704                     l1207:
   438   000704  0E01               	movlw	1
   439   000706  260C               	addwf	main@i^0,f,c
   440   000708  0E00               	movlw	0
   441   00070A  220D               	addwfc	(main@i+1)^0,f,c
   442   00070C  220E               	addwfc	(main@i+2)^0,f,c
   443   00070E  220F               	addwfc	(main@i+3)^0,f,c
   444   000710  BE0F               	btfsc	(main@i+3)^0,7,c
   445   000712  EF98  F003         	goto	u571
   446   000716  500F               	movf	(main@i+3)^0,w,c
   447   000718  E10D               	bnz	u570
   448   00071A  0EA1               	movlw	161
   449   00071C  5C0C               	subwf	main@i^0,w,c
   450   00071E  0E86               	movlw	134
   451   000720  580D               	subwfb	(main@i+1)^0,w,c
   452   000722  0E01               	movlw	1
   453   000724  580E               	subwfb	(main@i+2)^0,w,c
   454   000726  A0D8               	btfss	status,0,c
   455   000728  EF98  F003         	goto	u571
   456   00072C  EF9A  F003         	goto	u570
   457   000730                     u571:
   458   000730  EF82  F003         	goto	l1207
   459   000734                     u570:
   460   000734                     
   461                           ;keypad_func.c: 144:             start_func(0x01);
   462   000734  0E01               	movlw	1
   463   000736  EC3C  F005         	call	_start_func
   464   00073A                     
   465                           ;keypad_func.c: 145:             display("Password Correct");
   466   00073A  0E01               	movlw	low STR_2
   467   00073C  6E0B               	movwf	display@p^0,c
   468   00073E  EC8C  F005         	call	_display	;wreg free
   469   000742                     
   470                           ;keypad_func.c: 146:             for(long i=0;i<=1000000;i++);
   471   000742  0E00               	movlw	0
   472   000744  6E10               	movwf	main@i_70^0,c
   473   000746  0E00               	movlw	0
   474   000748  6E11               	movwf	(main@i_70+1)^0,c
   475   00074A  0E00               	movlw	0
   476   00074C  6E12               	movwf	(main@i_70+2)^0,c
   477   00074E  0E00               	movlw	0
   478   000750  6E13               	movwf	(main@i_70+3)^0,c
   479   000752                     l1219:
   480   000752  0E01               	movlw	1
   481   000754  2610               	addwf	main@i_70^0,f,c
   482   000756  0E00               	movlw	0
   483   000758  2211               	addwfc	(main@i_70+1)^0,f,c
   484   00075A  2212               	addwfc	(main@i_70+2)^0,f,c
   485   00075C  2213               	addwfc	(main@i_70+3)^0,f,c
   486   00075E  BE13               	btfsc	(main@i_70+3)^0,7,c
   487   000760  EFBF  F003         	goto	u581
   488   000764  5013               	movf	(main@i_70+3)^0,w,c
   489   000766  E10D               	bnz	u580
   490   000768  0E41               	movlw	65
   491   00076A  5C10               	subwf	main@i_70^0,w,c
   492   00076C  0E42               	movlw	66
   493   00076E  5811               	subwfb	(main@i_70+1)^0,w,c
   494   000770  0E0F               	movlw	15
   495   000772  5812               	subwfb	(main@i_70+2)^0,w,c
   496   000774  A0D8               	btfss	status,0,c
   497   000776  EFBF  F003         	goto	u581
   498   00077A  EFC1  F003         	goto	u580
   499   00077E                     u581:
   500   00077E  EFA9  F003         	goto	l1219
   501   000782                     u580:
   502   000782  EF2B  F003         	goto	l1175
   503   000786                     l1221:
   504                           
   505                           ;keypad_func.c: 149:         {;keypad_func.c: 150:             for(long i=0;i<=100000;i+
      +                          +);
   506   000786  0E00               	movlw	0
   507   000788  6E14               	movwf	main@i_71^0,c
   508   00078A  0E00               	movlw	0
   509   00078C  6E15               	movwf	(main@i_71+1)^0,c
   510   00078E  0E00               	movlw	0
   511   000790  6E16               	movwf	(main@i_71+2)^0,c
   512   000792  0E00               	movlw	0
   513   000794  6E17               	movwf	(main@i_71+3)^0,c
   514   000796                     l1227:
   515   000796  0E01               	movlw	1
   516   000798  2614               	addwf	main@i_71^0,f,c
   517   00079A  0E00               	movlw	0
   518   00079C  2215               	addwfc	(main@i_71+1)^0,f,c
   519   00079E  2216               	addwfc	(main@i_71+2)^0,f,c
   520   0007A0  2217               	addwfc	(main@i_71+3)^0,f,c
   521   0007A2  BE17               	btfsc	(main@i_71+3)^0,7,c
   522   0007A4  EFE1  F003         	goto	u591
   523   0007A8  5017               	movf	(main@i_71+3)^0,w,c
   524   0007AA  E10D               	bnz	u590
   525   0007AC  0EA1               	movlw	161
   526   0007AE  5C14               	subwf	main@i_71^0,w,c
   527   0007B0  0E86               	movlw	134
   528   0007B2  5815               	subwfb	(main@i_71+1)^0,w,c
   529   0007B4  0E01               	movlw	1
   530   0007B6  5816               	subwfb	(main@i_71+2)^0,w,c
   531   0007B8  A0D8               	btfss	status,0,c
   532   0007BA  EFE1  F003         	goto	u591
   533   0007BE  EFE3  F003         	goto	u590
   534   0007C2                     u591:
   535   0007C2  EFCB  F003         	goto	l1227
   536   0007C6                     u590:
   537   0007C6                     
   538                           ;keypad_func.c: 151:             start_func(0x01);
   539   0007C6  0E01               	movlw	1
   540   0007C8  EC3C  F005         	call	_start_func
   541   0007CC                     
   542                           ;keypad_func.c: 152:             display("Password Wrong");
   543   0007CC  0E21               	movlw	low STR_3
   544   0007CE  6E0B               	movwf	display@p^0,c
   545   0007D0  EC8C  F005         	call	_display	;wreg free
   546   0007D4                     
   547                           ;keypad_func.c: 153:             for(long i=0;i<=1000000;i++);
   548   0007D4  0E00               	movlw	0
   549   0007D6  6E18               	movwf	main@i_73^0,c
   550   0007D8  0E00               	movlw	0
   551   0007DA  6E19               	movwf	(main@i_73+1)^0,c
   552   0007DC  0E00               	movlw	0
   553   0007DE  6E1A               	movwf	(main@i_73+2)^0,c
   554   0007E0  0E00               	movlw	0
   555   0007E2  6E1B               	movwf	(main@i_73+3)^0,c
   556   0007E4                     l1239:
   557   0007E4  0E01               	movlw	1
   558   0007E6  2618               	addwf	main@i_73^0,f,c
   559   0007E8  0E00               	movlw	0
   560   0007EA  2219               	addwfc	(main@i_73+1)^0,f,c
   561   0007EC  221A               	addwfc	(main@i_73+2)^0,f,c
   562   0007EE  221B               	addwfc	(main@i_73+3)^0,f,c
   563   0007F0  BE1B               	btfsc	(main@i_73+3)^0,7,c
   564   0007F2  EF08  F004         	goto	u601
   565   0007F6  501B               	movf	(main@i_73+3)^0,w,c
   566   0007F8  E10D               	bnz	u600
   567   0007FA  0E41               	movlw	65
   568   0007FC  5C18               	subwf	main@i_73^0,w,c
   569   0007FE  0E42               	movlw	66
   570   000800  5819               	subwfb	(main@i_73+1)^0,w,c
   571   000802  0E0F               	movlw	15
   572   000804  581A               	subwfb	(main@i_73+2)^0,w,c
   573   000806  A0D8               	btfss	status,0,c
   574   000808  EF08  F004         	goto	u601
   575   00080C  EF0A  F004         	goto	u600
   576   000810                     u601:
   577   000810  EFF2  F003         	goto	l1239
   578   000814                     u600:
   579   000814  EF2B  F003         	goto	l1175
   580   000818  EF00  F000         	goto	start
   581   00081C                     __end_of_main:
   582                           	callstack 0
   583                           
   584 ;; *************** function _strcmp *****************
   585 ;; Defined at:
   586 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  l               1    0[COMRAM] PTR const unsigned char 
   589 ;;		 -> inp(5), 
   590 ;;  r               1    1[COMRAM] PTR const unsigned char 
   591 ;;		 -> pass(5), 
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  2    0[COMRAM] int 
   596 ;; Registers used:
   597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   603 ;;      Params:         2       0       0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0       0       0
   605 ;;      Temps:          2       0       0       0       0       0       0
   606 ;;      Totals:         4       0       0       0       0       0       0
   607 ;;Total ram usage:        4 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text1
   617   0009D2                     __ptext1:
   618                           	callstack 0
   619   0009D2                     _strcmp:
   620                           	callstack 30
   621   0009D2  EFED  F004         	goto	l1157
   622   0009D6                     l1155:
   623   0009D6  2A01               	incf	strcmp@l^0,f,c
   624   0009D8  2A02               	incf	strcmp@r^0,f,c
   625   0009DA                     l1157:
   626   0009DA  5002               	movf	strcmp@r^0,w,c
   627   0009DC  6ED9               	movwf	fsr2l,c
   628   0009DE  6ADA               	clrf	fsr2h,c
   629   0009E0  5001               	movf	strcmp@l^0,w,c
   630   0009E2  6EE1               	movwf	fsr1l,c
   631   0009E4  6AE2               	clrf	fsr1h,c
   632   0009E6  50DE               	movf	postinc2,w,c
   633   0009E8  18E6               	xorwf	postinc1,w,c
   634   0009EA  A4D8               	btfss	status,2,c
   635   0009EC  EFFA  F004         	goto	u491
   636   0009F0  EFFC  F004         	goto	u490
   637   0009F4                     u491:
   638   0009F4  EF07  F005         	goto	l1161
   639   0009F8                     u490:
   640   0009F8  5001               	movf	strcmp@l^0,w,c
   641   0009FA  6ED9               	movwf	fsr2l,c
   642   0009FC  6ADA               	clrf	fsr2h,c
   643   0009FE  50DF               	movf	indf2,w,c
   644   000A00  A4D8               	btfss	status,2,c
   645   000A02  EF05  F005         	goto	u501
   646   000A06  EF07  F005         	goto	u500
   647   000A0A                     u501:
   648   000A0A  EFEB  F004         	goto	l1155
   649   000A0E                     u500:
   650   000A0E                     l1161:
   651   000A0E  5001               	movf	strcmp@l^0,w,c
   652   000A10  6ED9               	movwf	fsr2l,c
   653   000A12  6ADA               	clrf	fsr2h,c
   654   000A14  50DF               	movf	indf2,w,c
   655   000A16  6E03               	movwf	??_strcmp^0,c
   656   000A18  5002               	movf	strcmp@r^0,w,c
   657   000A1A  6ED9               	movwf	fsr2l,c
   658   000A1C  6ADA               	clrf	fsr2h,c
   659   000A1E  50DF               	movf	indf2,w,c
   660   000A20  6E04               	movwf	(??_strcmp+1)^0,c
   661   000A22  5004               	movf	(??_strcmp+1)^0,w,c
   662   000A24  5C03               	subwf	??_strcmp^0,w,c
   663   000A26  6E01               	movwf	?_strcmp^0,c
   664   000A28  6A02               	clrf	(?_strcmp+1)^0,c
   665   000A2A  A0D8               	btfss	status,0,c
   666   000A2C  0602               	decf	(?_strcmp+1)^0,f,c
   667   000A2E  0012               	return		;funcret
   668   000A30                     __end_of_strcmp:
   669                           	callstack 0
   670                           
   671 ;; *************** function _start_func *****************
   672 ;; Defined at:
   673 ;;		line 15 in file "keypad_func.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  a               1    wreg     unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  a               1    9[COMRAM] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   687 ;;      Params:         0       0       0       0       0       0       0
   688 ;;      Locals:         1       0       0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0       0
   690 ;;      Totals:         1       0       0       0       0       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 1
   694 ;; This function calls:
   695 ;;		_delay
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text2
   702   000A78                     __ptext2:
   703                           	callstack 0
   704   000A78                     _start_func:
   705                           	callstack 29
   706                           
   707                           ;incstack = 0
   708                           ;start_func@a stored from wreg
   709   000A78  6E0A               	movwf	start_func@a^0,c
   710   000A7A                     
   711                           ;keypad_func.c: 15: void start_func(unsigned char a);keypad_func.c: 16: {;keypad_func.c:
      +                           17:     RC0=0;
   712   000A7A  9082               	bcf	3970,0,c	;volatile
   713                           
   714                           ;keypad_func.c: 18:     RC1=0;
   715   000A7C  9282               	bcf	3970,1,c	;volatile
   716   000A7E                     
   717                           ;keypad_func.c: 19:     PORTD=a;
   718   000A7E  C00A  FF83         	movff	start_func@a,3971	;volatile
   719   000A82                     
   720                           ;keypad_func.c: 20:     RC2=1;
   721   000A82  8482               	bsf	3970,2,c	;volatile
   722   000A84                     
   723                           ;keypad_func.c: 21:     delay(100);
   724   000A84  0E64               	movlw	100
   725   000A86  6E01               	movwf	delay@j^0,c
   726   000A88  0E00               	movlw	0
   727   000A8A  6E02               	movwf	(delay@j+1)^0,c
   728   000A8C  0E00               	movlw	0
   729   000A8E  6E03               	movwf	(delay@j+2)^0,c
   730   000A90  0E00               	movlw	0
   731   000A92  6E04               	movwf	(delay@j+3)^0,c
   732   000A94  EC18  F005         	call	_delay	;wreg free
   733   000A98                     
   734                           ;keypad_func.c: 22:     RC2=0;
   735   000A98  9482               	bcf	3970,2,c	;volatile
   736   000A9A                     
   737                           ;keypad_func.c: 23:     delay(5000);
   738   000A9A  0E88               	movlw	136
   739   000A9C  6E01               	movwf	delay@j^0,c
   740   000A9E  0E13               	movlw	19
   741   000AA0  6E02               	movwf	(delay@j+1)^0,c
   742   000AA2  0E00               	movlw	0
   743   000AA4  6E03               	movwf	(delay@j+2)^0,c
   744   000AA6  0E00               	movlw	0
   745   000AA8  6E04               	movwf	(delay@j+3)^0,c
   746   000AAA  EC18  F005         	call	_delay	;wreg free
   747   000AAE  0012               	return		;funcret
   748   000AB0                     __end_of_start_func:
   749                           	callstack 0
   750                           
   751 ;; *************** function _keypad *****************
   752 ;; Defined at:
   753 ;;		line 44 in file "keypad_func.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  2    0[COMRAM] int 
   760 ;; Registers used:
   761 ;;		wreg, status,2
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   767 ;;      Params:         2       0       0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0
   770 ;;      Totals:         2       0       0       0       0       0       0
   771 ;;Total ram usage:        2 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text3
   781   00081C                     __ptext3:
   782                           	callstack 0
   783   00081C                     _keypad:
   784                           	callstack 30
   785   00081C                     l51:
   786   00081C                     
   787                           ;keypad_func.c: 47:     {;keypad_func.c: 48:         PORTB=0X0E;
   788   00081C  0E0E               	movlw	14
   789   00081E  6E81               	movwf	129,c	;volatile
   790   000820                     
   791                           ;keypad_func.c: 49:         if(RB4==0)
   792   000820  B881               	btfsc	3969,4,c	;volatile
   793   000822  EF15  F004         	goto	u331
   794   000826  EF17  F004         	goto	u330
   795   00082A                     u331:
   796   00082A  EF1D  F004         	goto	l52
   797   00082E                     u330:
   798   00082E                     
   799                           ;keypad_func.c: 50:         {;keypad_func.c: 51:             return '1';
   800   00082E  0E00               	movlw	0
   801   000830  6E02               	movwf	(?_keypad+1)^0,c
   802   000832  0E31               	movlw	49
   803   000834  6E01               	movwf	?_keypad^0,c
   804   000836  EFE8  F004         	goto	l53
   805   00083A                     l52:
   806                           
   807                           ;keypad_func.c: 53:         if(RB5==0)
   808   00083A  BA81               	btfsc	3969,5,c	;volatile
   809   00083C  EF22  F004         	goto	u341
   810   000840  EF24  F004         	goto	u340
   811   000844                     u341:
   812   000844  EF2A  F004         	goto	l54
   813   000848                     u340:
   814   000848                     
   815                           ;keypad_func.c: 54:         {;keypad_func.c: 55:             return '2';
   816   000848  0E00               	movlw	0
   817   00084A  6E02               	movwf	(?_keypad+1)^0,c
   818   00084C  0E32               	movlw	50
   819   00084E  6E01               	movwf	?_keypad^0,c
   820   000850  EFE8  F004         	goto	l53
   821   000854                     l54:
   822   000854  BC81               	btfsc	3969,6,c	;volatile
   823   000856  EF2F  F004         	goto	u351
   824   00085A  EF31  F004         	goto	u350
   825   00085E                     u351:
   826   00085E  EF37  F004         	goto	l56
   827   000862                     u350:
   828   000862                     
   829                           ;keypad_func.c: 58:         {;keypad_func.c: 59:             return '3';
   830   000862  0E00               	movlw	0
   831   000864  6E02               	movwf	(?_keypad+1)^0,c
   832   000866  0E33               	movlw	51
   833   000868  6E01               	movwf	?_keypad^0,c
   834   00086A  EFE8  F004         	goto	l53
   835   00086E                     l56:
   836   00086E  BE81               	btfsc	3969,7,c	;volatile
   837   000870  EF3C  F004         	goto	u361
   838   000874  EF3E  F004         	goto	u360
   839   000878                     u361:
   840   000878  EF44  F004         	goto	l1077
   841   00087C                     u360:
   842   00087C                     
   843                           ;keypad_func.c: 62:         {;keypad_func.c: 63:             return '4';
   844   00087C  0E00               	movlw	0
   845   00087E  6E02               	movwf	(?_keypad+1)^0,c
   846   000880  0E34               	movlw	52
   847   000882  6E01               	movwf	?_keypad^0,c
   848   000884  EFE8  F004         	goto	l53
   849   000888                     l1077:
   850                           
   851                           ;keypad_func.c: 65:         PORTB=0X0D;
   852   000888  0E0D               	movlw	13
   853   00088A  6E81               	movwf	129,c	;volatile
   854   00088C                     
   855                           ;keypad_func.c: 66:         if(RB4==0)
   856   00088C  B881               	btfsc	3969,4,c	;volatile
   857   00088E  EF4B  F004         	goto	u371
   858   000892  EF4D  F004         	goto	u370
   859   000896                     u371:
   860   000896  EF53  F004         	goto	l59
   861   00089A                     u370:
   862   00089A                     
   863                           ;keypad_func.c: 67:         {;keypad_func.c: 68:             return '5';
   864   00089A  0E00               	movlw	0
   865   00089C  6E02               	movwf	(?_keypad+1)^0,c
   866   00089E  0E35               	movlw	53
   867   0008A0  6E01               	movwf	?_keypad^0,c
   868   0008A2  EFE8  F004         	goto	l53
   869   0008A6                     l59:
   870   0008A6  BA81               	btfsc	3969,5,c	;volatile
   871   0008A8  EF58  F004         	goto	u381
   872   0008AC  EF5A  F004         	goto	u380
   873   0008B0                     u381:
   874   0008B0  EF60  F004         	goto	l61
   875   0008B4                     u380:
   876   0008B4                     
   877                           ;keypad_func.c: 71:         {;keypad_func.c: 72:             return '6';
   878   0008B4  0E00               	movlw	0
   879   0008B6  6E02               	movwf	(?_keypad+1)^0,c
   880   0008B8  0E36               	movlw	54
   881   0008BA  6E01               	movwf	?_keypad^0,c
   882   0008BC  EFE8  F004         	goto	l53
   883   0008C0                     l61:
   884   0008C0  BC81               	btfsc	3969,6,c	;volatile
   885   0008C2  EF65  F004         	goto	u391
   886   0008C6  EF67  F004         	goto	u390
   887   0008CA                     u391:
   888   0008CA  EF6D  F004         	goto	l63
   889   0008CE                     u390:
   890   0008CE                     
   891                           ;keypad_func.c: 75:         {;keypad_func.c: 76:             return '7';
   892   0008CE  0E00               	movlw	0
   893   0008D0  6E02               	movwf	(?_keypad+1)^0,c
   894   0008D2  0E37               	movlw	55
   895   0008D4  6E01               	movwf	?_keypad^0,c
   896   0008D6  EFE8  F004         	goto	l53
   897   0008DA                     l63:
   898   0008DA  BE81               	btfsc	3969,7,c	;volatile
   899   0008DC  EF72  F004         	goto	u401
   900   0008E0  EF74  F004         	goto	u400
   901   0008E4                     u401:
   902   0008E4  EF7A  F004         	goto	l62
   903   0008E8                     u400:
   904   0008E8                     
   905                           ;keypad_func.c: 79:         {;keypad_func.c: 80:             return '8';
   906   0008E8  0E00               	movlw	0
   907   0008EA  6E02               	movwf	(?_keypad+1)^0,c
   908   0008EC  0E38               	movlw	56
   909   0008EE  6E01               	movwf	?_keypad^0,c
   910   0008F0  EFE8  F004         	goto	l53
   911   0008F4                     l62:
   912   0008F4                     
   913                           ;keypad_func.c: 82:         PORTB=0X0B;
   914   0008F4  0E0B               	movlw	11
   915   0008F6  6E81               	movwf	129,c	;volatile
   916   0008F8                     
   917                           ;keypad_func.c: 83:         if(RB4==0)
   918   0008F8  B881               	btfsc	3969,4,c	;volatile
   919   0008FA  EF81  F004         	goto	u411
   920   0008FE  EF83  F004         	goto	u410
   921   000902                     u411:
   922   000902  EF89  F004         	goto	l66
   923   000906                     u410:
   924   000906                     
   925                           ;keypad_func.c: 84:         {;keypad_func.c: 85:             return '9';
   926   000906  0E00               	movlw	0
   927   000908  6E02               	movwf	(?_keypad+1)^0,c
   928   00090A  0E39               	movlw	57
   929   00090C  6E01               	movwf	?_keypad^0,c
   930   00090E  EFE8  F004         	goto	l53
   931   000912                     l66:
   932   000912  BA81               	btfsc	3969,5,c	;volatile
   933   000914  EF8E  F004         	goto	u421
   934   000918  EF90  F004         	goto	u420
   935   00091C                     u421:
   936   00091C  EF96  F004         	goto	l68
   937   000920                     u420:
   938   000920                     
   939                           ;keypad_func.c: 88:         {;keypad_func.c: 89:             return 'A';
   940   000920  0E00               	movlw	0
   941   000922  6E02               	movwf	(?_keypad+1)^0,c
   942   000924  0E41               	movlw	65
   943   000926  6E01               	movwf	?_keypad^0,c
   944   000928  EFE8  F004         	goto	l53
   945   00092C                     l68:
   946   00092C  BC81               	btfsc	3969,6,c	;volatile
   947   00092E  EF9B  F004         	goto	u431
   948   000932  EF9D  F004         	goto	u430
   949   000936                     u431:
   950   000936  EFA3  F004         	goto	l70
   951   00093A                     u430:
   952   00093A                     
   953                           ;keypad_func.c: 92:         {;keypad_func.c: 93:             return 'B';
   954   00093A  0E00               	movlw	0
   955   00093C  6E02               	movwf	(?_keypad+1)^0,c
   956   00093E  0E42               	movlw	66
   957   000940  6E01               	movwf	?_keypad^0,c
   958   000942  EFE8  F004         	goto	l53
   959   000946                     l70:
   960   000946  BE81               	btfsc	3969,7,c	;volatile
   961   000948  EFA8  F004         	goto	u441
   962   00094C  EFAA  F004         	goto	u440
   963   000950                     u441:
   964   000950  EFB0  F004         	goto	l69
   965   000954                     u440:
   966   000954                     
   967                           ;keypad_func.c: 96:         {;keypad_func.c: 97:             return 'C';
   968   000954  0E00               	movlw	0
   969   000956  6E02               	movwf	(?_keypad+1)^0,c
   970   000958  0E43               	movlw	67
   971   00095A  6E01               	movwf	?_keypad^0,c
   972   00095C  EFE8  F004         	goto	l53
   973   000960                     l69:
   974   000960                     
   975                           ;keypad_func.c: 99:        PORTB=0X07;
   976   000960  0E07               	movlw	7
   977   000962  6E81               	movwf	129,c	;volatile
   978   000964                     
   979                           ;keypad_func.c: 100:        if(RB4==0)
   980   000964  B881               	btfsc	3969,4,c	;volatile
   981   000966  EFB7  F004         	goto	u451
   982   00096A  EFB9  F004         	goto	u450
   983   00096E                     u451:
   984   00096E  EFBF  F004         	goto	l73
   985   000972                     u450:
   986   000972                     
   987                           ;keypad_func.c: 101:         {;keypad_func.c: 102:            return 'D';
   988   000972  0E00               	movlw	0
   989   000974  6E02               	movwf	(?_keypad+1)^0,c
   990   000976  0E44               	movlw	68
   991   000978  6E01               	movwf	?_keypad^0,c
   992   00097A  EFE8  F004         	goto	l53
   993   00097E                     l73:
   994                           
   995                           ;keypad_func.c: 104:         if(RB5==0)
   996   00097E  BA81               	btfsc	3969,5,c	;volatile
   997   000980  EFC4  F004         	goto	u461
   998   000984  EFC6  F004         	goto	u460
   999   000988                     u461:
  1000   000988  EFCC  F004         	goto	l74
  1001   00098C                     u460:
  1002   00098C                     
  1003                           ;keypad_func.c: 105:         {;keypad_func.c: 106:             return 'E';
  1004   00098C  0E00               	movlw	0
  1005   00098E  6E02               	movwf	(?_keypad+1)^0,c
  1006   000990  0E45               	movlw	69
  1007   000992  6E01               	movwf	?_keypad^0,c
  1008   000994  EFE8  F004         	goto	l53
  1009   000998                     l74:
  1010   000998  BC81               	btfsc	3969,6,c	;volatile
  1011   00099A  EFD1  F004         	goto	u471
  1012   00099E  EFD3  F004         	goto	u470
  1013   0009A2                     u471:
  1014   0009A2  EFD9  F004         	goto	l76
  1015   0009A6                     u470:
  1016   0009A6                     
  1017                           ;keypad_func.c: 109:         {;keypad_func.c: 110:             return 'F';
  1018   0009A6  0E00               	movlw	0
  1019   0009A8  6E02               	movwf	(?_keypad+1)^0,c
  1020   0009AA  0E46               	movlw	70
  1021   0009AC  6E01               	movwf	?_keypad^0,c
  1022   0009AE  EFE8  F004         	goto	l53
  1023   0009B2                     l76:
  1024   0009B2  BE81               	btfsc	3969,7,c	;volatile
  1025   0009B4  EFDE  F004         	goto	u481
  1026   0009B8  EFE0  F004         	goto	u480
  1027   0009BC                     u481:
  1028   0009BC  EFE6  F004         	goto	l75
  1029   0009C0                     u480:
  1030   0009C0                     
  1031                           ;keypad_func.c: 113:         {;keypad_func.c: 114:             return 'G';
  1032   0009C0  0E00               	movlw	0
  1033   0009C2  6E02               	movwf	(?_keypad+1)^0,c
  1034   0009C4  0E47               	movlw	71
  1035   0009C6  6E01               	movwf	?_keypad^0,c
  1036   0009C8  EFE8  F004         	goto	l53
  1037   0009CC                     l75:
  1038   0009CC  EF0E  F004         	goto	l51
  1039   0009D0                     l53:
  1040   0009D0  0012               	return		;funcret
  1041   0009D2                     __end_of_keypad:
  1042                           	callstack 0
  1043                           
  1044 ;; *************** function _display *****************
  1045 ;; Defined at:
  1046 ;;		line 36 in file "keypad_func.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  p               1   10[COMRAM] PTR const unsigned char 
  1049 ;;		 -> STR_3(15), STR_2(17), STR_1(15), 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1061 ;;      Params:         1       0       0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0
  1064 ;;      Totals:         1       0       0       0       0       0       0
  1065 ;;Total ram usage:        1 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; Hardware stack levels required when called: 2
  1068 ;; This function calls:
  1069 ;;		_data
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text4
  1076   000B18                     __ptext4:
  1077                           	callstack 0
  1078   000B18                     _display:
  1079                           	callstack 28
  1080   000B18                     
  1081                           ;keypad_func.c: 36: void display(const char *p);keypad_func.c: 37: {;keypad_func.c: 38: 
      +                              while(*p)
  1082   000B18  EF95  F005         	goto	l1051
  1083   000B1C                     l1047:
  1084                           
  1085                           ;keypad_func.c: 39:     {;keypad_func.c: 40:         data(*p);
  1086   000B1C  C00B  FFF6         	movff	display@p,tblptrl
  1087   000B20                     	if	0	;There is only one active tblptr byte
  1088   000B20                     	endif
  1089   000B20                     	if	0	;tblptru may be non-zero
  1090   000B20                     	endif
  1091   000B20                     	if	0	;tblptru may be non-zero
  1092   000B20                     	endif
  1093   000B20  0008               	tblrd		*
  1094   000B22  50F5               	movf	tablat,w,c
  1095   000B24  EC58  F005         	call	_data
  1096   000B28                     
  1097                           ;keypad_func.c: 41:         p++;
  1098   000B28  2A0B               	incf	display@p^0,f,c
  1099   000B2A                     l1051:
  1100                           
  1101                           ;keypad_func.c: 38:     while(*p)
  1102   000B2A  C00B  FFF6         	movff	display@p,tblptrl
  1103   000B2E                     	if	0	;There is only one active tblptr byte
  1104   000B2E                     	endif
  1105   000B2E                     	if	0	;tblptru may be non-zero
  1106   000B2E                     	endif
  1107   000B2E                     	if	0	;tblptru may be non-zero
  1108   000B2E                     	endif
  1109   000B2E  0008               	tblrd		*
  1110   000B30  50F5               	movf	tablat,w,c
  1111   000B32  0900               	iorlw	0
  1112   000B34  A4D8               	btfss	status,2,c
  1113   000B36  EF9F  F005         	goto	u321
  1114   000B3A  EFA1  F005         	goto	u320
  1115   000B3E                     u321:
  1116   000B3E  EF8E  F005         	goto	l1047
  1117   000B42                     u320:
  1118   000B42  0012               	return		;funcret
  1119   000B44                     __end_of_display:
  1120                           	callstack 0
  1121                           
  1122 ;; *************** function _data *****************
  1123 ;; Defined at:
  1124 ;;		line 25 in file "keypad_func.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  a               1    wreg     unsigned char 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  a               1    9[COMRAM] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1138 ;;      Params:         0       0       0       0       0       0       0
  1139 ;;      Locals:         1       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0
  1141 ;;      Totals:         1       0       0       0       0       0       0
  1142 ;;Total ram usage:        1 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 1
  1145 ;; This function calls:
  1146 ;;		_delay
  1147 ;; This function is called by:
  1148 ;;		_display
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text5
  1154   000AB0                     __ptext5:
  1155                           	callstack 0
  1156   000AB0                     _data:
  1157                           	callstack 28
  1158                           
  1159                           ;incstack = 0
  1160                           ;data@a stored from wreg
  1161   000AB0  6E0A               	movwf	data@a^0,c
  1162   000AB2                     
  1163                           ;keypad_func.c: 25: void data(unsigned char a);keypad_func.c: 26: {;keypad_func.c: 27:  
      +                             RC0=1;
  1164   000AB2  8082               	bsf	3970,0,c	;volatile
  1165                           
  1166                           ;keypad_func.c: 28:     RC1=0;
  1167   000AB4  9282               	bcf	3970,1,c	;volatile
  1168   000AB6                     
  1169                           ;keypad_func.c: 29:     PORTD=a;
  1170   000AB6  C00A  FF83         	movff	data@a,3971	;volatile
  1171   000ABA                     
  1172                           ;keypad_func.c: 30:     RC2=1;
  1173   000ABA  8482               	bsf	3970,2,c	;volatile
  1174   000ABC                     
  1175                           ;keypad_func.c: 31:     delay(100);
  1176   000ABC  0E64               	movlw	100
  1177   000ABE  6E01               	movwf	delay@j^0,c
  1178   000AC0  0E00               	movlw	0
  1179   000AC2  6E02               	movwf	(delay@j+1)^0,c
  1180   000AC4  0E00               	movlw	0
  1181   000AC6  6E03               	movwf	(delay@j+2)^0,c
  1182   000AC8  0E00               	movlw	0
  1183   000ACA  6E04               	movwf	(delay@j+3)^0,c
  1184   000ACC  EC18  F005         	call	_delay	;wreg free
  1185   000AD0                     
  1186                           ;keypad_func.c: 33:     RC2=0;
  1187   000AD0  9482               	bcf	3970,2,c	;volatile
  1188   000AD2                     
  1189                           ;keypad_func.c: 34:     delay(5000);
  1190   000AD2  0E88               	movlw	136
  1191   000AD4  6E01               	movwf	delay@j^0,c
  1192   000AD6  0E13               	movlw	19
  1193   000AD8  6E02               	movwf	(delay@j+1)^0,c
  1194   000ADA  0E00               	movlw	0
  1195   000ADC  6E03               	movwf	(delay@j+2)^0,c
  1196   000ADE  0E00               	movlw	0
  1197   000AE0  6E04               	movwf	(delay@j+3)^0,c
  1198   000AE2  EC18  F005         	call	_delay	;wreg free
  1199   000AE6  0012               	return		;funcret
  1200   000AE8                     __end_of_data:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _delay *****************
  1204 ;; Defined at:
  1205 ;;		line 11 in file "keypad_func.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  j               4    0[COMRAM] long 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  i               4    5[COMRAM] long 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1219 ;;      Params:         4       0       0       0       0       0       0
  1220 ;;      Locals:         4       0       0       0       0       0       0
  1221 ;;      Temps:          1       0       0       0       0       0       0
  1222 ;;      Totals:         9       0       0       0       0       0       0
  1223 ;;Total ram usage:        9 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_start_func
  1229 ;;		_data
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text6
  1234   000A30                     __ptext6:
  1235                           	callstack 0
  1236   000A30                     _delay:
  1237                           	callstack 29
  1238   000A30                     
  1239                           ;keypad_func.c: 11: void delay(long j);keypad_func.c: 12: {;keypad_func.c: 13:     for(l
      +                          ong i=0;i<=j;i++);
  1240   000A30  0E00               	movlw	0
  1241   000A32  6E06               	movwf	delay@i^0,c
  1242   000A34  0E00               	movlw	0
  1243   000A36  6E07               	movwf	(delay@i+1)^0,c
  1244   000A38  0E00               	movlw	0
  1245   000A3A  6E08               	movwf	(delay@i+2)^0,c
  1246   000A3C  0E00               	movlw	0
  1247   000A3E  6E09               	movwf	(delay@i+3)^0,c
  1248   000A40  EF28  F005         	goto	l33
  1249   000A44                     l1019:
  1250   000A44  0E01               	movlw	1
  1251   000A46  2606               	addwf	delay@i^0,f,c
  1252   000A48  0E00               	movlw	0
  1253   000A4A  2207               	addwfc	(delay@i+1)^0,f,c
  1254   000A4C  2208               	addwfc	(delay@i+2)^0,f,c
  1255   000A4E  2209               	addwfc	(delay@i+3)^0,f,c
  1256   000A50                     l33:
  1257   000A50  5006               	movf	delay@i^0,w,c
  1258   000A52  5C01               	subwf	delay@j^0,w,c
  1259   000A54  5007               	movf	(delay@i+1)^0,w,c
  1260   000A56  5802               	subwfb	(delay@j+1)^0,w,c
  1261   000A58  5008               	movf	(delay@i+2)^0,w,c
  1262   000A5A  5803               	subwfb	(delay@j+2)^0,w,c
  1263   000A5C  5004               	movf	(delay@j+3)^0,w,c
  1264   000A5E  0A80               	xorlw	128
  1265   000A60  6E05               	movwf	??_delay^0,c
  1266   000A62  5009               	movf	(delay@i+3)^0,w,c
  1267   000A64  0A80               	xorlw	128
  1268   000A66  5805               	subwfb	??_delay^0,w,c
  1269   000A68  B0D8               	btfsc	status,0,c
  1270   000A6A  EF39  F005         	goto	u311
  1271   000A6E  EF3B  F005         	goto	u310
  1272   000A72                     u311:
  1273   000A72  EF22  F005         	goto	l1019
  1274   000A76                     u310:
  1275   000A76  0012               	return		;funcret
  1276   000A78                     __end_of_delay:
  1277                           	callstack 0
  1278                           
  1279                           	psect	rparam
  1280   000000                     tosu	equ	0xFFF
  1281                           tosh	equ	0xFFE
  1282                           tosl	equ	0xFFD
  1283                           stkptr	equ	0xFFC
  1284                           pclatu	equ	0xFFB
  1285                           pclath	equ	0xFFA
  1286                           pcl	equ	0xFF9
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           prodh	equ	0xFF4
  1292                           prodl	equ	0xFF3
  1293                           indf0	equ	0xFEF
  1294                           postinc0	equ	0xFEE
  1295                           postdec0	equ	0xFED
  1296                           preinc0	equ	0xFEC
  1297                           plusw0	equ	0xFEB
  1298                           fsr0h	equ	0xFEA
  1299                           fsr0l	equ	0xFE9
  1300                           wreg	equ	0xFE8
  1301                           indf1	equ	0xFE7
  1302                           postinc1	equ	0xFE6
  1303                           postdec1	equ	0xFE5
  1304                           preinc1	equ	0xFE4
  1305                           plusw1	equ	0xFE3
  1306                           fsr1h	equ	0xFE2
  1307                           fsr1l	equ	0xFE1
  1308                           bsr	equ	0xFE0
  1309                           indf2	equ	0xFDF
  1310                           postinc2	equ	0xFDE
  1311                           postdec2	equ	0xFDD
  1312                           preinc2	equ	0xFDC
  1313                           plusw2	equ	0xFDB
  1314                           fsr2h	equ	0xFDA
  1315                           fsr2l	equ	0xFD9
  1316                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      38
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[17]), STR_3(CODE[15]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> inp(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> pass(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _start_func->_delay
    _display->_data
    _data->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    1837
                                             11 COMRAM    16    16      0
                               _data
                            _display
                             _keypad
                         _start_func
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     264
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _start_func                                           1     1      0     372
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _keypad                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     645
                                             10 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 1     1      0     372
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                9     5      4     350
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _data
     _delay
   _display
     _data
   _keypad
   _start_func
     _delay
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRl         281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      26       1       40.0%
BITBIGSFRhh         3E      0       0      16        0.0%
BITBIGSFRhlh        2B      0       0      17        0.0%
BITBIGSFRhll         F      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      26      20        0.0%
DATA                 0      0      26       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 12 17:46:36 2024

                     l33 0A50                       l42 0AE6                       l51 081C  
                     l36 0A76                       l52 083A                       l61 08C0  
                     l53 09D0                       l70 0946                       l62 08F4  
                     l54 0854                       l63 08DA                       l39 0AAE  
                     l48 0B42                       l56 086E                       l73 097E  
                     l74 0998                       l66 0912                       l75 09CC  
                     l59 08A6                       l76 09B2                       l68 092C  
                     l69 0960                       l94 068C                      l791 0A2E  
                    _RC0 7C10                      _RC1 7C11                      _RC2 7C12  
                    _RB4 7C0C                      _RB5 7C0D                      _RB6 7C0E  
                    _RB7 7C0F                      u310 0A76                      u311 0A72  
                    u320 0B42                      u400 08E8                      u321 0B3E  
                    u401 08E4                      u410 0906                      u330 082E  
                    u411 0902                      u331 082A                      u420 0920  
                    u340 0848                      u500 0A0E                      u421 091C  
                    u341 0844                      u501 0A0A                      u430 093A  
                    u350 0862                      u510 069A                      u431 0936  
                    u351 085E                      u511 0696                      u440 0954  
                    u360 087C                      u600 0814                      u520 06A8  
                    u441 0950                      u361 0878                      u601 0810  
                    u521 06A4                      u450 0972                      u370 089A  
                    u530 06B6                      u451 096E                      u371 0896  
                    u531 06B2                      u460 098C                      u380 08B4  
                    u540 06C4                      u461 0988                      u381 08B0  
                    u541 06C0                      u470 09A6                      u390 08CE  
                    u550 06D6                      u471 09A2                      u391 08CA  
                    u551 06D2                      u480 09C0                      u560 06F4  
                    u481 09BC                      u561 06F0                      u490 09F8  
                    u570 0734                      u491 09F4                      u571 0730  
                    u580 0782                      u581 077E                      u590 07C6  
                    u591 07C2                      _inp 001C                     l1021 0AB2  
                   l1031 0AD2                     l1023 0AB6                     l1103 08F4  
                   l1017 0A30                     l1025 0ABA                     l1113 0920  
                   l1105 08F8                     l1041 0A98                     l1033 0A7A  
                   l1201 06F4                     l1019 0A44                     l1027 0ABC  
                   l1051 0B2A                     l1131 0964                     l1107 0906  
                   l1043 0A9A                     l1035 0A7E                     l1211 073A  
                   l1029 0AD0                     l1045 0B18                     l1133 0972  
                   l1125 0954                     l1061 0848                     l1053 081C  
                   l1037 0A82                     l1213 0742                     l1221 0786  
                   l1047 0B1C                     l1143 09A6                     l1119 093A  
                   l1055 0820                     l1039 0A84                     l1231 07CC  
                   l1207 0704                     l1049 0B28                     l1137 098C  
                   l1129 0960                     l1081 089A                     l1073 087C  
                   l1057 082E                     l1161 0A0E                     l1153 09D2  
                   l1233 07D4                     l1209 0734                     l1067 0862  
                   l1155 09D6                     l1227 0796                     l1219 0752  
                   l1171 064A                     l1149 09C0                     l1093 08CE  
                   l1077 0888                     l1157 09DA                     l1229 07C6  
                   l1181 066A                     l1173 0650                     l1165 0632  
                   l1087 08B4                     l1079 088C                     l1159 09F8  
                   l1239 07E4                     l1191 06A8                     l1175 0656  
                   l1167 0642                     l1193 06B6                     l1177 065C  
                   l1169 0644                     l1099 08E8                     l1195 06C4  
                   l1187 066E                     l1179 0664                     l1197 06C6  
                   l1189 069A                     l1199 06D6                     STR_1 0612  
                   STR_2 0601                     STR_3 0621                     _data 0AB0  
                   _main 0632                     _pass 0021                     fsr1h 0FE2  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000             ___param_bank 0000  
                  ?_data 0001                    ?_main 0001                    _PORTB 0F81  
                  _PORTC 0F82                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_display 0B44  
                  _delay 0A30                    data@a 000A                    _index 0026  
                  main@i 000C                    tablat 0FF5                    status 0FD8  
        __initialization 0AE8             __end_of_data 0AE8             __end_of_main 081C  
                 ??_data 000A                   ??_main 000C            __activetblptr 0001  
                 ?_delay 0001                   _ADCON1 0FC1                   _keypad 081C  
                 delay@i 0006                   delay@j 0001                   isa$std 0001  
                 _strcmp 09D2                ??_display 000C             __pdataCOMRAM 001C  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0B0A  
          ___rparam_used 0001           __pcstackCOMRAM 0001            __end_of_delay 0A78  
                ??_delay 0005                  ?_keypad 0001                  ?_strcmp 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0AE8                  __ramtop 0600                  __ptext0 0632  
                __ptext1 09D2                  __ptext2 0A78                  __ptext3 081C  
                __ptext4 0B18                  __ptext5 0AB0                  __ptext6 0A30  
                _display 0B18     end_of_initialization 0B0A                  postdec1 0FE5  
                postinc0 0FEE                  postinc1 0FE6                  postinc2 0FDE  
                strcmp@l 0001                  strcmp@r 0002               _start_func 0A78  
          __pidataCOMRAM 0B44           __end_of_keypad 09D2           __end_of_strcmp 0A30  
    start_initialization 0AE8                 ??_keypad 0003              start_func@a 000A  
               ??_strcmp 0003              __pbssCOMRAM 0026              ?_start_func 0001  
               ?_display 000B              __smallconst 0600                copy_data0 0AFC  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
               isa$xinst 0000                 main@i_70 0010                 main@i_71 0014  
               main@i_73 0018                 display@p 000B             ??_start_func 000A  
     __end_of_start_func 0AB0  
