

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 29 10:34:25 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4580 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _PORTC	set	3970
    48   000000                     _TRISC	set	3988
    49   000000                     _TRISD	set	3989
    50   000000                     _PORTD	set	3971
    51                           
    52                           ; #config settings
    53                           
    54                           	psect	cinit
    55   000986                     __pcinit:
    56                           	callstack 0
    57   000986                     start_initialization:
    58                           	callstack 0
    59   000986                     __initialization:
    60                           	callstack 0
    61   000986                     end_of_initialization:
    62                           	callstack 0
    63   000986                     __end_of__initialization:
    64                           	callstack 0
    65   000986  0100               	movlb	0
    66   000988  EF01  F003         	goto	_main	;jump to C main() function
    67                           
    68                           	psect	cstackCOMRAM
    69   000001                     __pcstackCOMRAM:
    70                           	callstack 0
    71   000001                     ?___aldiv:
    72                           	callstack 0
    73   000001                     ___aldiv@dividend:
    74                           	callstack 0
    75                           
    76                           ; 4 bytes @ 0x0
    77   000001                     	ds	4
    78   000005                     ___aldiv@divisor:
    79                           	callstack 0
    80                           
    81                           ; 4 bytes @ 0x4
    82   000005                     	ds	4
    83   000009                     ___aldiv@counter:
    84                           	callstack 0
    85                           
    86                           ; 1 bytes @ 0x8
    87   000009                     	ds	1
    88   00000A                     ___aldiv@sign:
    89                           	callstack 0
    90                           
    91                           ; 1 bytes @ 0x9
    92   00000A                     	ds	1
    93   00000B                     ___aldiv@quotient:
    94                           	callstack 0
    95                           
    96                           ; 4 bytes @ 0xA
    97   00000B                     	ds	4
    98   00000F                     ??_main:
    99                           
   100                           ; 1 bytes @ 0xE
   101   00000F                     	ds	4
   102   000013                     main@i:
   103                           	callstack 0
   104                           
   105                           ; 4 bytes @ 0x12
   106   000013                     	ds	4
   107   000017                     main@i_36:
   108                           	callstack 0
   109                           
   110                           ; 4 bytes @ 0x16
   111   000017                     	ds	4
   112   00001B                     main@i_38:
   113                           	callstack 0
   114                           
   115                           ; 4 bytes @ 0x1A
   116   00001B                     	ds	4
   117   00001F                     main@i_40:
   118                           	callstack 0
   119                           
   120                           ; 4 bytes @ 0x1E
   121   00001F                     	ds	4
   122   000023                     main@j:
   123                           	callstack 0
   124                           
   125                           ; 4 bytes @ 0x22
   126   000023                     	ds	4
   127   000027                     main@k:
   128                           	callstack 0
   129                           
   130                           ; 4 bytes @ 0x26
   131   000027                     	ds	4
   132   00002B                     main@k_37:
   133                           	callstack 0
   134                           
   135                           ; 4 bytes @ 0x2A
   136   00002B                     	ds	4
   137   00002F                     main@j_39:
   138                           	callstack 0
   139                           
   140                           ; 4 bytes @ 0x2E
   141   00002F                     	ds	4
   142                           
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 3 in file "Battery_Indication.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;  i               4   30[COMRAM] unsigned long 
   153 ;;  i               4   26[COMRAM] unsigned long 
   154 ;;  i               4   22[COMRAM] unsigned long 
   155 ;;  i               4   18[COMRAM] unsigned long 
   156 ;;  j               4   46[COMRAM] long 
   157 ;;  k               4   42[COMRAM] long 
   158 ;;  k               4   38[COMRAM] long 
   159 ;;  j               4   34[COMRAM] long 
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, status,2, status,0, cstack
   164 ;; Tracked objects:
   165 ;;		On entry : 0/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   169 ;;      Params:         0       0       0       0       0       0       0
   170 ;;      Locals:        32       0       0       0       0       0       0
   171 ;;      Temps:          4       0       0       0       0       0       0
   172 ;;      Totals:        36       0       0       0       0       0       0
   173 ;;Total ram usage:       36 bytes
   174 ;; Hardware stack levels required when called: 1
   175 ;; This function calls:
   176 ;;		___aldiv
   177 ;; This function is called by:
   178 ;;		Startup code after reset
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           	psect	text0
   183   000602                     __ptext0:
   184                           	callstack 0
   185   000602                     _main:
   186                           	callstack 30
   187   000602                     
   188                           ;Battery_Indication.c: 5:     TRISC=0x00;
   189   000602  0E00               	movlw	0
   190   000604  6E94               	movwf	148,c	;volatile
   191                           
   192                           ;Battery_Indication.c: 6:     TRISD=0x00;
   193   000606  0E00               	movlw	0
   194   000608  6E95               	movwf	149,c	;volatile
   195   00060A                     l13:
   196                           
   197                           ;Battery_Indication.c: 8:     {;Battery_Indication.c: 9:         for(long j=1;j<=255;j=(
      +                          (j*2)+1))
   198   00060A  0E01               	movlw	1
   199   00060C  6E23               	movwf	main@j^0,c
   200   00060E  0E00               	movlw	0
   201   000610  6E24               	movwf	(main@j+1)^0,c
   202   000612  0E00               	movlw	0
   203   000614  6E25               	movwf	(main@j+2)^0,c
   204   000616  0E00               	movlw	0
   205   000618  6E26               	movwf	(main@j+3)^0,c
   206   00061A                     l14:
   207                           
   208                           ;Battery_Indication.c: 10:         {;Battery_Indication.c: 11:             PORTC=j;
   209   00061A  C023  FF82         	movff	main@j,3970	;volatile
   210   00061E                     
   211                           ;Battery_Indication.c: 12:             for(unsigned long i=0;i<30000;i++);
   212   00061E  0E00               	movlw	0
   213   000620  6E13               	movwf	main@i^0,c
   214   000622  0E00               	movlw	0
   215   000624  6E14               	movwf	(main@i+1)^0,c
   216   000626  0E00               	movlw	0
   217   000628  6E15               	movwf	(main@i+2)^0,c
   218   00062A  0E00               	movlw	0
   219   00062C  6E16               	movwf	(main@i+3)^0,c
   220   00062E                     l878:
   221   00062E  0E01               	movlw	1
   222   000630  2613               	addwf	main@i^0,f,c
   223   000632  0E00               	movlw	0
   224   000634  2214               	addwfc	(main@i+1)^0,f,c
   225   000636  2215               	addwfc	(main@i+2)^0,f,c
   226   000638  2216               	addwfc	(main@i+3)^0,f,c
   227   00063A  5016               	movf	(main@i+3)^0,w,c
   228   00063C  1015               	iorwf	(main@i+2)^0,w,c
   229   00063E  E10B               	bnz	u210
   230   000640  0E30               	movlw	48
   231   000642  5C13               	subwf	main@i^0,w,c
   232   000644  0E75               	movlw	117
   233   000646  5814               	subwfb	(main@i+1)^0,w,c
   234   000648  A0D8               	btfss	status,0,c
   235   00064A  EF29  F003         	goto	u211
   236   00064E  EF2B  F003         	goto	u210
   237   000652                     u211:
   238   000652  EF17  F003         	goto	l878
   239   000656                     u210:
   240   000656                     
   241                           ;Battery_Indication.c: 13:         }
   242   000656  90D8               	bcf	status,0,c
   243   000658  3423               	rlcf	main@j^0,w,c
   244   00065A  6E0F               	movwf	??_main^0,c
   245   00065C  3424               	rlcf	(main@j+1)^0,w,c
   246   00065E  6E10               	movwf	(??_main+1)^0,c
   247   000660  3425               	rlcf	(main@j+2)^0,w,c
   248   000662  6E11               	movwf	(??_main+2)^0,c
   249   000664  3426               	rlcf	(main@j+3)^0,w,c
   250   000666  6E12               	movwf	(??_main+3)^0,c
   251   000668  0E01               	movlw	1
   252   00066A  240F               	addwf	??_main^0,w,c
   253   00066C  6E23               	movwf	main@j^0,c
   254   00066E  0E00               	movlw	0
   255   000670  2010               	addwfc	(??_main+1)^0,w,c
   256   000672  6E24               	movwf	(main@j+1)^0,c
   257   000674  0E00               	movlw	0
   258   000676  2011               	addwfc	(??_main+2)^0,w,c
   259   000678  6E25               	movwf	(main@j+2)^0,c
   260   00067A  0E00               	movlw	0
   261   00067C  2012               	addwfc	(??_main+3)^0,w,c
   262   00067E  6E26               	movwf	(main@j+3)^0,c
   263   000680  BE26               	btfsc	(main@j+3)^0,7,c
   264   000682  EF4C  F003         	goto	u221
   265   000686  5026               	movf	(main@j+3)^0,w,c
   266   000688  1025               	iorwf	(main@j+2)^0,w,c
   267   00068A  E108               	bnz	u220
   268   00068C  0424               	decf	(main@j+1)^0,w,c
   269   00068E  A0D8               	btfss	status,0,c
   270   000690  EF4C  F003         	goto	u221
   271   000694  EF4E  F003         	goto	u220
   272   000698                     u221:
   273   000698  EF0D  F003         	goto	l14
   274   00069C                     u220:
   275   00069C                     
   276                           ;Battery_Indication.c: 14:         for(long k=1;k<=255;k=((k*2)+1))
   277   00069C  0E01               	movlw	1
   278   00069E  6E27               	movwf	main@k^0,c
   279   0006A0  0E00               	movlw	0
   280   0006A2  6E28               	movwf	(main@k+1)^0,c
   281   0006A4  0E00               	movlw	0
   282   0006A6  6E29               	movwf	(main@k+2)^0,c
   283   0006A8  0E00               	movlw	0
   284   0006AA  6E2A               	movwf	(main@k+3)^0,c
   285   0006AC                     l18:
   286                           
   287                           ;Battery_Indication.c: 15:             {;Battery_Indication.c: 16:                 PORTD
      +                          =k;
   288   0006AC  C027  FF83         	movff	main@k,3971	;volatile
   289   0006B0                     
   290                           ;Battery_Indication.c: 17:                 for(unsigned long i=0;i<30000;i++);
   291   0006B0  0E00               	movlw	0
   292   0006B2  6E17               	movwf	main@i_36^0,c
   293   0006B4  0E00               	movlw	0
   294   0006B6  6E18               	movwf	(main@i_36+1)^0,c
   295   0006B8  0E00               	movlw	0
   296   0006BA  6E19               	movwf	(main@i_36+2)^0,c
   297   0006BC  0E00               	movlw	0
   298   0006BE  6E1A               	movwf	(main@i_36+3)^0,c
   299   0006C0                     l894:
   300   0006C0  0E01               	movlw	1
   301   0006C2  2617               	addwf	main@i_36^0,f,c
   302   0006C4  0E00               	movlw	0
   303   0006C6  2218               	addwfc	(main@i_36+1)^0,f,c
   304   0006C8  2219               	addwfc	(main@i_36+2)^0,f,c
   305   0006CA  221A               	addwfc	(main@i_36+3)^0,f,c
   306   0006CC  501A               	movf	(main@i_36+3)^0,w,c
   307   0006CE  1019               	iorwf	(main@i_36+2)^0,w,c
   308   0006D0  E10B               	bnz	u230
   309   0006D2  0E30               	movlw	48
   310   0006D4  5C17               	subwf	main@i_36^0,w,c
   311   0006D6  0E75               	movlw	117
   312   0006D8  5818               	subwfb	(main@i_36+1)^0,w,c
   313   0006DA  A0D8               	btfss	status,0,c
   314   0006DC  EF72  F003         	goto	u231
   315   0006E0  EF74  F003         	goto	u230
   316   0006E4                     u231:
   317   0006E4  EF60  F003         	goto	l894
   318   0006E8                     u230:
   319   0006E8                     
   320                           ;Battery_Indication.c: 18:             }
   321   0006E8  90D8               	bcf	status,0,c
   322   0006EA  3427               	rlcf	main@k^0,w,c
   323   0006EC  6E0F               	movwf	??_main^0,c
   324   0006EE  3428               	rlcf	(main@k+1)^0,w,c
   325   0006F0  6E10               	movwf	(??_main+1)^0,c
   326   0006F2  3429               	rlcf	(main@k+2)^0,w,c
   327   0006F4  6E11               	movwf	(??_main+2)^0,c
   328   0006F6  342A               	rlcf	(main@k+3)^0,w,c
   329   0006F8  6E12               	movwf	(??_main+3)^0,c
   330   0006FA  0E01               	movlw	1
   331   0006FC  240F               	addwf	??_main^0,w,c
   332   0006FE  6E27               	movwf	main@k^0,c
   333   000700  0E00               	movlw	0
   334   000702  2010               	addwfc	(??_main+1)^0,w,c
   335   000704  6E28               	movwf	(main@k+1)^0,c
   336   000706  0E00               	movlw	0
   337   000708  2011               	addwfc	(??_main+2)^0,w,c
   338   00070A  6E29               	movwf	(main@k+2)^0,c
   339   00070C  0E00               	movlw	0
   340   00070E  2012               	addwfc	(??_main+3)^0,w,c
   341   000710  6E2A               	movwf	(main@k+3)^0,c
   342   000712  BE2A               	btfsc	(main@k+3)^0,7,c
   343   000714  EF95  F003         	goto	u241
   344   000718  502A               	movf	(main@k+3)^0,w,c
   345   00071A  1029               	iorwf	(main@k+2)^0,w,c
   346   00071C  E108               	bnz	u240
   347   00071E  0428               	decf	(main@k+1)^0,w,c
   348   000720  A0D8               	btfss	status,0,c
   349   000722  EF95  F003         	goto	u241
   350   000726  EF97  F003         	goto	u240
   351   00072A                     u241:
   352   00072A  EF56  F003         	goto	l18
   353   00072E                     u240:
   354   00072E                     
   355                           ;Battery_Indication.c: 19:         PORTD=0x00;
   356   00072E  0E00               	movlw	0
   357   000730  6E83               	movwf	131,c	;volatile
   358                           
   359                           ;Battery_Indication.c: 20:         for(long k=255;k>0;k=k/2)
   360   000732  0EFF               	movlw	255
   361   000734  6E2B               	movwf	main@k_37^0,c
   362   000736  0E00               	movlw	0
   363   000738  6E2C               	movwf	(main@k_37+1)^0,c
   364   00073A  0E00               	movlw	0
   365   00073C  6E2D               	movwf	(main@k_37+2)^0,c
   366   00073E  0E00               	movlw	0
   367   000740  6E2E               	movwf	(main@k_37+3)^0,c
   368   000742                     l22:
   369                           
   370                           ;Battery_Indication.c: 21:             {;Battery_Indication.c: 22:                 PORTD
      +                          =k;
   371   000742  C02B  FF83         	movff	main@k_37,3971	;volatile
   372   000746                     
   373                           ;Battery_Indication.c: 23:                 for(unsigned long i=0;i<30000;i++);
   374   000746  0E00               	movlw	0
   375   000748  6E1B               	movwf	main@i_38^0,c
   376   00074A  0E00               	movlw	0
   377   00074C  6E1C               	movwf	(main@i_38+1)^0,c
   378   00074E  0E00               	movlw	0
   379   000750  6E1D               	movwf	(main@i_38+2)^0,c
   380   000752  0E00               	movlw	0
   381   000754  6E1E               	movwf	(main@i_38+3)^0,c
   382   000756                     l910:
   383   000756  0E01               	movlw	1
   384   000758  261B               	addwf	main@i_38^0,f,c
   385   00075A  0E00               	movlw	0
   386   00075C  221C               	addwfc	(main@i_38+1)^0,f,c
   387   00075E  221D               	addwfc	(main@i_38+2)^0,f,c
   388   000760  221E               	addwfc	(main@i_38+3)^0,f,c
   389   000762  501E               	movf	(main@i_38+3)^0,w,c
   390   000764  101D               	iorwf	(main@i_38+2)^0,w,c
   391   000766  E10B               	bnz	u250
   392   000768  0E30               	movlw	48
   393   00076A  5C1B               	subwf	main@i_38^0,w,c
   394   00076C  0E75               	movlw	117
   395   00076E  581C               	subwfb	(main@i_38+1)^0,w,c
   396   000770  A0D8               	btfss	status,0,c
   397   000772  EFBD  F003         	goto	u251
   398   000776  EFBF  F003         	goto	u250
   399   00077A                     u251:
   400   00077A  EFAB  F003         	goto	l910
   401   00077E                     u250:
   402   00077E                     
   403                           ;Battery_Indication.c: 24:             }
   404   00077E  C02B  F001         	movff	main@k_37,___aldiv@dividend
   405   000782  C02C  F002         	movff	main@k_37+1,___aldiv@dividend+1
   406   000786  C02D  F003         	movff	main@k_37+2,___aldiv@dividend+2
   407   00078A  C02E  F004         	movff	main@k_37+3,___aldiv@dividend+3
   408   00078E  0E02               	movlw	2
   409   000790  6E05               	movwf	___aldiv@divisor^0,c
   410   000792  0E00               	movlw	0
   411   000794  6E06               	movwf	(___aldiv@divisor+1)^0,c
   412   000796  0E00               	movlw	0
   413   000798  6E07               	movwf	(___aldiv@divisor+2)^0,c
   414   00079A  0E00               	movlw	0
   415   00079C  6E08               	movwf	(___aldiv@divisor+3)^0,c
   416   00079E  EC3D  F004         	call	___aldiv	;wreg free
   417   0007A2  C001  F02B         	movff	?___aldiv,main@k_37
   418   0007A6  C002  F02C         	movff	?___aldiv+1,main@k_37+1
   419   0007AA  C003  F02D         	movff	?___aldiv+2,main@k_37+2
   420   0007AE  C004  F02E         	movff	?___aldiv+3,main@k_37+3
   421   0007B2  BE2E               	btfsc	(main@k_37+3)^0,7,c
   422   0007B4  EFE8  F003         	goto	u260
   423   0007B8  502E               	movf	(main@k_37+3)^0,w,c
   424   0007BA  102D               	iorwf	(main@k_37+2)^0,w,c
   425   0007BC  102C               	iorwf	(main@k_37+1)^0,w,c
   426   0007BE  E106               	bnz	u261
   427   0007C0  042B               	decf	main@k_37^0,w,c
   428   0007C2  B0D8               	btfsc	status,0,c
   429   0007C4  EFE6  F003         	goto	u261
   430   0007C8  EFE8  F003         	goto	u260
   431   0007CC                     u261:
   432   0007CC  EFA1  F003         	goto	l22
   433   0007D0                     u260:
   434   0007D0                     
   435                           ;Battery_Indication.c: 25:         for(long j=255;j>0;j=j/2)
   436   0007D0  0EFF               	movlw	255
   437   0007D2  6E2F               	movwf	main@j_39^0,c
   438   0007D4  0E00               	movlw	0
   439   0007D6  6E30               	movwf	(main@j_39+1)^0,c
   440   0007D8  0E00               	movlw	0
   441   0007DA  6E31               	movwf	(main@j_39+2)^0,c
   442   0007DC  0E00               	movlw	0
   443   0007DE  6E32               	movwf	(main@j_39+3)^0,c
   444   0007E0                     l26:
   445                           
   446                           ;Battery_Indication.c: 26:         {;Battery_Indication.c: 27:             PORTC=j;
   447   0007E0  C02F  FF82         	movff	main@j_39,3970	;volatile
   448   0007E4                     
   449                           ;Battery_Indication.c: 28:             for(unsigned long i=0;i<30000;i++);
   450   0007E4  0E00               	movlw	0
   451   0007E6  6E1F               	movwf	main@i_40^0,c
   452   0007E8  0E00               	movlw	0
   453   0007EA  6E20               	movwf	(main@i_40+1)^0,c
   454   0007EC  0E00               	movlw	0
   455   0007EE  6E21               	movwf	(main@i_40+2)^0,c
   456   0007F0  0E00               	movlw	0
   457   0007F2  6E22               	movwf	(main@i_40+3)^0,c
   458   0007F4                     l928:
   459   0007F4  0E01               	movlw	1
   460   0007F6  261F               	addwf	main@i_40^0,f,c
   461   0007F8  0E00               	movlw	0
   462   0007FA  2220               	addwfc	(main@i_40+1)^0,f,c
   463   0007FC  2221               	addwfc	(main@i_40+2)^0,f,c
   464   0007FE  2222               	addwfc	(main@i_40+3)^0,f,c
   465   000800  5022               	movf	(main@i_40+3)^0,w,c
   466   000802  1021               	iorwf	(main@i_40+2)^0,w,c
   467   000804  E10B               	bnz	u270
   468   000806  0E30               	movlw	48
   469   000808  5C1F               	subwf	main@i_40^0,w,c
   470   00080A  0E75               	movlw	117
   471   00080C  5820               	subwfb	(main@i_40+1)^0,w,c
   472   00080E  A0D8               	btfss	status,0,c
   473   000810  EF0C  F004         	goto	u271
   474   000814  EF0E  F004         	goto	u270
   475   000818                     u271:
   476   000818  EFFA  F003         	goto	l928
   477   00081C                     u270:
   478   00081C                     
   479                           ;Battery_Indication.c: 29:         }
   480   00081C  C02F  F001         	movff	main@j_39,___aldiv@dividend
   481   000820  C030  F002         	movff	main@j_39+1,___aldiv@dividend+1
   482   000824  C031  F003         	movff	main@j_39+2,___aldiv@dividend+2
   483   000828  C032  F004         	movff	main@j_39+3,___aldiv@dividend+3
   484   00082C  0E02               	movlw	2
   485   00082E  6E05               	movwf	___aldiv@divisor^0,c
   486   000830  0E00               	movlw	0
   487   000832  6E06               	movwf	(___aldiv@divisor+1)^0,c
   488   000834  0E00               	movlw	0
   489   000836  6E07               	movwf	(___aldiv@divisor+2)^0,c
   490   000838  0E00               	movlw	0
   491   00083A  6E08               	movwf	(___aldiv@divisor+3)^0,c
   492   00083C  EC3D  F004         	call	___aldiv	;wreg free
   493   000840  C001  F02F         	movff	?___aldiv,main@j_39
   494   000844  C002  F030         	movff	?___aldiv+1,main@j_39+1
   495   000848  C003  F031         	movff	?___aldiv+2,main@j_39+2
   496   00084C  C004  F032         	movff	?___aldiv+3,main@j_39+3
   497   000850  BE32               	btfsc	(main@j_39+3)^0,7,c
   498   000852  EF37  F004         	goto	u280
   499   000856  5032               	movf	(main@j_39+3)^0,w,c
   500   000858  1031               	iorwf	(main@j_39+2)^0,w,c
   501   00085A  1030               	iorwf	(main@j_39+1)^0,w,c
   502   00085C  E106               	bnz	u281
   503   00085E  042F               	decf	main@j_39^0,w,c
   504   000860  B0D8               	btfsc	status,0,c
   505   000862  EF35  F004         	goto	u281
   506   000866  EF37  F004         	goto	u280
   507   00086A                     u281:
   508   00086A  EFF0  F003         	goto	l26
   509   00086E                     u280:
   510   00086E                     
   511                           ;Battery_Indication.c: 30:         PORTC=0x00;
   512   00086E  0E00               	movlw	0
   513   000870  6E82               	movwf	130,c	;volatile
   514   000872  EF05  F003         	goto	l13
   515   000876  EF00  F000         	goto	start
   516   00087A                     __end_of_main:
   517                           	callstack 0
   518                           
   519 ;; *************** function ___aldiv *****************
   520 ;; Defined at:
   521 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  dividend        4    0[COMRAM] long 
   524 ;;  divisor         4    4[COMRAM] long 
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  quotient        4   10[COMRAM] long 
   527 ;;  sign            1    9[COMRAM] unsigned char 
   528 ;;  counter         1    8[COMRAM] unsigned char 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  4    0[COMRAM] long 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   538 ;;      Params:         8       0       0       0       0       0       0
   539 ;;      Locals:         6       0       0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0
   541 ;;      Totals:        14       0       0       0       0       0       0
   542 ;;Total ram usage:       14 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text1
   552   00087A                     __ptext1:
   553                           	callstack 0
   554   00087A                     ___aldiv:
   555                           	callstack 30
   556   00087A  0E00               	movlw	0
   557   00087C  6E0A               	movwf	___aldiv@sign^0,c
   558   00087E  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
   559   000880  EF46  F004         	goto	u150
   560   000884  EF44  F004         	goto	u151
   561   000888                     u151:
   562   000888  EF50  F004         	goto	l830
   563   00088C                     u150:
   564   00088C  1E08               	comf	(___aldiv@divisor+3)^0,f,c
   565   00088E  1E07               	comf	(___aldiv@divisor+2)^0,f,c
   566   000890  1E06               	comf	(___aldiv@divisor+1)^0,f,c
   567   000892  6C05               	negf	___aldiv@divisor^0,c
   568   000894  0E00               	movlw	0
   569   000896  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
   570   000898  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
   571   00089A  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
   572   00089C  0E01               	movlw	1
   573   00089E  6E0A               	movwf	___aldiv@sign^0,c
   574   0008A0                     l830:
   575   0008A0  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
   576   0008A2  EF57  F004         	goto	u160
   577   0008A6  EF55  F004         	goto	u161
   578   0008AA                     u161:
   579   0008AA  EF61  F004         	goto	l836
   580   0008AE                     u160:
   581   0008AE  1E04               	comf	(___aldiv@dividend+3)^0,f,c
   582   0008B0  1E03               	comf	(___aldiv@dividend+2)^0,f,c
   583   0008B2  1E02               	comf	(___aldiv@dividend+1)^0,f,c
   584   0008B4  6C01               	negf	___aldiv@dividend^0,c
   585   0008B6  0E00               	movlw	0
   586   0008B8  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
   587   0008BA  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
   588   0008BC  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
   589   0008BE  0E01               	movlw	1
   590   0008C0  1A0A               	xorwf	___aldiv@sign^0,f,c
   591   0008C2                     l836:
   592   0008C2  0E00               	movlw	0
   593   0008C4  6E0B               	movwf	___aldiv@quotient^0,c
   594   0008C6  0E00               	movlw	0
   595   0008C8  6E0C               	movwf	(___aldiv@quotient+1)^0,c
   596   0008CA  0E00               	movlw	0
   597   0008CC  6E0D               	movwf	(___aldiv@quotient+2)^0,c
   598   0008CE  0E00               	movlw	0
   599   0008D0  6E0E               	movwf	(___aldiv@quotient+3)^0,c
   600   0008D2  5005               	movf	___aldiv@divisor^0,w,c
   601   0008D4  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
   602   0008D6  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
   603   0008D8  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
   604   0008DA  B4D8               	btfsc	status,2,c
   605   0008DC  EF72  F004         	goto	u171
   606   0008E0  EF74  F004         	goto	u170
   607   0008E4                     u171:
   608   0008E4  EFAA  F004         	goto	l858
   609   0008E8                     u170:
   610   0008E8  0E01               	movlw	1
   611   0008EA  6E09               	movwf	___aldiv@counter^0,c
   612   0008EC  EF7E  F004         	goto	l844
   613   0008F0                     l842:
   614   0008F0  90D8               	bcf	status,0,c
   615   0008F2  3605               	rlcf	___aldiv@divisor^0,f,c
   616   0008F4  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
   617   0008F6  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
   618   0008F8  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
   619   0008FA  2A09               	incf	___aldiv@counter^0,f,c
   620   0008FC                     l844:
   621   0008FC  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
   622   0008FE  EF83  F004         	goto	u181
   623   000902  EF85  F004         	goto	u180
   624   000906                     u181:
   625   000906  EF78  F004         	goto	l842
   626   00090A                     u180:
   627   00090A                     l846:
   628   00090A  90D8               	bcf	status,0,c
   629   00090C  360B               	rlcf	___aldiv@quotient^0,f,c
   630   00090E  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
   631   000910  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
   632   000912  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
   633   000914  5005               	movf	___aldiv@divisor^0,w,c
   634   000916  5C01               	subwf	___aldiv@dividend^0,w,c
   635   000918  5006               	movf	(___aldiv@divisor+1)^0,w,c
   636   00091A  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
   637   00091C  5007               	movf	(___aldiv@divisor+2)^0,w,c
   638   00091E  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
   639   000920  5008               	movf	(___aldiv@divisor+3)^0,w,c
   640   000922  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
   641   000924  A0D8               	btfss	status,0,c
   642   000926  EF97  F004         	goto	u191
   643   00092A  EF99  F004         	goto	u190
   644   00092E                     u191:
   645   00092E  EFA2  F004         	goto	l854
   646   000932                     u190:
   647   000932  5005               	movf	___aldiv@divisor^0,w,c
   648   000934  5E01               	subwf	___aldiv@dividend^0,f,c
   649   000936  5006               	movf	(___aldiv@divisor+1)^0,w,c
   650   000938  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
   651   00093A  5007               	movf	(___aldiv@divisor+2)^0,w,c
   652   00093C  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
   653   00093E  5008               	movf	(___aldiv@divisor+3)^0,w,c
   654   000940  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
   655   000942  800B               	bsf	___aldiv@quotient^0,0,c
   656   000944                     l854:
   657   000944  90D8               	bcf	status,0,c
   658   000946  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
   659   000948  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
   660   00094A  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
   661   00094C  3205               	rrcf	___aldiv@divisor^0,f,c
   662   00094E  2E09               	decfsz	___aldiv@counter^0,f,c
   663   000950  EF85  F004         	goto	l846
   664   000954                     l858:
   665   000954  500A               	movf	___aldiv@sign^0,w,c
   666   000956  B4D8               	btfsc	status,2,c
   667   000958  EFB0  F004         	goto	u201
   668   00095C  EFB2  F004         	goto	u200
   669   000960                     u201:
   670   000960  EFBA  F004         	goto	l862
   671   000964                     u200:
   672   000964  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
   673   000966  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
   674   000968  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
   675   00096A  6C0B               	negf	___aldiv@quotient^0,c
   676   00096C  0E00               	movlw	0
   677   00096E  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
   678   000970  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
   679   000972  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
   680   000974                     l862:
   681   000974  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   682   000978  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   683   00097C  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   684   000980  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   685   000984  0012               	return		;funcret
   686   000986                     __end_of___aldiv:
   687                           	callstack 0
   688                           
   689                           	psect	smallconst
   690   000600                     __psmallconst:
   691                           	callstack 0
   692   000600  00                 	db	0
   693   000601  00                 	db	0	; dummy byte at the end
   694   000000                     
   695                           	psect	rparam
   696   000000                     tosu	equ	0xFFF
   697                           tosh	equ	0xFFE
   698                           tosl	equ	0xFFD
   699                           stkptr	equ	0xFFC
   700                           pclatu	equ	0xFFB
   701                           pclath	equ	0xFFA
   702                           pcl	equ	0xFF9
   703                           tblptru	equ	0xFF8
   704                           tblptrh	equ	0xFF7
   705                           tblptrl	equ	0xFF6
   706                           tablat	equ	0xFF5
   707                           prodh	equ	0xFF4
   708                           prodl	equ	0xFF3
   709                           indf0	equ	0xFEF
   710                           postinc0	equ	0xFEE
   711                           postdec0	equ	0xFED
   712                           preinc0	equ	0xFEC
   713                           plusw0	equ	0xFEB
   714                           fsr0h	equ	0xFEA
   715                           fsr0l	equ	0xFE9
   716                           wreg	equ	0xFE8
   717                           indf1	equ	0xFE7
   718                           postinc1	equ	0xFE6
   719                           postdec1	equ	0xFE5
   720                           preinc1	equ	0xFE4
   721                           plusw1	equ	0xFE3
   722                           fsr1h	equ	0xFE2
   723                           fsr1l	equ	0xFE1
   724                           bsr	equ	0xFE0
   725                           indf2	equ	0xFDF
   726                           postinc2	equ	0xFDE
   727                           postdec2	equ	0xFDD
   728                           preinc2	equ	0xFDC
   729                           plusw2	equ	0xFDB
   730                           fsr2h	equ	0xFDA
   731                           fsr2l	equ	0xFD9
   732                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0    1148
                                             14 COMRAM    36    36      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     32      32       1       52.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 29 10:34:25 2024

                     l13 060A                       l22 0742                       l14 061A  
                     l26 07E0                       l18 06AC                      l114 0984  
                    l830 08A0                      l822 087A                      l910 0756  
                    l840 08E8                      l832 08AE                      l824 087E  
                    l912 077E                      l904 0746                      l850 0932  
                    l842 08F0                      l834 08BE                      l826 088C  
                    l930 081C                      l922 07E4                      l914 07B2  
                    l860 0964                      l852 0942                      l844 08FC  
                    l836 08C2                      l828 089C                      l932 0850  
                    l916 07D0                      l862 0974                      l854 0944  
                    l846 090A                      l838 08D2                      l934 086E  
                    l856 094E                      l848 0914                      l928 07F4  
                    l880 0656                      l872 061E                      l858 0954  
                    l882 069C                      l866 0602                      l894 06C0  
                    l878 062E                      l896 06E8                      l888 06B0  
                    l898 072E                      u200 0964                      u201 0960  
                    u210 0656                      u211 0652                      u220 069C  
                    u221 0698                      u150 088C                      u230 06E8  
                    u151 0888                      u231 06E4                      u160 08AE  
                    u240 072E                      u161 08AA                      u241 072A  
                    u170 08E8                      u250 077E                      u171 08E4  
                    u251 077A                      u180 090A                      u260 07D0  
                    u181 0906                      u261 07CC                      u190 0932  
                    u270 081C                      u191 092E                      u271 0818  
                    u280 086E                      u281 086A                     _main 0602  
                   start 0000             ___param_bank 0000          __end_of___aldiv 0986  
                  ?_main 0001                    _PORTC 0F82                    _PORTD 0F83  
                  _TRISC 0F94                    _TRISD 0F95                    main@i 0013  
                  main@j 0023                    main@k 0027                    status 0FD8  
        __initialization 0986             __end_of_main 087A                   ??_main 000F  
          __activetblptr 0000                ??___aldiv 0009                   isa$std 0001  
           __mediumconst 0000               __accesstop 0060  __end_of__initialization 0986  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  ___aldiv 087A             __psmallconst 0600  
                __pcinit 0986                  __ramtop 0600                  __ptext0 0602  
                __ptext1 087A         ___aldiv@dividend 0001     end_of_initialization 0986  
       ___aldiv@quotient 000B      start_initialization 0986                 ?___aldiv 0001  
            __smallconst 0600          ___aldiv@divisor 0005          ___aldiv@counter 0009  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
               main@i_40 001F                 main@i_36 0017                 main@i_38 001B  
               main@j_39 002F                 main@k_37 002B             ___aldiv@sign 000A  
