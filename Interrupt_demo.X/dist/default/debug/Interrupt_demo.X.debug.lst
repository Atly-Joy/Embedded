

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 22 09:12:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4580 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _PORTC	set	3970
    51   000000                     _INT0IF	set	32657
    52   000000                     _RC2	set	31762
    53   000000                     _RC1	set	31761
    54   000000                     _RC0	set	31760
    55   000000                     _TRISB	set	3987
    56   000000                     _TRISC	set	3988
    57   000000                     _PORTD	set	3971
    58   000000                     _INTCON	set	4082
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63   00071A                     __pcinit:
    64                           	callstack 0
    65   00071A                     start_initialization:
    66                           	callstack 0
    67   00071A                     __initialization:
    68                           	callstack 0
    69   00071A                     end_of_initialization:
    70                           	callstack 0
    71   00071A                     __end_of__initialization:
    72                           	callstack 0
    73   00071A  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    74   00071C  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    75   00071E  0100               	movlb	0
    76   000720  EF6C  F003         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79   000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81   000001                     isr@i:
    82                           	callstack 0
    83                           
    84                           ; 4 bytes @ 0x0
    85   000001                     	ds	4
    86   000005                     isr@j:
    87                           	callstack 0
    88                           
    89                           ; 4 bytes @ 0x4
    90   000005                     	ds	4
    91   000009                     delay@j:
    92                           	callstack 0
    93                           
    94                           ; 4 bytes @ 0x8
    95   000009                     	ds	4
    96   00000D                     ??_delay:
    97                           
    98                           ; 1 bytes @ 0xC
    99   00000D                     	ds	1
   100   00000E                     delay@i:
   101                           	callstack 0
   102                           
   103                           ; 4 bytes @ 0xD
   104   00000E                     	ds	4
   105   000012                     
   106                           ; 1 bytes @ 0x11
   107 ;;
   108 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   109 ;;
   110 ;; *************** function _main *****************
   111 ;; Defined at:
   112 ;;		line 43 in file "Interrupt.c"
   113 ;; Parameters:    Size  Location     Type
   114 ;;		None
   115 ;; Auto vars:     Size  Location     Type
   116 ;;		None
   117 ;; Return value:  Size  Location     Type
   118 ;;                  1    wreg      void 
   119 ;; Registers used:
   120 ;;		wreg, status,2, status,0, cstack
   121 ;; Tracked objects:
   122 ;;		On entry : 0/0
   123 ;;		On exit  : 0/0
   124 ;;		Unchanged: 0/0
   125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   126 ;;      Params:         0       0       0       0       0       0       0
   127 ;;      Locals:         0       0       0       0       0       0       0
   128 ;;      Temps:          0       0       0       0       0       0       0
   129 ;;      Totals:         0       0       0       0       0       0       0
   130 ;;Total ram usage:        0 bytes
   131 ;; Hardware stack levels required when called: 2
   132 ;; This function calls:
   133 ;;		_delay
   134 ;; This function is called by:
   135 ;;		Startup code after reset
   136 ;; This function uses a non-reentrant model
   137 ;;
   138                           
   139                           	psect	text0
   140   0006D8                     __ptext0:
   141                           	callstack 0
   142   0006D8                     _main:
   143                           	callstack 29
   144   0006D8                     
   145                           ;Interrupt.c: 45:     TRISC=0x00;
   146   0006D8  0E00               	movlw	0
   147   0006DA  6E94               	movwf	148,c	;volatile
   148                           
   149                           ;Interrupt.c: 46:     TRISB=0x01;
   150   0006DC  0E01               	movlw	1
   151   0006DE  6E93               	movwf	147,c	;volatile
   152                           
   153                           ;Interrupt.c: 47:     INTCON=0xD0;
   154   0006E0  0ED0               	movlw	208
   155   0006E2  6EF2               	movwf	242,c	;volatile
   156   0006E4                     l826:
   157                           
   158                           ;Interrupt.c: 50:     {;Interrupt.c: 51:         PORTC=0xFF;
   159   0006E4  6882               	setf	130,c	;volatile
   160   0006E6                     
   161                           ;Interrupt.c: 52:         delay(1000);
   162   0006E6  0EE8               	movlw	232
   163   0006E8  6E09               	movwf	delay@j^0,c
   164   0006EA  0E03               	movlw	3
   165   0006EC  6E0A               	movwf	(delay@j+1)^0,c
   166   0006EE  0E00               	movlw	0
   167   0006F0  6E0B               	movwf	(delay@j+2)^0,c
   168   0006F2  0E00               	movlw	0
   169   0006F4  6E0C               	movwf	(delay@j+3)^0,c
   170   0006F6  EC48  F003         	call	_delay	;wreg free
   171   0006FA                     
   172                           ;Interrupt.c: 53:         PORTC=0x00;
   173   0006FA  0E00               	movlw	0
   174   0006FC  6E82               	movwf	130,c	;volatile
   175                           
   176                           ;Interrupt.c: 54:         delay(1000);
   177   0006FE  0EE8               	movlw	232
   178   000700  6E09               	movwf	delay@j^0,c
   179   000702  0E03               	movlw	3
   180   000704  6E0A               	movwf	(delay@j+1)^0,c
   181   000706  0E00               	movlw	0
   182   000708  6E0B               	movwf	(delay@j+2)^0,c
   183   00070A  0E00               	movlw	0
   184   00070C  6E0C               	movwf	(delay@j+3)^0,c
   185   00070E  EC48  F003         	call	_delay	;wreg free
   186   000712  EF72  F003         	goto	l826
   187   000716  EF07  F000         	goto	start
   188   00071A                     __end_of_main:
   189                           	callstack 0
   190                           
   191 ;; *************** function _delay *****************
   192 ;; Defined at:
   193 ;;		line 10 in file "Interrupt.c"
   194 ;; Parameters:    Size  Location     Type
   195 ;;  j               4    8[COMRAM] long 
   196 ;; Auto vars:     Size  Location     Type
   197 ;;  i               4   13[COMRAM] long 
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   207 ;;      Params:         4       0       0       0       0       0       0
   208 ;;      Locals:         4       0       0       0       0       0       0
   209 ;;      Temps:          1       0       0       0       0       0       0
   210 ;;      Totals:         9       0       0       0       0       0       0
   211 ;;Total ram usage:        9 bytes
   212 ;; Hardware stack levels used: 1
   213 ;; Hardware stack levels required when called: 1
   214 ;; This function calls:
   215 ;;		Nothing
   216 ;; This function is called by:
   217 ;;		_main
   218 ;;		_start_func
   219 ;;		_data
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           	psect	text1
   224   000690                     __ptext1:
   225                           	callstack 0
   226   000690                     _delay:
   227                           	callstack 29
   228   000690                     
   229                           ;Interrupt.c: 10: void delay(long j);Interrupt.c: 11: {;Interrupt.c: 12:     for(long i=
      +                          0;i<=j;i++);
   230   000690  0E00               	movlw	0
   231   000692  6E0E               	movwf	delay@i^0,c
   232   000694  0E00               	movlw	0
   233   000696  6E0F               	movwf	(delay@i+1)^0,c
   234   000698  0E00               	movlw	0
   235   00069A  6E10               	movwf	(delay@i+2)^0,c
   236   00069C  0E00               	movlw	0
   237   00069E  6E11               	movwf	(delay@i+3)^0,c
   238   0006A0  EF58  F003         	goto	l21
   239   0006A4                     l792:
   240   0006A4  0E01               	movlw	1
   241   0006A6  260E               	addwf	delay@i^0,f,c
   242   0006A8  0E00               	movlw	0
   243   0006AA  220F               	addwfc	(delay@i+1)^0,f,c
   244   0006AC  2210               	addwfc	(delay@i+2)^0,f,c
   245   0006AE  2211               	addwfc	(delay@i+3)^0,f,c
   246   0006B0                     l21:
   247   0006B0  500E               	movf	delay@i^0,w,c
   248   0006B2  5C09               	subwf	delay@j^0,w,c
   249   0006B4  500F               	movf	(delay@i+1)^0,w,c
   250   0006B6  580A               	subwfb	(delay@j+1)^0,w,c
   251   0006B8  5010               	movf	(delay@i+2)^0,w,c
   252   0006BA  580B               	subwfb	(delay@j+2)^0,w,c
   253   0006BC  500C               	movf	(delay@j+3)^0,w,c
   254   0006BE  0A80               	xorlw	128
   255   0006C0  6E0D               	movwf	??_delay^0,c
   256   0006C2  5011               	movf	(delay@i+3)^0,w,c
   257   0006C4  0A80               	xorlw	128
   258   0006C6  580D               	subwfb	??_delay^0,w,c
   259   0006C8  B0D8               	btfsc	status,0,c
   260   0006CA  EF69  F003         	goto	u61
   261   0006CE  EF6B  F003         	goto	u60
   262   0006D2                     u61:
   263   0006D2  EF52  F003         	goto	l792
   264   0006D6                     u60:
   265   0006D6  0012               	return		;funcret
   266   0006D8                     __end_of_delay:
   267                           	callstack 0
   268                           
   269 ;; *************** function _isr *****************
   270 ;; Defined at:
   271 ;;		line 59 in file "Interrupt.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;  i               4    0[COMRAM] unsigned long 
   276 ;;  j               4    4[COMRAM] long 
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   286 ;;      Params:         0       0       0       0       0       0       0
   287 ;;      Locals:         8       0       0       0       0       0       0
   288 ;;      Temps:          0       0       0       0       0       0       0
   289 ;;      Totals:         8       0       0       0       0       0       0
   290 ;;Total ram usage:        8 bytes
   291 ;; Hardware stack levels used: 1
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		Interrupt level 2
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	intcode
   300   000008                     __pintcode:
   301                           	callstack 0
   302   000008                     _isr:
   303                           	callstack 29
   304                           
   305                           ;incstack = 0
   306   000008  8212               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   307   00000A  ED01  F003         	call	int_func,f	;refresh shadow registers
   308                           
   309                           	psect	intcode_body
   310   000602                     __pintcode_body:
   311                           	callstack 29
   312   000602                     int_func:
   313                           	callstack 29
   314   000602  0006               	pop		; remove dummy address from shadow register refresh
   315   000604                     
   316                           ;Interrupt.c: 61:     if(INT0IF==1)
   317   000604  A2F2               	btfss	4082,1,c	;volatile
   318   000606  EF07  F003         	goto	i2u3_41
   319   00060A  EF09  F003         	goto	i2u3_40
   320   00060E                     i2u3_41:
   321   00060E  EF46  F003         	goto	i2l54
   322   000612                     i2u3_40:
   323   000612                     
   324                           ;Interrupt.c: 62:     {;Interrupt.c: 63:         for(long j=1;j<=255;j=((j*2)))
   325   000612  0E01               	movlw	1
   326   000614  6E05               	movwf	isr@j^0,c
   327   000616  0E00               	movlw	0
   328   000618  6E06               	movwf	(isr@j+1)^0,c
   329   00061A  0E00               	movlw	0
   330   00061C  6E07               	movwf	(isr@j+2)^0,c
   331   00061E  0E00               	movlw	0
   332   000620  6E08               	movwf	(isr@j+3)^0,c
   333   000622                     i2l50:
   334                           
   335                           ;Interrupt.c: 64:         {;Interrupt.c: 65:             PORTC=j;
   336   000622  C005  FF82         	movff	isr@j,3970	;volatile
   337   000626                     
   338                           ;Interrupt.c: 66:             for(unsigned long i=0;i<30000;i++);
   339   000626  0E00               	movlw	0
   340   000628  6E01               	movwf	isr@i^0,c
   341   00062A  0E00               	movlw	0
   342   00062C  6E02               	movwf	(isr@i+1)^0,c
   343   00062E  0E00               	movlw	0
   344   000630  6E03               	movwf	(isr@i+2)^0,c
   345   000632  0E00               	movlw	0
   346   000634  6E04               	movwf	(isr@i+3)^0,c
   347   000636                     i2l786:
   348   000636  0E01               	movlw	1
   349   000638  2601               	addwf	isr@i^0,f,c
   350   00063A  0E00               	movlw	0
   351   00063C  2202               	addwfc	(isr@i+1)^0,f,c
   352   00063E  2203               	addwfc	(isr@i+2)^0,f,c
   353   000640  2204               	addwfc	(isr@i+3)^0,f,c
   354   000642  5004               	movf	(isr@i+3)^0,w,c
   355   000644  1003               	iorwf	(isr@i+2)^0,w,c
   356   000646  E10B               	bnz	i2u4_40
   357   000648  0E30               	movlw	48
   358   00064A  5C01               	subwf	isr@i^0,w,c
   359   00064C  0E75               	movlw	117
   360   00064E  5802               	subwfb	(isr@i+1)^0,w,c
   361   000650  A0D8               	btfss	status,0,c
   362   000652  EF2D  F003         	goto	i2u4_41
   363   000656  EF2F  F003         	goto	i2u4_40
   364   00065A                     i2u4_41:
   365   00065A  EF1B  F003         	goto	i2l786
   366   00065E                     i2u4_40:
   367   00065E                     
   368                           ;Interrupt.c: 67:         }
   369   00065E  90D8               	bcf	status,0,c
   370   000660  3405               	rlcf	isr@j^0,w,c
   371   000662  6E05               	movwf	isr@j^0,c
   372   000664  3406               	rlcf	(isr@j+1)^0,w,c
   373   000666  6E06               	movwf	(isr@j+1)^0,c
   374   000668  3407               	rlcf	(isr@j+2)^0,w,c
   375   00066A  6E07               	movwf	(isr@j+2)^0,c
   376   00066C  3408               	rlcf	(isr@j+3)^0,w,c
   377   00066E  6E08               	movwf	(isr@j+3)^0,c
   378   000670  BE08               	btfsc	(isr@j+3)^0,7,c
   379   000672  EF44  F003         	goto	i2u5_41
   380   000676  5008               	movf	(isr@j+3)^0,w,c
   381   000678  1007               	iorwf	(isr@j+2)^0,w,c
   382   00067A  E108               	bnz	i2u5_40
   383   00067C  0406               	decf	(isr@j+1)^0,w,c
   384   00067E  A0D8               	btfss	status,0,c
   385   000680  EF44  F003         	goto	i2u5_41
   386   000684  EF46  F003         	goto	i2u5_40
   387   000688                     i2u5_41:
   388   000688  EF11  F003         	goto	i2l50
   389   00068C                     i2u5_40:
   390   00068C                     i2l54:
   391   00068C  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   392   00068E  0011               	retfie		f
   393   000690                     __end_of_isr:
   394                           	callstack 0
   395                           
   396                           	psect	smallconst
   397   000600                     __psmallconst:
   398                           	callstack 0
   399   000600  00                 	db	0
   400   000601  00                 	db	0	; dummy byte at the end
   401   000000                     
   402                           	psect	rparam
   403   000000                     
   404                           	psect	temp
   405   000012                     btemp:
   406                           	callstack 0
   407   000012                     	ds	1
   408   000000                     int$flags	set	btemp
   409   000000                     wtemp8	set	btemp+1
   410   000000                     ttemp5	set	btemp+1
   411   000000                     ttemp6	set	btemp+4
   412   000000                     ttemp7	set	btemp+8
   413                           tosu	equ	0xFFF
   414                           tosh	equ	0xFFE
   415                           tosl	equ	0xFFD
   416                           stkptr	equ	0xFFC
   417                           pclatu	equ	0xFFB
   418                           pclath	equ	0xFFA
   419                           pcl	equ	0xFF9
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           prodh	equ	0xFF4
   425                           prodl	equ	0xFF3
   426                           indf0	equ	0xFEF
   427                           postinc0	equ	0xFEE
   428                           postdec0	equ	0xFED
   429                           preinc0	equ	0xFEC
   430                           plusw0	equ	0xFEB
   431                           fsr0h	equ	0xFEA
   432                           fsr0l	equ	0xFE9
   433                           wreg	equ	0xFE8
   434                           indf1	equ	0xFE7
   435                           postinc1	equ	0xFE6
   436                           postdec1	equ	0xFE5
   437                           preinc1	equ	0xFE4
   438                           plusw1	equ	0xFE3
   439                           fsr1h	equ	0xFE2
   440                           fsr1l	equ	0xFE1
   441                           bsr	equ	0xFE0
   442                           indf2	equ	0xFDF
   443                           postinc2	equ	0xFDE
   444                           postdec2	equ	0xFDD
   445                           preinc2	equ	0xFDC
   446                           plusw2	equ	0xFDB
   447                           fsr2h	equ	0xFDA
   448                           fsr2l	equ	0xFD9
   449                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     426
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                9     5      4     426
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  8     8      0      90
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     11      11       1       18.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhhl        5D      0       0      17        0.0%
BITBIGSFRhl          F      0       0      18        0.0%
BITBIGSFRl         282      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             5FF      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 22 09:12:24 2024

                     l21 06B0                       l24 06D6                       u60 06D6  
                     u61 06D2                      l830 06FA                      l824 06D8  
                    l826 06E4                      l828 06E6                      l790 0690  
                    l792 06A4                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      _isr 0008                     ?_isr 0001  
                   i2l50 0622                     i2l54 068C                     _main 06D8  
                   btemp 0012                     isr@i 0001                     isr@j 0005  
                   start 000E             ___param_bank 0000                    ??_isr 0001  
                  ?_main 0001                    i2l780 0626                    i2l772 0604  
                  i2l774 0612                    i2l786 0636                    i2l788 065E  
                  _PORTC 0F82                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _delay 0690                    ttemp5 0013  
                  ttemp6 0016                    ttemp7 001A                    status 0FD8  
                  wtemp8 0013          __initialization 071A             __end_of_main 071A  
                 ??_main 0012            __activetblptr 0000                   ?_delay 0009  
                 _INT0IF 7F91                   _INTCON 0FF2                   i2u3_40 0612  
                 i2u3_41 060E                   i2u4_40 065E                   i2u4_41 065A  
                 i2u5_40 068C                   i2u5_41 0688                   delay@i 000E  
                 delay@j 0009                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 071A            ___rparam_used 0001  
         __pcstackCOMRAM 0001            __end_of_delay 06D8                  ??_delay 000D  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 071A                  __ramtop 0600                  __ptext0 06D8  
                __ptext1 0690           __pintcode_body 0602     end_of_initialization 071A  
                int_func 0602      start_initialization 071A              __end_of_isr 0690  
              __pintcode 0008              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 int$flags 0012  
               intlevel2 0000  
