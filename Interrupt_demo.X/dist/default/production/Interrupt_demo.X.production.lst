

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Oct 01 11:37:27 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    17   000000                     
    18                           ; Generated 17/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4580 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _INTCON	set	4082
    53   000000                     _INT0IF	set	32657
    54   000000                     _TMR0	set	4054
    55   000000                     _PORTC	set	3970
    56   000000                     _TRISB	set	3987
    57   000000                     _TRISC	set	3988
    58   000000                     _TMR0IF	set	32658
    59   000000                     _ADCON1	set	4033
    60   000000                     _T0CON	set	4053
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65   007DC4                     __pcinit:
    66                           	callstack 0
    67   007DC4                     start_initialization:
    68                           	callstack 0
    69   007DC4                     __initialization:
    70                           	callstack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (2 bytes)
    73   007DC4  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
    74   007DC6  6A07               	clrf	__pbssCOMRAM& (0+255),c
    75   007DC8                     end_of_initialization:
    76                           	callstack 0
    77   007DC8                     __end_of__initialization:
    78                           	callstack 0
    79   007DC8  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80   007DCA  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81   007DCC  0E00               	movlw	low (__Lmediumconst shr (0+16))
    82   007DCE  6EF8               	movwf	tblptru,c
    83   007DD0  0100               	movlb	0
    84   007DD2  EF4A  F03F         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	bssCOMRAM
    87   000007                     __pbssCOMRAM:
    88                           	callstack 0
    89   000007                     _count:
    90                           	callstack 0
    91   000007                     	ds	2
    92                           
    93                           	psect	cstackCOMRAM
    94   000001                     __pcstackCOMRAM:
    95                           	callstack 0
    96   000001                     i2delay@i:
    97                           	callstack 0
    98                           
    99                           ; 2 bytes @ 0x0
   100   000001                     	ds	2
   101   000003                     delay@i:
   102                           	callstack 0
   103                           
   104                           ; 2 bytes @ 0x2
   105   000003                     	ds	2
   106   000005                     ??_main:
   107                           
   108                           ; 1 bytes @ 0x4
   109   000005                     	ds	2
   110                           
   111 ;;
   112 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   113 ;;
   114 ;; *************** function _main *****************
   115 ;; Defined at:
   116 ;;		line 22 in file "Interrupt.c"
   117 ;; Parameters:    Size  Location     Type
   118 ;;		None
   119 ;; Auto vars:     Size  Location     Type
   120 ;;		None
   121 ;; Return value:  Size  Location     Type
   122 ;;                  1    wreg      void 
   123 ;; Registers used:
   124 ;;		wreg, status,2, status,0, cstack
   125 ;; Tracked objects:
   126 ;;		On entry : 0/0
   127 ;;		On exit  : 0/0
   128 ;;		Unchanged: 0/0
   129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   130 ;;      Params:         0       0       0       0       0       0       0
   131 ;;      Locals:         0       0       0       0       0       0       0
   132 ;;      Temps:          2       0       0       0       0       0       0
   133 ;;      Totals:         2       0       0       0       0       0       0
   134 ;;Total ram usage:        2 bytes
   135 ;; Hardware stack levels required when called: 3
   136 ;; This function calls:
   137 ;;		_delay
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           	psect	text0
   144   007E94                     __ptext0:
   145                           	callstack 0
   146   007E94                     _main:
   147                           	callstack 28
   148   007E94                     
   149                           ;Interrupt.c: 24:     TRISC=0x00;
   150   007E94  0E00               	movlw	0
   151   007E96  6E94               	movwf	148,c	;volatile
   152                           
   153                           ;Interrupt.c: 25:     TRISB=0x01;
   154   007E98  0E01               	movlw	1
   155   007E9A  6E93               	movwf	147,c	;volatile
   156                           
   157                           ;Interrupt.c: 26:     INTCON=0xD0;
   158   007E9C  0ED0               	movlw	208
   159   007E9E  6EF2               	movwf	242,c	;volatile
   160                           
   161                           ;Interrupt.c: 27:     ADCON1=0X0f;
   162   007EA0  0E0F               	movlw	15
   163   007EA2  6EC1               	movwf	193,c	;volatile
   164                           
   165                           ;Interrupt.c: 28:     T0CON=0xC7;
   166   007EA4  0EC7               	movlw	199
   167   007EA6  6ED5               	movwf	213,c	;volatile
   168   007EA8  EF64  F03F         	goto	l758
   169   007EAC                     l35:
   170                           
   171                           ;Interrupt.c: 34:                 PORTC=0XFF;
   172   007EAC  6882               	setf	130,c	;volatile
   173                           
   174                           ;Interrupt.c: 35:                 break;
   175   007EAE  EF64  F03F         	goto	l758
   176   007EB2                     l750:
   177                           
   178                           ;Interrupt.c: 37:                 PORTC=0X00;
   179   007EB2  0E00               	movlw	0
   180   007EB4  6E82               	movwf	130,c	;volatile
   181                           
   182                           ;Interrupt.c: 38:                 break;
   183   007EB6  EF64  F03F         	goto	l758
   184   007EBA                     l38:
   185                           
   186                           ;Interrupt.c: 40:                 PORTC=0XFF;
   187   007EBA  6882               	setf	130,c	;volatile
   188   007EBC                     
   189                           ;Interrupt.c: 41:                 delay();
   190   007EBC  EC29  F03F         	call	_delay	;wreg free
   191   007EC0                     
   192                           ;Interrupt.c: 42:                 PORTC=0X00;
   193   007EC0  0E00               	movlw	0
   194   007EC2  6E82               	movwf	130,c	;volatile
   195   007EC4                     
   196                           ;Interrupt.c: 43:                 delay();
   197   007EC4  EC29  F03F         	call	_delay	;wreg free
   198   007EC8                     l758:
   199   007EC8  C007  F005         	movff	_count,??_main
   200   007ECC  C008  F006         	movff	_count+1,??_main+1
   201                           
   202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   203                           ; Switch size 1, requested type "simple"
   204                           ; Number of cases is 1, Range of values is 0 to 0
   205                           ; switch strategies available:
   206                           ; Name         Instructions Cycles
   207                           ; simple_byte            4     3 (average)
   208                           ;	Chosen strategy is simple_byte
   209   007ED0  5006               	movf	(??_main+1)^0,w,c
   210   007ED2  0A00               	xorlw	0	; case 0
   211   007ED4  B4D8               	btfsc	status,2,c
   212   007ED6  EF6F  F03F         	goto	l780
   213   007EDA  EF64  F03F         	goto	l758
   214   007EDE                     l780:
   215                           
   216                           ; Switch size 1, requested type "simple"
   217                           ; Number of cases is 3, Range of values is 1 to 3
   218                           ; switch strategies available:
   219                           ; Name         Instructions Cycles
   220                           ; simple_byte           10     6 (average)
   221                           ;	Chosen strategy is simple_byte
   222   007EDE  5005               	movf	??_main^0,w,c
   223   007EE0  0A01               	xorlw	1	; case 1
   224   007EE2  B4D8               	btfsc	status,2,c
   225   007EE4  EF56  F03F         	goto	l35
   226   007EE8  0A03               	xorlw	3	; case 2
   227   007EEA  B4D8               	btfsc	status,2,c
   228   007EEC  EF59  F03F         	goto	l750
   229   007EF0  0A01               	xorlw	1	; case 3
   230   007EF2  B4D8               	btfsc	status,2,c
   231   007EF4  EF5D  F03F         	goto	l38
   232   007EF8  EF64  F03F         	goto	l758
   233   007EFC  EF07  F000         	goto	start
   234   007F00                     __end_of_main:
   235                           	callstack 0
   236                           
   237 ;; *************** function _delay *****************
   238 ;; Defined at:
   239 ;;		line 10 in file "Interrupt.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  i               2    2[COMRAM] int 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   253 ;;      Params:         0       0       0       0       0       0       0
   254 ;;      Locals:         2       0       0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0       0       0
   256 ;;      Totals:         2       0       0       0       0       0       0
   257 ;;Total ram usage:        2 bytes
   258 ;; Hardware stack levels used: 1
   259 ;; Hardware stack levels required when called: 2
   260 ;; This function calls:
   261 ;;		Nothing
   262 ;; This function is called by:
   263 ;;		_main
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text1
   268   007E52                     __ptext1:
   269                           	callstack 0
   270   007E52                     _delay:
   271                           	callstack 28
   272   007E52                     
   273                           ;Interrupt.c: 12:     for(int i=0;i<=100;i++)
   274   007E52  0E00               	movlw	0
   275   007E54  6E04               	movwf	(delay@i+1)^0,c
   276   007E56  0E00               	movlw	0
   277   007E58  6E03               	movwf	delay@i^0,c
   278   007E5A                     l730:
   279                           
   280                           ;Interrupt.c: 13:     {;Interrupt.c: 14:         TMR0=61;
   281   007E5A  0E00               	movlw	0
   282   007E5C  6ED7               	movwf	215,c	;volatile
   283   007E5E  0E3D               	movlw	61
   284   007E60  6ED6               	movwf	214,c	;volatile
   285   007E62                     l23:
   286   007E62  A4F2               	btfss	4082,2,c	;volatile
   287   007E64  EF36  F03F         	goto	u11
   288   007E68  EF38  F03F         	goto	u10
   289   007E6C                     u11:
   290   007E6C  EF31  F03F         	goto	l23
   291   007E70                     u10:
   292   007E70                     
   293                           ;Interrupt.c: 16:         TMR0IF=0;
   294   007E70  94F2               	bcf	4082,2,c	;volatile
   295   007E72                     
   296                           ;Interrupt.c: 17:     }
   297   007E72  4A03               	infsnz	delay@i^0,f,c
   298   007E74  2A04               	incf	(delay@i+1)^0,f,c
   299   007E76  BE04               	btfsc	(delay@i+1)^0,7,c
   300   007E78  EF47  F03F         	goto	u21
   301   007E7C  5004               	movf	(delay@i+1)^0,w,c
   302   007E7E  E109               	bnz	u20
   303   007E80  0E65               	movlw	101
   304   007E82  5C03               	subwf	delay@i^0,w,c
   305   007E84  A0D8               	btfss	status,0,c
   306   007E86  EF47  F03F         	goto	u21
   307   007E8A  EF49  F03F         	goto	u20
   308   007E8E                     u21:
   309   007E8E  EF2D  F03F         	goto	l730
   310   007E92                     u20:
   311   007E92  0012               	return		;funcret
   312   007E94                     __end_of_delay:
   313                           	callstack 0
   314                           
   315 ;; *************** function _isr *****************
   316 ;; Defined at:
   317 ;;		line 49 in file "Interrupt.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, status,2, status,0, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   331 ;;      Params:         0       0       0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0       0       0
   334 ;;      Totals:         0       0       0       0       0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels used: 1
   337 ;; Hardware stack levels required when called: 1
   338 ;; This function calls:
   339 ;;		i2_delay
   340 ;; This function is called by:
   341 ;;		Interrupt level 2
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	intcode
   346   000008                     __pintcode:
   347                           	callstack 0
   348   000008                     _isr:
   349                           	callstack 28
   350                           
   351                           ;incstack = 0
   352   000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   353   00000A  EDEB  F03E         	call	int_func,f	;refresh shadow registers
   354                           
   355                           	psect	intcode_body
   356   007DD6                     __pintcode_body:
   357                           	callstack 28
   358   007DD6                     int_func:
   359                           	callstack 28
   360   007DD6  0006               	pop		; remove dummy address from shadow register refresh
   361   007DD8                     
   362                           ;Interrupt.c: 51:     if(INT0IF==1)
   363   007DD8  A2F2               	btfss	4082,1,c	;volatile
   364   007DDA  EFF1  F03E         	goto	i2u5_41
   365   007DDE  EFF3  F03E         	goto	i2u5_40
   366   007DE2                     i2u5_41:
   367   007DE2  EF06  F03F         	goto	i2l48
   368   007DE6                     i2u5_40:
   369   007DE6                     
   370                           ;Interrupt.c: 52:     {;Interrupt.c: 54:         if(count==3)
   371   007DE6  0E03               	movlw	3
   372   007DE8  1807               	xorwf	_count^0,w,c
   373   007DEA  1008               	iorwf	(_count+1)^0,w,c
   374   007DEC  A4D8               	btfss	status,2,c
   375   007DEE  EFFB  F03E         	goto	i2u6_41
   376   007DF2  EFFD  F03E         	goto	i2u6_40
   377   007DF6                     i2u6_41:
   378   007DF6  EF01  F03F         	goto	i2l770
   379   007DFA                     i2u6_40:
   380   007DFA                     
   381                           ;Interrupt.c: 55:         {;Interrupt.c: 56:             count=0;
   382   007DFA  0E00               	movlw	0
   383   007DFC  6E08               	movwf	(_count+1)^0,c
   384   007DFE  0E00               	movlw	0
   385   007E00  6E07               	movwf	_count^0,c
   386   007E02                     i2l770:
   387                           
   388                           ;Interrupt.c: 58:         delay();
   389   007E02  EC08  F03F         	call	i2_delay	;wreg free
   390   007E06                     
   391                           ;Interrupt.c: 59:         count++;
   392   007E06  4A07               	infsnz	_count^0,f,c
   393   007E08  2A08               	incf	(_count+1)^0,f,c
   394   007E0A                     
   395                           ;Interrupt.c: 60:         INT0IF=0;
   396   007E0A  92F2               	bcf	4082,1,c	;volatile
   397   007E0C                     i2l48:
   398   007E0C  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   399   007E0E  0011               	retfie		f
   400   007E10                     __end_of_isr:
   401                           	callstack 0
   402                           
   403 ;; *************** function i2_delay *****************
   404 ;; Defined at:
   405 ;;		line 10 in file "Interrupt.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  i               2    0[COMRAM] int 
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   419 ;;      Params:         0       0       0       0       0       0       0
   420 ;;      Locals:         2       0       0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		_isr
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text3
   433   007E10                     __ptext3:
   434                           	callstack 0
   435   007E10                     i2_delay:
   436                           	callstack 28
   437   007E10                     
   438                           ;Interrupt.c: 12:     for(int i=0;i<=100;i++)
   439   007E10  0E00               	movlw	0
   440   007E12  6E02               	movwf	(i2delay@i+1)^0,c
   441   007E14  0E00               	movlw	0
   442   007E16  6E01               	movwf	i2delay@i^0,c
   443   007E18                     i2l742:
   444                           
   445                           ;Interrupt.c: 13:     {;Interrupt.c: 14:         TMR0=61;
   446   007E18  0E00               	movlw	0
   447   007E1A  6ED7               	movwf	215,c	;volatile
   448   007E1C  0E3D               	movlw	61
   449   007E1E  6ED6               	movwf	214,c	;volatile
   450   007E20                     i2l23:
   451   007E20  A4F2               	btfss	4082,2,c	;volatile
   452   007E22  EF15  F03F         	goto	i2u3_41
   453   007E26  EF17  F03F         	goto	i2u3_40
   454   007E2A                     i2u3_41:
   455   007E2A  EF10  F03F         	goto	i2l23
   456   007E2E                     i2u3_40:
   457   007E2E                     
   458                           ;Interrupt.c: 16:         TMR0IF=0;
   459   007E2E  94F2               	bcf	4082,2,c	;volatile
   460   007E30                     
   461                           ;Interrupt.c: 17:     }
   462   007E30  4A01               	infsnz	i2delay@i^0,f,c
   463   007E32  2A02               	incf	(i2delay@i+1)^0,f,c
   464   007E34  BE02               	btfsc	(i2delay@i+1)^0,7,c
   465   007E36  EF26  F03F         	goto	i2u4_41
   466   007E3A  5002               	movf	(i2delay@i+1)^0,w,c
   467   007E3C  E109               	bnz	i2u4_40
   468   007E3E  0E65               	movlw	101
   469   007E40  5C01               	subwf	i2delay@i^0,w,c
   470   007E42  A0D8               	btfss	status,0,c
   471   007E44  EF26  F03F         	goto	i2u4_41
   472   007E48  EF28  F03F         	goto	i2u4_40
   473   007E4C                     i2u4_41:
   474   007E4C  EF0C  F03F         	goto	i2l742
   475   007E50                     i2u4_40:
   476   007E50  0012               	return		;funcret
   477   007E52                     __end_ofi2_delay:
   478                           	callstack 0
   479                           
   480                           	psect	smallconst
   481   001400                     __psmallconst:
   482                           	callstack 0
   483   001400  00                 	db	0
   484   001401  00                 	db	0	; dummy byte at the end
   485   000000                     
   486                           	psect	rparam
   487   000000                     
   488                           	psect	temp
   489   000009                     btemp:
   490                           	callstack 0
   491   000009                     	ds	1
   492   000000                     int$flags	set	btemp
   493   000000                     wtemp8	set	btemp+1
   494   000000                     ttemp5	set	btemp+1
   495   000000                     ttemp6	set	btemp+4
   496   000000                     ttemp7	set	btemp+8
   497                           tosu	equ	0xFFF
   498                           tosh	equ	0xFFE
   499                           tosl	equ	0xFFD
   500                           stkptr	equ	0xFFC
   501                           pclatu	equ	0xFFB
   502                           pclath	equ	0xFFA
   503                           pcl	equ	0xFF9
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           prodh	equ	0xFF4
   509                           prodl	equ	0xFF3
   510                           indf0	equ	0xFEF
   511                           postinc0	equ	0xFEE
   512                           postdec0	equ	0xFED
   513                           preinc0	equ	0xFEC
   514                           plusw0	equ	0xFEB
   515                           fsr0h	equ	0xFEA
   516                           fsr0l	equ	0xFE9
   517                           wreg	equ	0xFE8
   518                           indf1	equ	0xFE7
   519                           postinc1	equ	0xFE6
   520                           postdec1	equ	0xFE5
   521                           preinc1	equ	0xFE4
   522                           plusw1	equ	0xFE3
   523                           fsr1h	equ	0xFE2
   524                           fsr1l	equ	0xFE1
   525                           bsr	equ	0xFE0
   526                           indf2	equ	0xFDF
   527                           postinc2	equ	0xFDE
   528                           postdec2	equ	0xFDD
   529                           preinc2	equ	0xFDC
   530                           plusw2	equ	0xFDB
   531                           fsr2h	equ	0xFDA
   532                           fsr2l	equ	0xFD9
   533                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay

Critical Paths under _isr in COMRAM

    _isr->i2_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              4 COMRAM     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     2      0      30
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  0     0      0      30
                            i2_delay
 ---------------------------------------------------------------------------------
 (3) i2_delay                                              2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 _isr (ROOT)
   i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
BITBIGSFRlll       282      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6       8       1        8.5%
BITBIGSFRlhl        2C      0       0      19        0.0%
BITBIGSFRhl         1A      0       0      17        0.0%
BITBIGSFRlhh        13      0       0      18        0.0%
BITBIGSFRllh        10      0       0      20        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      22        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Oct 01 11:37:27 2024

                     l23 7E62                       l25 7E70                       l26 7E92  
                     l35 7EAC                       l38 7EBA                       u10 7E70  
                     u11 7E6C                       u20 7E92                       u21 7E8E  
                    l730 7E5A                      l732 7E72                      l724 7E52  
                    l734 7E76                      l750 7EB2                      l752 7EBC  
                    l754 7EC0                      l780 7EDE                      l756 7EC4  
                    l748 7E94                      l758 7EC8                      _isr 0008  
                   ?_isr 0001                     i2l23 7E20                     i2l25 7E2E  
                   i2l26 7E50                     i2l48 7E0C                     _TMR0 0FD6  
                   _main 7E94                     btemp 0009          __end_ofi2_delay 7E52  
                   start 000E             ___param_bank 0000                    ??_isr 0003  
                  ?_main 0001                    _T0CON 0FD5                    i2l742 7E18  
                  i2l744 7E30                    i2l736 7E10                    i2l746 7E34  
                  i2l770 7E02                    i2l772 7E06                    i2l764 7DD8  
                  i2l774 7E0A                    i2l766 7DE6                    i2l768 7DFA  
                  _PORTC 0F82                    _TRISB 0F93                    _TRISC 0F94  
                  _delay 7E52                    _count 0007                    ttemp5 000A  
                  ttemp6 000D                    ttemp7 0011                    status 0FD8  
                  wtemp8 000A          __initialization 7DC4             __end_of_main 7F00  
                 ??_main 0005            __activetblptr 0002                   ?_delay 0001  
                 _ADCON1 0FC1                ??i2_delay 0001                   _INT0IF 7F91  
                 _INTCON 0FF2                   _TMR0IF 7F92                   i2u3_40 7E2E  
                 i2u3_41 7E2A                   i2u4_40 7E50                   i2u4_41 7E4C  
                 i2u5_40 7DE6                   i2u5_41 7DE2                   i2u6_40 7DFA  
                 i2u6_41 7DF6                   delay@i 0003                   isa$std 0001  
           __mediumconst 0000                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 7DC8            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_delay 7E94                  ??_delay 0003                  i2_delay 7E10  
                __Hparam 0000                  __Lparam 0000             __psmallconst 1400  
                __pcinit 7DC4                  __ramtop 0600                  __ptext0 7E94  
                __ptext1 7E52                  __ptext3 7E10           __pintcode_body 7DD6  
   end_of_initialization 7DC8            __Lmediumconst 0000                  int_func 7DD6  
    start_initialization 7DC4              __end_of_isr 7E10              __pbssCOMRAM 0007  
               ?i2_delay 0001                __pintcode 0008              __smallconst 1400  
               i2delay@i 0001                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000                 int$flags 0009                 intlevel2 0000  
