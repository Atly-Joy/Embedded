

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 30 10:21:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4580 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _RC2	set	31762
    48   000000                     _RC1	set	31761
    49   000000                     _TRISC	set	3988
    50   000000                     _RC0	set	31760
    51   000000                     _TRISD	set	3989
    52   000000                     _PORTD	set	3971
    53                           
    54                           ; #config settings
    55                           
    56                           	psect	cinit
    57   0007AC                     __pcinit:
    58                           	callstack 0
    59   0007AC                     start_initialization:
    60                           	callstack 0
    61   0007AC                     __initialization:
    62                           	callstack 0
    63   0007AC                     end_of_initialization:
    64                           	callstack 0
    65   0007AC                     __end_of__initialization:
    66                           	callstack 0
    67   0007AC  0100               	movlb	0
    68   0007AE  EF01  F003         	goto	_main	;jump to C main() function
    69                           
    70                           	psect	cstackCOMRAM
    71   000001                     __pcstackCOMRAM:
    72                           	callstack 0
    73   000001                     delay@j:
    74                           	callstack 0
    75                           
    76                           ; 4 bytes @ 0x0
    77   000001                     	ds	4
    78   000005                     ??_delay:
    79                           
    80                           ; 1 bytes @ 0x4
    81   000005                     	ds	1
    82   000006                     delay@i:
    83                           	callstack 0
    84                           
    85                           ; 4 bytes @ 0x5
    86   000006                     	ds	4
    87   00000A                     ??_main:
    88                           
    89                           ; 1 bytes @ 0x9
    90   00000A                     	ds	4
    91   00000E                     main@i:
    92                           	callstack 0
    93                           
    94                           ; 2 bytes @ 0xD
    95   00000E                     	ds	2
    96   000010                     main@i_42:
    97                           	callstack 0
    98                           
    99                           ; 2 bytes @ 0xF
   100   000010                     	ds	2
   101   000012                     main@j:
   102                           	callstack 0
   103                           
   104                           ; 4 bytes @ 0x11
   105   000012                     	ds	4
   106   000016                     main@k:
   107                           	callstack 0
   108                           
   109                           ; 4 bytes @ 0x15
   110   000016                     	ds	4
   111                           
   112 ;;
   113 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   114 ;;
   115 ;; *************** function _main *****************
   116 ;; Defined at:
   117 ;;		line 15 in file "PULLUP_DOWN.c"
   118 ;; Parameters:    Size  Location     Type
   119 ;;		None
   120 ;; Auto vars:     Size  Location     Type
   121 ;;  i               2   15[COMRAM] int 
   122 ;;  i               2   13[COMRAM] int 
   123 ;;  k               4   21[COMRAM] long 
   124 ;;  j               4   17[COMRAM] long 
   125 ;; Return value:  Size  Location     Type
   126 ;;                  1    wreg      void 
   127 ;; Registers used:
   128 ;;		wreg, status,2, status,0, cstack
   129 ;; Tracked objects:
   130 ;;		On entry : 0/0
   131 ;;		On exit  : 0/0
   132 ;;		Unchanged: 0/0
   133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   134 ;;      Params:         0       0       0       0       0       0       0
   135 ;;      Locals:        12       0       0       0       0       0       0
   136 ;;      Temps:          4       0       0       0       0       0       0
   137 ;;      Totals:        16       0       0       0       0       0       0
   138 ;;Total ram usage:       16 bytes
   139 ;; Hardware stack levels required when called: 1
   140 ;; This function calls:
   141 ;;		_delay
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148   000602                     __ptext0:
   149                           	callstack 0
   150   000602                     _main:
   151                           	callstack 30
   152   000602                     
   153                           ;PULLUP_DOWN.c: 17:     TRISC=0xFF;
   154   000602  6894               	setf	148,c	;volatile
   155   000604                     
   156                           ;PULLUP_DOWN.c: 18:     TRISD=0x00;
   157   000604  0E00               	movlw	0
   158   000606  6E95               	movwf	149,c	;volatile
   159   000608                     l777:
   160                           
   161                           ;PULLUP_DOWN.c: 20:     {;PULLUP_DOWN.c: 21:         if(RC0==1)
   162   000608  A082               	btfss	3970,0,c	;volatile
   163   00060A  EF09  F003         	goto	u101
   164   00060E  EF0B  F003         	goto	u100
   165   000612                     u101:
   166   000612  EF24  F003         	goto	l24
   167   000616                     u100:
   168   000616                     
   169                           ;PULLUP_DOWN.c: 22:         {;PULLUP_DOWN.c: 23:             PORTD=0xFF;
   170   000616  6883               	setf	131,c	;volatile
   171   000618                     
   172                           ;PULLUP_DOWN.c: 24:             delay(30000);
   173   000618  0E30               	movlw	48
   174   00061A  6E01               	movwf	delay@j^0,c
   175   00061C  0E75               	movlw	117
   176   00061E  6E02               	movwf	(delay@j+1)^0,c
   177   000620  0E00               	movlw	0
   178   000622  6E03               	movwf	(delay@j+2)^0,c
   179   000624  0E00               	movlw	0
   180   000626  6E04               	movwf	(delay@j+3)^0,c
   181   000628  ECB2  F003         	call	_delay	;wreg free
   182   00062C                     
   183                           ;PULLUP_DOWN.c: 25:             PORTD=0x00;
   184   00062C  0E00               	movlw	0
   185   00062E  6E83               	movwf	131,c	;volatile
   186   000630                     
   187                           ;PULLUP_DOWN.c: 26:             delay(30000);
   188   000630  0E30               	movlw	48
   189   000632  6E01               	movwf	delay@j^0,c
   190   000634  0E75               	movlw	117
   191   000636  6E02               	movwf	(delay@j+1)^0,c
   192   000638  0E00               	movlw	0
   193   00063A  6E03               	movwf	(delay@j+2)^0,c
   194   00063C  0E00               	movlw	0
   195   00063E  6E04               	movwf	(delay@j+3)^0,c
   196   000640  ECB2  F003         	call	_delay	;wreg free
   197                           
   198                           ;PULLUP_DOWN.c: 28:         }
   199   000644  EF04  F003         	goto	l777
   200   000648                     l24:
   201   000648  A282               	btfss	3970,1,c	;volatile
   202   00064A  EF29  F003         	goto	u111
   203   00064E  EF2B  F003         	goto	u110
   204   000652                     u111:
   205   000652  EF64  F003         	goto	l26
   206   000656                     u110:
   207   000656                     
   208                           ;PULLUP_DOWN.c: 30:         {;PULLUP_DOWN.c: 31:             for(long j=1;j<=128;j=j*2)
   209   000656  0E01               	movlw	1
   210   000658  6E12               	movwf	main@j^0,c
   211   00065A  0E00               	movlw	0
   212   00065C  6E13               	movwf	(main@j+1)^0,c
   213   00065E  0E00               	movlw	0
   214   000660  6E14               	movwf	(main@j+2)^0,c
   215   000662  0E00               	movlw	0
   216   000664  6E15               	movwf	(main@j+3)^0,c
   217   000666                     l27:
   218                           
   219                           ;PULLUP_DOWN.c: 32:             {;PULLUP_DOWN.c: 33:                 PORTD=j;
   220   000666  C012  FF83         	movff	main@j,3971	;volatile
   221   00066A                     
   222                           ;PULLUP_DOWN.c: 34:                 for(int i=0;i<=30000;i++);
   223   00066A  0E00               	movlw	0
   224   00066C  6E0F               	movwf	(main@i+1)^0,c
   225   00066E  0E00               	movlw	0
   226   000670  6E0E               	movwf	main@i^0,c
   227   000672                     l799:
   228   000672  4A0E               	infsnz	main@i^0,f,c
   229   000674  2A0F               	incf	(main@i+1)^0,f,c
   230   000676  BE0F               	btfsc	(main@i+1)^0,7,c
   231   000678  EF47  F003         	goto	u121
   232   00067C  0E31               	movlw	49
   233   00067E  5C0E               	subwf	main@i^0,w,c
   234   000680  0E75               	movlw	117
   235   000682  580F               	subwfb	(main@i+1)^0,w,c
   236   000684  A0D8               	btfss	status,0,c
   237   000686  EF47  F003         	goto	u121
   238   00068A  EF49  F003         	goto	u120
   239   00068E                     u121:
   240   00068E  EF39  F003         	goto	l799
   241   000692                     u120:
   242   000692                     
   243                           ;PULLUP_DOWN.c: 35:             }
   244   000692  90D8               	bcf	status,0,c
   245   000694  3412               	rlcf	main@j^0,w,c
   246   000696  6E12               	movwf	main@j^0,c
   247   000698  3413               	rlcf	(main@j+1)^0,w,c
   248   00069A  6E13               	movwf	(main@j+1)^0,c
   249   00069C  3414               	rlcf	(main@j+2)^0,w,c
   250   00069E  6E14               	movwf	(main@j+2)^0,c
   251   0006A0  3415               	rlcf	(main@j+3)^0,w,c
   252   0006A2  6E15               	movwf	(main@j+3)^0,c
   253   0006A4  BE15               	btfsc	(main@j+3)^0,7,c
   254   0006A6  EF60  F003         	goto	u131
   255   0006AA  5015               	movf	(main@j+3)^0,w,c
   256   0006AC  1014               	iorwf	(main@j+2)^0,w,c
   257   0006AE  1013               	iorwf	(main@j+1)^0,w,c
   258   0006B0  E109               	bnz	u130
   259   0006B2  0E81               	movlw	129
   260   0006B4  5C12               	subwf	main@j^0,w,c
   261   0006B6  A0D8               	btfss	status,0,c
   262   0006B8  EF60  F003         	goto	u131
   263   0006BC  EF62  F003         	goto	u130
   264   0006C0                     u131:
   265   0006C0  EF33  F003         	goto	l27
   266   0006C4                     u130:
   267   0006C4  EF04  F003         	goto	l777
   268   0006C8                     l26:
   269   0006C8  A482               	btfss	3970,2,c	;volatile
   270   0006CA  EF69  F003         	goto	u141
   271   0006CE  EF6B  F003         	goto	u140
   272   0006D2                     u141:
   273   0006D2  EFAE  F003         	goto	l25
   274   0006D6                     u140:
   275   0006D6                     
   276                           ;PULLUP_DOWN.c: 38:         {;PULLUP_DOWN.c: 39:             for(long k=1;k<=255;k=((k*2
      +                          )+1))
   277   0006D6  0E01               	movlw	1
   278   0006D8  6E16               	movwf	main@k^0,c
   279   0006DA  0E00               	movlw	0
   280   0006DC  6E17               	movwf	(main@k+1)^0,c
   281   0006DE  0E00               	movlw	0
   282   0006E0  6E18               	movwf	(main@k+2)^0,c
   283   0006E2  0E00               	movlw	0
   284   0006E4  6E19               	movwf	(main@k+3)^0,c
   285   0006E6                     l33:
   286                           
   287                           ;PULLUP_DOWN.c: 40:             {;PULLUP_DOWN.c: 41:                 PORTD=k;
   288   0006E6  C016  FF83         	movff	main@k,3971	;volatile
   289   0006EA                     
   290                           ;PULLUP_DOWN.c: 42:                 for(int i=0;i<30000;i++);
   291   0006EA  0E00               	movlw	0
   292   0006EC  6E11               	movwf	(main@i_42+1)^0,c
   293   0006EE  0E00               	movlw	0
   294   0006F0  6E10               	movwf	main@i_42^0,c
   295   0006F2                     l817:
   296   0006F2  4A10               	infsnz	main@i_42^0,f,c
   297   0006F4  2A11               	incf	(main@i_42+1)^0,f,c
   298   0006F6  BE11               	btfsc	(main@i_42+1)^0,7,c
   299   0006F8  EF87  F003         	goto	u151
   300   0006FC  0E30               	movlw	48
   301   0006FE  5C10               	subwf	main@i_42^0,w,c
   302   000700  0E75               	movlw	117
   303   000702  5811               	subwfb	(main@i_42+1)^0,w,c
   304   000704  A0D8               	btfss	status,0,c
   305   000706  EF87  F003         	goto	u151
   306   00070A  EF89  F003         	goto	u150
   307   00070E                     u151:
   308   00070E  EF79  F003         	goto	l817
   309   000712                     u150:
   310   000712                     
   311                           ;PULLUP_DOWN.c: 43:             }
   312   000712  90D8               	bcf	status,0,c
   313   000714  3416               	rlcf	main@k^0,w,c
   314   000716  6E0A               	movwf	??_main^0,c
   315   000718  3417               	rlcf	(main@k+1)^0,w,c
   316   00071A  6E0B               	movwf	(??_main+1)^0,c
   317   00071C  3418               	rlcf	(main@k+2)^0,w,c
   318   00071E  6E0C               	movwf	(??_main+2)^0,c
   319   000720  3419               	rlcf	(main@k+3)^0,w,c
   320   000722  6E0D               	movwf	(??_main+3)^0,c
   321   000724  0E01               	movlw	1
   322   000726  240A               	addwf	??_main^0,w,c
   323   000728  6E16               	movwf	main@k^0,c
   324   00072A  0E00               	movlw	0
   325   00072C  200B               	addwfc	(??_main+1)^0,w,c
   326   00072E  6E17               	movwf	(main@k+1)^0,c
   327   000730  0E00               	movlw	0
   328   000732  200C               	addwfc	(??_main+2)^0,w,c
   329   000734  6E18               	movwf	(main@k+2)^0,c
   330   000736  0E00               	movlw	0
   331   000738  200D               	addwfc	(??_main+3)^0,w,c
   332   00073A  6E19               	movwf	(main@k+3)^0,c
   333   00073C  BE19               	btfsc	(main@k+3)^0,7,c
   334   00073E  EFAA  F003         	goto	u161
   335   000742  5019               	movf	(main@k+3)^0,w,c
   336   000744  1018               	iorwf	(main@k+2)^0,w,c
   337   000746  E108               	bnz	u160
   338   000748  0417               	decf	(main@k+1)^0,w,c
   339   00074A  A0D8               	btfss	status,0,c
   340   00074C  EFAA  F003         	goto	u161
   341   000750  EFAC  F003         	goto	u160
   342   000754                     u161:
   343   000754  EF73  F003         	goto	l33
   344   000758                     u160:
   345   000758  EF04  F003         	goto	l777
   346   00075C                     l25:
   347   00075C  EF04  F003         	goto	l777
   348   000760  EF00  F000         	goto	start
   349   000764                     __end_of_main:
   350                           	callstack 0
   351                           
   352 ;; *************** function _delay *****************
   353 ;; Defined at:
   354 ;;		line 10 in file "PULLUP_DOWN.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;  j               4    0[COMRAM] long 
   357 ;; Auto vars:     Size  Location     Type
   358 ;;  i               4    5[COMRAM] long 
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, status,2, status,0
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   368 ;;      Params:         4       0       0       0       0       0       0
   369 ;;      Locals:         4       0       0       0       0       0       0
   370 ;;      Temps:          1       0       0       0       0       0       0
   371 ;;      Totals:         9       0       0       0       0       0       0
   372 ;;Total ram usage:        9 bytes
   373 ;; Hardware stack levels used: 1
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text1
   382   000764                     __ptext1:
   383                           	callstack 0
   384   000764                     _delay:
   385                           	callstack 30
   386   000764                     
   387                           ;PULLUP_DOWN.c: 10: void delay(long j);PULLUP_DOWN.c: 11: {;PULLUP_DOWN.c: 12:     for(l
      +                          ong i=0;i<=j;i++);
   388   000764  0E00               	movlw	0
   389   000766  6E06               	movwf	delay@i^0,c
   390   000768  0E00               	movlw	0
   391   00076A  6E07               	movwf	(delay@i+1)^0,c
   392   00076C  0E00               	movlw	0
   393   00076E  6E08               	movwf	(delay@i+2)^0,c
   394   000770  0E00               	movlw	0
   395   000772  6E09               	movwf	(delay@i+3)^0,c
   396   000774  EFC2  F003         	goto	l15
   397   000778                     l771:
   398   000778  0E01               	movlw	1
   399   00077A  2606               	addwf	delay@i^0,f,c
   400   00077C  0E00               	movlw	0
   401   00077E  2207               	addwfc	(delay@i+1)^0,f,c
   402   000780  2208               	addwfc	(delay@i+2)^0,f,c
   403   000782  2209               	addwfc	(delay@i+3)^0,f,c
   404   000784                     l15:
   405   000784  5006               	movf	delay@i^0,w,c
   406   000786  5C01               	subwf	delay@j^0,w,c
   407   000788  5007               	movf	(delay@i+1)^0,w,c
   408   00078A  5802               	subwfb	(delay@j+1)^0,w,c
   409   00078C  5008               	movf	(delay@i+2)^0,w,c
   410   00078E  5803               	subwfb	(delay@j+2)^0,w,c
   411   000790  5004               	movf	(delay@j+3)^0,w,c
   412   000792  0A80               	xorlw	128
   413   000794  6E05               	movwf	??_delay^0,c
   414   000796  5009               	movf	(delay@i+3)^0,w,c
   415   000798  0A80               	xorlw	128
   416   00079A  5805               	subwfb	??_delay^0,w,c
   417   00079C  B0D8               	btfsc	status,0,c
   418   00079E  EFD3  F003         	goto	u91
   419   0007A2  EFD5  F003         	goto	u90
   420   0007A6                     u91:
   421   0007A6  EFBC  F003         	goto	l771
   422   0007AA                     u90:
   423   0007AA  0012               	return		;funcret
   424   0007AC                     __end_of_delay:
   425                           	callstack 0
   426                           
   427                           	psect	smallconst
   428   000600                     __psmallconst:
   429                           	callstack 0
   430   000600  00                 	db	0
   431   000601  00                 	db	0	; dummy byte at the end
   432   000000                     
   433                           	psect	rparam
   434   000000                     tosu	equ	0xFFF
   435                           tosh	equ	0xFFE
   436                           tosl	equ	0xFFD
   437                           stkptr	equ	0xFFC
   438                           pclatu	equ	0xFFB
   439                           pclath	equ	0xFFA
   440                           pcl	equ	0xFF9
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           prodh	equ	0xFF4
   446                           prodl	equ	0xFF3
   447                           indf0	equ	0xFEF
   448                           postinc0	equ	0xFEE
   449                           postdec0	equ	0xFED
   450                           preinc0	equ	0xFEC
   451                           plusw0	equ	0xFEB
   452                           fsr0h	equ	0xFEA
   453                           fsr0l	equ	0xFE9
   454                           wreg	equ	0xFE8
   455                           indf1	equ	0xFE7
   456                           postinc1	equ	0xFE6
   457                           postdec1	equ	0xFE5
   458                           preinc1	equ	0xFE4
   459                           plusw1	equ	0xFE3
   460                           fsr1h	equ	0xFE2
   461                           fsr1l	equ	0xFE1
   462                           bsr	equ	0xFE0
   463                           indf2	equ	0xFDF
   464                           postinc2	equ	0xFDE
   465                           postdec2	equ	0xFDD
   466                           preinc2	equ	0xFDC
   467                           plusw2	equ	0xFDB
   468                           fsr2h	equ	0xFDA
   469                           fsr2l	equ	0xFD9
   470                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     470
                                              9 COMRAM    16    16      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                9     5      4     198
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     19      19       1       26.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 30 10:21:05 2024

                     l15 0784                       l24 0648                       l33 06E6  
                     l25 075C                       l18 07AA                       l26 06C8  
                     l27 0666                       u90 07AA                       u91 07A6  
                    l801 0676                      l811 06EA                      l803 0692  
                    l821 0712                      l805 06D6                      l817 06F2  
                    l771 0778                      l819 06F6                      l781 0618  
                    l773 0602                      l783 062C                      l775 0604  
                    l769 0764                      l793 066A                      l785 0630  
                    l777 0608                      l787 0656                      l779 0616  
                    l799 0672                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      u100 0616                      u101 0612  
                    u110 0656                      u111 0652                      u120 0692  
                    u121 068E                      u130 06C4                      u131 06C0  
                    u140 06D6                      u141 06D2                      u150 0712  
                    u151 070E                      u160 0758                      u161 0754  
                   _main 0602                     start 0000             ___param_bank 0000  
                  ?_main 0001                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95                    _delay 0764                    main@i 000E  
                  main@j 0012                    main@k 0016                    status 0FD8  
        __initialization 07AC             __end_of_main 0764                   ??_main 000A  
          __activetblptr 0000                   ?_delay 0001                   delay@i 0006  
                 delay@j 0001                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 07AC            ___rparam_used 0001  
         __pcstackCOMRAM 0001            __end_of_delay 07AC                  ??_delay 0005  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 07AC                  __ramtop 0600                  __ptext0 0602  
                __ptext1 0764     end_of_initialization 07AC      start_initialization 07AC  
            __smallconst 0600                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000                 main@i_42 0010  
